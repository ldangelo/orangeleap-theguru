DELIMITER $$

DROP PROCEDURE IF EXISTS GENERATE_FIELD_DEFINITIONS$$

CREATE PROCEDURE GENERATE_FIELD_DEFINITIONS(VIEWNAME VARCHAR(255))
BEGIN
	DECLARE CSR_END INT DEFAULT 0;
	DECLARE VAR_VIEW_DROP_TEXT VARCHAR(1000);
	DECLARE VAR_VIEW_SELECT_TEXT VARCHAR(8000);
	DECLARE VAR_VIEW_FROM_TEXT VARCHAR(8000);
	DECLARE VAR_TABLE_NAME VARCHAR(255);
	DECLARE VAR_FIRST_FIELD BIT;
	DECLARE VAR_NEW_LINE VARCHAR(10);
	DECLARE VAR_TAB VARCHAR(10);

	-- THEGURU_VIEW Variables
	DECLARE VAR_VIEW_ID INTEGER;
	DECLARE VAR_VIEW_NAME VARCHAR(255);
	DECLARE VAR_VIEW_DISPLAY_TEXT VARCHAR(255);
	DECLARE VAR_PRIMARY_TABLE VARCHAR(255);
	DECLARE VAR_PRIMARY_TABLE_IS_VIEW BIT;
	DECLARE VAR_PRIMARY_TABLE_ALIAS VARCHAR(255);
	DECLARE VAR_PRIMARY_TABLE_COLUMN_PREFIX VARCHAR(255);
	DECLARE VAR_PRIMARY_TABLE_FIELD_GROUP_PREFIX VARCHAR(255);
	DECLARE VAR_PRIMARY_TABLE_FIELD_GROUP_OVERRIDE VARCHAR(255);
	DECLARE VAR_PRIMARY_TABLE_PARENT_ENTITY_TYPE VARCHAR(255);
	DECLARE VAR_PRIMARY_TABLE_SUB_FIELD_NAME VARCHAR(255);
	DECLARE VAR_PRIMARY_TABLE_DEFAULT_PAGE_TYPE VARCHAR(255);

	-- INFORMATION_SCHEMA.COLUMNS Variables
	DECLARE VAR_FIELD_NAME VARCHAR(255);
	DECLARE VAR_FIELD_TYPE VARCHAR(255);

	-- DATASUBSOURCE Variables
	DECLARE VAR_REPORTSUBSOURCE_ID INT;
	DECLARE VAR_DATASUBSOURCE_VIEW_NAME VARCHAR(255);

	DECLARE CSR_VIEWS CURSOR FOR
		SELECT
			VIEW_ID, VIEW_NAME, VIEW_DISPLAY_TEXT, PRIMARY_TABLE, PRIMARY_TABLE_IS_VIEW, PRIMARY_TABLE_ALIAS, PRIMARY_TABLE_COLUMN_PREFIX, FIELD_GROUP_PREFIX, FIELD_GROUP_OVERRIDE, PARENT_ENTITY_TYPE, SUB_FIELD_NAME, DEFAULT_PAGE_TYPE
		FROM THEGURU_VIEW
		WHERE VIEW_NAME = VAR_DATASUBSOURCE_VIEW_NAME
		ORDER BY SORT_ORDER;

	DECLARE CSR_DATASUBSOURCES CURSOR FOR
		SELECT REPORTSUBSOURCE_ID, VIEW_NAME
		FROM REPORTDATASUBSOURCE
		WHERE LENGTH(VIEW_NAME) <= 255
		AND (VIEW_NAME = VIEWNAME OR VIEWNAME IS NULL);

	DECLARE CONTINUE HANDLER FOR NOT FOUND SET CSR_END = 1;

	SET max_sp_recursion_depth=50;
	SET VAR_FIRST_FIELD = TRUE;
	SET VAR_NEW_LINE = '\r\n';
	SET VAR_TAB = '\t';

	-- Delete and rebuild and picklist custom field definitions in THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
	-- Just project code custom fields for now (GLPART01, etc.)
	DELETE FROM THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS WHERE PICKLIST_CUSTOM_FIELD = TRUE
	AND DISPLAY_NAME NOT IN ('Designation GL Account String 1', 'Designation GL Account String 2');

	DROP TABLE IF EXISTS TEMP_OL_PICKLIST_CUSTOM_FIELDS;

	SET @execString = CONCAT('CREATE TABLE TEMP_OL_PICKLIST_CUSTOM_FIELDS', VAR_NEW_LINE,
	'SELECT PICKLIST_NAME_ID, PICKLIST_DESC, PICKLIST_NAME, REPLACE(FIELD_NAME, ''item-template-'', '''') AS FIELD_NAME, FIELD_VALUE', VAR_NEW_LINE,
	'FROM ', REPLACE(DATABASE(), 'theguru', '.'), 'PICKLIST', VAR_NEW_LINE,
	'JOIN ', REPLACE(DATABASE(), 'theguru', '.'), 'CUSTOM_FIELD ON PICKLIST.PICKLIST_ID = CUSTOM_FIELD.ENTITY_ID AND CUSTOM_FIELD.ENTITY_TYPE = ''picklist''', VAR_NEW_LINE,
	'WHERE FIELD_NAME LIKE ''item-template-%''', VAR_NEW_LINE,
	'AND PICKLIST_NAME = ''projectCode'';');
	PREPARE statement FROM @execString;
	EXECUTE statement;
	DEALLOCATE PREPARE statement;

	INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
	(TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE, PICKLIST_CUSTOM_FIELD,
	PICKLIST_NAME_ID, PICKLIST_ITEM_NAME, CUSTOM_FIELD_ENTITY_TYPE, CUSTOM_FIELD_ENTITY_ID, CUSTOM_FIELD_FIELD_NAME, 
	SOURCE_COLUMN_NAME, CONSTITUENT_JOIN_FIELD)
	SELECT 'DISTRO_LINE', 'Distribution Information',  CONCAT(PICKLIST_DESC, ' ', FIELD_NAME),
	CONCAT('GETCUSTOMFIELD(GETPICKLISTITEMIDBYITEMNAME(''', PICKLIST_NAME, ''', ${COLUMN_PREFIX}PROJECT_CODE), ''picklistItem'', ''', FIELD_NAME, ''')'),
	UPPER(CONCAT(PICKLIST_NAME, '_', REPLACE(FIELD_NAME, '-', ''))), 1, TRUE,
	PICKLIST_NAME, 'PROJECT_CODE', 'picklistItem', 'PICKLIST_ITEM_ID', FIELD_NAME,
	'${CUSTOM_FIELD}.FIELD_VALUE', NULL
	FROM TEMP_OL_PICKLIST_CUSTOM_FIELDS;
  
	INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
	(TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE, PICKLIST_CUSTOM_FIELD,
	PICKLIST_NAME_ID, PICKLIST_ITEM_NAME, CUSTOM_FIELD_ENTITY_TYPE, CUSTOM_FIELD_ENTITY_ID, CUSTOM_FIELD_FIELD_NAME,
	SOURCE_COLUMN_NAME, CONSTITUENT_JOIN_FIELD)
	SELECT 'GIFT_IN_KIND_DETAIL', 'Gift In Kind Details',  CONCAT(PICKLIST_DESC, ' ', FIELD_NAME),
	CONCAT('GETCUSTOMFIELD(GETPICKLISTITEMIDBYITEMNAME(''', PICKLIST_NAME, ''', ${COLUMN_PREFIX}PROJECT_CODE), ''picklistItem'', ''', FIELD_NAME, ''')'),
	UPPER(CONCAT(PICKLIST_NAME, '_', REPLACE(FIELD_NAME, '-', ''))), 1, TRUE,
	PICKLIST_NAME, 'PROJECT_CODE', 'picklistItem', 'PICKLIST_ITEM_ID', FIELD_NAME,
	'${CUSTOM_FIELD}.FIELD_VALUE', NULL
	FROM TEMP_OL_PICKLIST_CUSTOM_FIELDS;

	DROP TABLE IF EXISTS TEMP_OL_PICKLIST_CUSTOM_FIELDS;

	-- Get OL field definition information
	DROP TABLE IF EXISTS TEMP_OL_FIELD_DEFINITIONS;
	SET @execString = CONCAT('CREATE TABLE TEMP_OL_FIELD_DEFINITIONS', VAR_NEW_LINE,
		'SELECT', VAR_NEW_LINE,
		'  FIELD_ORDER, FIELD_DEFINITION.FIELD_DEFINITION_ID, SECONDARY_FIELD_DEFINITION_ID, SECTION_DEFINITION.DEFAULT_LABEL AS SECTION_LABEL,', VAR_NEW_LINE,
		'  PAGE_TYPE, SECTION_ORDER, FIELD_DEFINITION.DEFAULT_LABEL AS FIELD_LABEL, ENTITY_TYPE, FIELD_NAME, FIELD_TYPE, REFERENCE_TYPE, VALIDATION_FIELD_TYPE', VAR_NEW_LINE,
		'FROM ', REPLACE(DATABASE(), 'theguru', '.'), 'SECTION_FIELD', VAR_NEW_LINE,
		'JOIN ', REPLACE(DATABASE(), 'theguru', '.'), 'SECTION_DEFINITION ON SECTION_DEFINITION.SECTION_DEFINITION_ID = SECTION_FIELD.SECTION_DEFINITION_ID', VAR_NEW_LINE,
		'JOIN ', REPLACE(DATABASE(), 'theguru', '.'), 'FIELD_DEFINITION ON FIELD_DEFINITION.FIELD_DEFINITION_ID = SECTION_FIELD.FIELD_DEFINITION_ID', VAR_NEW_LINE,
		'LEFT JOIN (SELECT DISTINCT FIELD_DEFINITION_ID, CASE WHEN VALIDATION_REGEX = ''^[0-9]*(\\\\.[0-9][0-9])?$'' THEN ''MONEY'' WHEN VALIDATION_REGEX = ''^[0-9]*$'' THEN ''NUMBER'' ELSE NULL END AS VALIDATION_FIELD_TYPE', VAR_NEW_LINE,
		'FROM ', REPLACE(DATABASE(), 'theguru', '.'), 'FIELD_VALIDATION WHERE VALIDATION_REGEX IN (''^[0-9]*$'', ''^[0-9]*(\\\\.[0-9][0-9])?$'')) AS FIELD_VALIDATION ON FIELD_VALIDATION.FIELD_DEFINITION_ID = FIELD_DEFINITION.FIELD_DEFINITION_ID', VAR_NEW_LINE,
		'WHERE IFNULL(SECTION_FIELD.IS_DELETED, 0) = 0;');
	PREPARE statement FROM @execString;
	EXECUTE statement;
	DEALLOCATE PREPARE statement;

	DROP TABLE IF EXISTS TEMP_OL_CUSTOM_FIELD_DEFINITIONS;
	SET @execString = CONCAT(
		'CREATE TABLE TEMP_OL_CUSTOM_FIELD_DEFINITIONS', VAR_NEW_LINE,
		'SELECT CUSTOM_TABLE_NAME, CUSTOM_TABLE_FIELD_ORDER, CUSTOM_TABLE_FIELD_DATATYPE, CUSTOM_TABLE_FIELD_NAME, CUSTOM_TABLE_FIELD_DESC,', VAR_NEW_LINE,
		'CONCAT((SELECT CUSTOM_TABLE_FIELD_DESC FROM ', REPLACE(DATABASE(), 'theguru', '.'), 'CUSTOM_TABLE_FIELD B', VAR_NEW_LINE,
		'WHERE B.CUSTOM_TABLE_ID = CUSTOM_TABLE.CUSTOM_TABLE_ID', VAR_NEW_LINE,
		'AND CUSTOM_TABLE_FIELD_DATATYPE = ''section''', VAR_NEW_LINE,
		'AND B.CUSTOM_TABLE_FIELD_ORDER < CUSTOM_TABLE_FIELD.CUSTOM_TABLE_FIELD_ORDER', VAR_NEW_LINE,
		'ORDER BY B.CUSTOM_TABLE_FIELD_ORDER DESC', VAR_NEW_LINE,
		'LIMIT 1), '' Information'') AS FIELD_GROUP', VAR_NEW_LINE,
		'FROM ', REPLACE(DATABASE(), 'theguru', '.'), 'CUSTOM_TABLE_FIELD', VAR_NEW_LINE,
		'JOIN ', REPLACE(DATABASE(), 'theguru', '.'), 'CUSTOM_TABLE ON CUSTOM_TABLE.CUSTOM_TABLE_ID = CUSTOM_TABLE_FIELD.CUSTOM_TABLE_ID', VAR_NEW_LINE,
		'WHERE CUSTOM_TABLE_FIELD_DATATYPE NOT IN (''section'', ''entity-reference'')', VAR_NEW_LINE,
		'AND CUSTOM_TABLE_FIELD_ACTIVE = 1', VAR_NEW_LINE,
		'ORDER BY CUSTOM_TABLE_FIELD_ORDER;');
	PREPARE statement FROM @execString;
	EXECUTE statement;
	DEALLOCATE PREPARE statement;
	
	
	DELETE FROM THEGURU_FIELD_DEFINITIONS;

	-- Iterate through the data sub sources
	OPEN CSR_DATASUBSOURCES;
	DATASUBSOURCES_LOOP: LOOP
		FETCH CSR_DATASUBSOURCES INTO
			VAR_REPORTSUBSOURCE_ID, VAR_DATASUBSOURCE_VIEW_NAME;

		IF CSR_END THEN
			LEAVE DATASUBSOURCES_LOOP;
		END IF;

		-- Iterate through the views (should only be 1)
		OPEN CSR_VIEWS;

		VIEWS_LOOP: LOOP
			FETCH CSR_VIEWS INTO
				VAR_VIEW_ID, VAR_VIEW_NAME, VAR_VIEW_DISPLAY_TEXT, VAR_PRIMARY_TABLE, VAR_PRIMARY_TABLE_IS_VIEW, VAR_PRIMARY_TABLE_ALIAS, VAR_PRIMARY_TABLE_COLUMN_PREFIX, VAR_PRIMARY_TABLE_FIELD_GROUP_PREFIX, VAR_PRIMARY_TABLE_FIELD_GROUP_OVERRIDE, VAR_PRIMARY_TABLE_PARENT_ENTITY_TYPE, VAR_PRIMARY_TABLE_SUB_FIELD_NAME, VAR_PRIMARY_TABLE_DEFAULT_PAGE_TYPE;

			IF CSR_END THEN
				LEAVE VIEWS_LOOP;
			END IF;

			CALL GENERATE_FIELD_DEFINITIONS_PROCESS_TABLE(VAR_VIEW_NAME, VAR_VIEW_NAME, TRUE, VAR_PRIMARY_TABLE_COLUMN_PREFIX, VAR_PRIMARY_TABLE_FIELD_GROUP_PREFIX, VAR_PRIMARY_TABLE_FIELD_GROUP_OVERRIDE, VAR_PRIMARY_TABLE_PARENT_ENTITY_TYPE, VAR_PRIMARY_TABLE_SUB_FIELD_NAME, VAR_PRIMARY_TABLE_DEFAULT_PAGE_TYPE, FALSE, NULL);

		END LOOP;
		CLOSE CSR_VIEWS;
		SET CSR_END = 0;

	END LOOP;
	CLOSE CSR_DATASUBSOURCES;
	SET CSR_END = 0;

	CALL UPDATE_REPORTFIELD_FIELD_DEFINITIONS();

 	DROP TABLE IF EXISTS TEMP_OL_FIELD_DEFINITIONS;
	DROP TABLE IF EXISTS TEMP_OL_CUSTOM_FIELD_DEFINITIONS;

END;$$