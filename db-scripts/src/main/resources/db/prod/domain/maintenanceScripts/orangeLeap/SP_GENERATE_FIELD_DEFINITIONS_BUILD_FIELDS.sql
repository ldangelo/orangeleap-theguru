DELIMITER $$

DROP PROCEDURE IF EXISTS GENERATE_FIELD_DEFINITIONS_BUILD_FIELDS$$

CREATE PROCEDURE GENERATE_FIELD_DEFINITIONS_BUILD_FIELDS(VIEWNAME VARCHAR(255), TABLENAME VARCHAR(255), TABLECOLUMNPREFIX VARCHAR(255), FIELDGROUPPREFIX VARCHAR(255), FIELDGROUPOVERRIDE VARCHAR(255), PARENTENTITYTYPE VARCHAR(255), SUBFIELDNAME VARCHAR(255), DEFAULTPAGETYPE VARCHAR(255), JOINID BIGINT)
BEGIN
  DECLARE CSR_END INT DEFAULT 0;
  DECLARE VAR_FIELD_ORDER INT;
  DECLARE VAR_FIELD_DEFINITION_ID VARCHAR(255);
  DECLARE VAR_SECONDARY_FIELD_DEFINITION_ID VARCHAR(255);
  DECLARE VAR_SECTION_LABEL VARCHAR(255);
  DECLARE VAR_SECTION_ORDER INT;
  DECLARE VAR_FIELD_LABEL VARCHAR(255);
  DECLARE VAR_ENTITY_TYPE VARCHAR(255);
  DECLARE VAR_FIELD_NAME VARCHAR(255);
  DECLARE VAR_FIELD_TYPE VARCHAR(255);
  DECLARE VAR_REFERENCE_TYPE VARCHAR(255);
  DECLARE VAR_VALIDATION_FIELD_TYPE VARCHAR(255);
  DECLARE VAR_PAGE_TYPE VARCHAR(255);
  
  DECLARE VAR_COLUMN_NAME VARCHAR(500);
  DECLARE VAR_COLUMN_TYPE VARCHAR(255);
  
  DECLARE VAR_FIELD_GROUP VARCHAR(255);
  DECLARE VAR_DISPLAY_NAME VARCHAR(255);
  DECLARE VAR_ADDITIONAL_DEF_COLUMN_NAME VARCHAR(4000);
  DECLARE VAR_ALIAS_NAME VARCHAR(255);
  DECLARE VAR_ADDITIONAL_DEF_FIELD_TYPE INT;

  DECLARE VAR_PICKLIST_NAME_ID VARCHAR(255);
  DECLARE VAR_PICKLIST_ITEM_NAME VARCHAR(255);
  DECLARE VAR_CUSTOM_FIELD_ENTITY_TYPE VARCHAR(255);
  DECLARE VAR_CUSTOM_FIELD_ENTITY_ID VARCHAR(255);
  DECLARE VAR_CUSTOM_FIELD_FIELD_NAME VARCHAR(255);
  DECLARE VAR_JOIN_ID BIGINT;
  DECLARE VAR_SOURCE_COLUMN_NAME VARCHAR(2000);
  DECLARE VAR_CONSTITUENT_JOIN_FIELD VARCHAR(255);
  DECLARE VAR_PICKLIST_CUSTOM_FIELD BIT DEFAULT 0;

  DECLARE CSR_FIELD_DEFINITIONS CURSOR FOR
  SELECT DISTINCT
    FIELD_ORDER, FIELD_DEFINITION_ID, SECONDARY_FIELD_DEFINITION_ID,
    CASE WHEN SECTION_LABEL LIKE 'Edit %' THEN CONCAT(REPLACE(SECTION_LABEL, 'Edit ', ''), ' Information') ELSE SECTION_LABEL END,
    SECTION_ORDER, FIELD_LABEL, ENTITY_TYPE, FIELD_NAME, FIELD_TYPE, REFERENCE_TYPE, VALIDATION_FIELD_TYPE, PAGE_TYPE
  FROM TEMP_OL_FIELD_DEFINITIONS
  WHERE ENTITY_TYPE = GET_ENTITY_TYPE_FOR_TABLE(TABLENAME)
  AND FIELD_NAME NOT IN (SELECT FIELD_NAME FROM THEGURU_TABLE_FIELD_EXCLUSIONS WHERE TABLE_NAME = TABLENAME)
  AND FIELD_NAME LIKE '%customFieldMap%'
  AND PAGE_TYPE NOT LIKE '%View'
  UNION
  SELECT DISTINCT
    FIELD_ORDER, FIELD_DEFINITION_ID, SECONDARY_FIELD_DEFINITION_ID,
    CASE WHEN SECTION_LABEL LIKE 'Edit %' THEN CONCAT(REPLACE(SECTION_LABEL, 'Edit ', ''), ' Information') ELSE SECTION_LABEL END,
    SECTION_ORDER, FIELD_LABEL, ENTITY_TYPE, SUBSTRING(SECONDARY_FIELD_DEFINITION_ID, LOCATE(CONCAT(SUBFIELDNAME, '.'), SECONDARY_FIELD_DEFINITION_ID) + LENGTH(CONCAT(SUBFIELDNAME, '.')), LENGTH(SECONDARY_FIELD_DEFINITION_ID)),
    FIELD_TYPE, REFERENCE_TYPE, VALIDATION_FIELD_TYPE, PAGE_TYPE
  FROM TEMP_OL_FIELD_DEFINITIONS
  WHERE ENTITY_TYPE = PARENTENTITYTYPE
  AND FIELD_NAME = SUBFIELDNAME
  AND SECONDARY_FIELD_DEFINITION_ID LIKE '%customFieldMap%'
  AND SECONDARY_FIELD_DEFINITION_ID NOT IN (SELECT FIELD_NAME FROM THEGURU_TABLE_FIELD_EXCLUSIONS WHERE TABLE_NAME = TABLENAME)
  AND PAGE_TYPE NOT LIKE '%View';
  
  DECLARE CSR_FIELDS CURSOR FOR
    SELECT
      COLUMN_NAME, DATA_TYPE
    FROM INFORMATION_SCHEMA.COLUMNS
    WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
    AND TABLE_NAME = TABLENAME
    AND COLUMN_NAME NOT IN (SELECT FIELD_NAME FROM THEGURU_TABLE_FIELD_EXCLUSIONS WHERE TABLE_NAME = TABLENAME);
    
  DECLARE CSR_ADDITIONAL_FIELD_DEFINITIONS CURSOR FOR
  SELECT DISTINCT
    FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE, 
    PICKLIST_NAME_ID, PICKLIST_ITEM_NAME, CUSTOM_FIELD_ENTITY_TYPE,
    CUSTOM_FIELD_ENTITY_ID, CUSTOM_FIELD_FIELD_NAME, SOURCE_COLUMN_NAME, CONSTITUENT_JOIN_FIELD, PICKLIST_CUSTOM_FIELD
  FROM THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
  WHERE TABLE_NAME = TABLENAME
  UNION
  SELECT
	FIELD_GROUP, CUSTOM_TABLE_FIELD_DESC AS DISPLAY_NAME, 
	CONCAT(
	  CASE
        WHEN CUSTOM_TABLE_FIELD_DATATYPE = 'date' THEN 'GETCUSTOMDATEFIELD'
        ELSE 'GETCUSTOMFIELD'
      END, '(${COLUMN_PREFIX}CUSTOM_TABLE_ROW_ID, ''customtablerow'', ''', CUSTOM_TABLE_FIELD_NAME, ''')') AS COLUMN_NAME,
    UPPER(CUSTOM_TABLE_FIELD_NAME) AS ALIAS_NAME,
    CASE
      WHEN CUSTOM_TABLE_FIELD_DATATYPE = 'number' THEN 2
      WHEN CUSTOM_TABLE_FIELD_DATATYPE = 'text' THEN 1
      WHEN CUSTOM_TABLE_FIELD_DATATYPE = 'date' THEN 4
    END AS FIELD_TYPE,
    '' AS PICKLIST_NAME_ID, '' AS PICKLIST_ITEM_NAME,
    'customtablerow' AS CUSTOM_FIELD_ENTITY_TYPE, 'CUSTOM_TABLE_ROW_ID' AS CUSTOM_FIELD_ENTITY_ID,
    CUSTOM_TABLE_FIELD_NAME AS CUSTOM_FIELD_FIELD_NAME,
    CASE
      WHEN CUSTOM_TABLE_FIELD_DATATYPE = 'number' THEN '${CUSTOM_FIELD}.FIELD_NUMERIC_VALUE'
      WHEN CUSTOM_TABLE_FIELD_DATATYPE = 'text' THEN '${CUSTOM_FIELD}.FIELD_VALUE'
      WHEN CUSTOM_TABLE_FIELD_DATATYPE = 'date' THEN '${CUSTOM_FIELD}.FIELD_DATE_VALUE'
    END AS SOURCE_COLUMN_NAME,
    NULL AS CONSTITUENT_JOIN_FIELD, VAR_PICKLIST_CUSTOM_FIELD AS PICKLIST_CUSTOM_FIELD
  FROM TEMP_OL_CUSTOM_FIELD_DEFINITIONS
  WHERE CUSTOM_TABLE_NAME = TABLENAME;
  
  DECLARE CONTINUE HANDLER FOR NOT FOUND SET CSR_END = 1;
  
  OPEN CSR_FIELDS;
  PRIMARY_FIELDS_LOOP: LOOP
    FETCH CSR_FIELDS INTO
      VAR_COLUMN_NAME, VAR_COLUMN_TYPE;
    IF CSR_END THEN
      LEAVE PRIMARY_FIELDS_LOOP;
    END IF;
    SET VAR_FIELD_ORDER = 0;
    SET VAR_FIELD_DEFINITION_ID = '';
    SET VAR_SECONDARY_FIELD_DEFINITION_ID = '';
    SET VAR_SECTION_LABEL = '';
    SET VAR_SECTION_ORDER = 0;
    SET VAR_FIELD_LABEL = '';
    SET VAR_ENTITY_TYPE = '';
    SET VAR_FIELD_NAME = '';
    SET VAR_FIELD_TYPE = '';
    SET VAR_REFERENCE_TYPE = '';
    IF (LENGTH(IFNULL(PARENTENTITYTYPE, '')) = 0) THEN
      SELECT DISTINCT
        FIELD_ORDER, FIELD_DEFINITION_ID, SECONDARY_FIELD_DEFINITION_ID, SECTION_LABEL, SECTION_ORDER,
        FIELD_LABEL, ENTITY_TYPE, FIELD_NAME, FIELD_TYPE, REFERENCE_TYPE, PAGE_TYPE
      INTO
        VAR_FIELD_ORDER, VAR_FIELD_DEFINITION_ID, VAR_SECONDARY_FIELD_DEFINITION_ID, VAR_SECTION_LABEL, VAR_SECTION_ORDER,
        VAR_FIELD_LABEL, VAR_ENTITY_TYPE, VAR_FIELD_NAME, VAR_FIELD_TYPE, VAR_REFERENCE_TYPE, VAR_PAGE_TYPE
      FROM TEMP_OL_FIELD_DEFINITIONS
      WHERE ENTITY_TYPE = GET_ENTITY_TYPE_FOR_TABLE(TABLENAME)
      AND (FIELD_NAME = REPLACE(VAR_COLUMN_NAME, '_', '') OR FIELD_NAME = REPLACE(VAR_COLUMN_NAME, CONCAT(REPLACE(TABLENAME, '_', ''), '_'), ''))
      AND FIELD_NAME NOT IN (SELECT FIELD_NAME FROM THEGURU_TABLE_FIELD_EXCLUSIONS WHERE TABLE_NAME = TABLENAME)
      AND IFNULL(SECTION_LABEL, '') <> ''
      AND SECTION_LABEL NOT LIKE '%EDIT%'
      ORDER BY
        CASE WHEN LENGTH(IFNULL(DEFAULTPAGETYPE, '')) > 0 AND PAGE_TYPE = DEFAULTPAGETYPE THEN 1 ELSE 2 END ASC,
        (SELECT COUNT(*) FROM TEMP_OL_FIELD_DEFINITIONS B WHERE B.SECTION_LABEL = TEMP_OL_FIELD_DEFINITIONS.SECTION_LABEL) DESC
      LIMIT 1;
    ELSE
      SELECT DISTINCT
        FIELD_ORDER, FIELD_DEFINITION_ID, SECONDARY_FIELD_DEFINITION_ID, SECTION_LABEL, SECTION_ORDER,
        FIELD_LABEL, ENTITY_TYPE, SUBSTRING(SECONDARY_FIELD_DEFINITION_ID, LOCATE(CONCAT(SUBFIELDNAME, '.'), SECONDARY_FIELD_DEFINITION_ID) + LENGTH(CONCAT(SUBFIELDNAME, '.')), LENGTH(SECONDARY_FIELD_DEFINITION_ID)), FIELD_TYPE, REFERENCE_TYPE, PAGE_TYPE
      INTO
        VAR_FIELD_ORDER, VAR_FIELD_DEFINITION_ID, VAR_SECONDARY_FIELD_DEFINITION_ID, VAR_SECTION_LABEL, VAR_SECTION_ORDER,
        VAR_FIELD_LABEL, VAR_ENTITY_TYPE, VAR_FIELD_NAME, VAR_FIELD_TYPE, VAR_REFERENCE_TYPE, VAR_PAGE_TYPE
      FROM TEMP_OL_FIELD_DEFINITIONS
      WHERE ENTITY_TYPE = PARENTENTITYTYPE
      AND (FIELD_NAME = SUBFIELDNAME OR FIELD_NAME = REPLACE(SUBFIELDNAME, CONCAT(TABLENAME, '_'), ''))
      AND REPLACE(SUBSTRING(SECONDARY_FIELD_DEFINITION_ID, LOCATE(CONCAT(SUBFIELDNAME, '.'), SECONDARY_FIELD_DEFINITION_ID) + LENGTH(CONCAT(SUBFIELDNAME, '.')), LENGTH(SECONDARY_FIELD_DEFINITION_ID)), 'ReadOnly', '') = REPLACE(VAR_COLUMN_NAME, '_', '')
      AND REPLACE(SECONDARY_FIELD_DEFINITION_ID, CONCAT(SUBFIELDNAME, '.'), '') NOT IN (SELECT FIELD_NAME FROM THEGURU_TABLE_FIELD_EXCLUSIONS WHERE TABLE_NAME = TABLENAME)
      AND IFNULL(SECTION_LABEL, '') <> ''
      AND SECTION_LABEL NOT LIKE '%EDIT%'
      ORDER BY
        CASE WHEN LENGTH(IFNULL(DEFAULTPAGETYPE, '')) > 0 AND PAGE_TYPE = DEFAULTPAGETYPE THEN 1 ELSE 2 END ASC,
        (SELECT COUNT(*) FROM TEMP_OL_FIELD_DEFINITIONS B WHERE B.SECTION_LABEL = TEMP_OL_FIELD_DEFINITIONS.SECTION_LABEL) DESC
      LIMIT 1;
    END IF;
    
    SET VAR_FIELD_DEFINITION_ID = REPLACE(VAR_FIELD_DEFINITION_ID, 'ReadOnly', '');
    
    IF CSR_END = 0 THEN
      IF VAR_FIELD_TYPE = 'CODE' OR VAR_FIELD_TYPE = 'CODE_OTHER_DISPLAY' OR VAR_FIELD_TYPE = 'PICKLIST' OR VAR_FIELD_TYPE = 'PICKLIST_DISPLAY' THEN
        
        WHILE LOCATE('.', VAR_FIELD_DEFINITION_ID) DO
          SET VAR_FIELD_DEFINITION_ID = SUBSTR(VAR_FIELD_DEFINITION_ID, LOCATE('.', VAR_FIELD_DEFINITION_ID) + 1);
        END WHILE;
        
        INSERT THEGURU_FIELD_DEFINITIONS
          (VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY, DYNAMIC_PRIMARY_KEY,
          PICKLIST_NAME_ID, PICKLIST_ITEM_NAME, CUSTOM_FIELD_ENTITY_TYPE, CUSTOM_FIELD_ENTITY_ID, CUSTOM_FIELD_FIELD_NAME, JOIN_ID, SOURCE_COLUMN_NAME, CONSTITUENT_JOIN_FIELD)
        SELECT
          VIEWNAME,
          CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
            CASE
              WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                  WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(VAR_COLUMN_NAME, ''), '_SHORT_DISPLAY_NAME'), 1, 64)) IS NOT NULL THEN
                  (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                  WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(VAR_COLUMN_NAME, ''), '_SHORT_DISPLAY_NAME'), 1, 64))
              WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
              WHEN VAR_SECTION_LABEL = 'Record Information' THEN IFNULL((SELECT CASE WHEN SECTION_LABEL LIKE 'Edit %' THEN CONCAT(REPLACE(SECTION_LABEL, 'Edit ', ''), ' Information') ELSE SECTION_LABEL END FROM TEMP_OL_FIELD_DEFINITIONS B WHERE B.PAGE_TYPE = VAR_PAGE_TYPE ORDER BY SECTION_ORDER LIMIT 1), VAR_SECTION_LABEL)
              ELSE IFNULL(VAR_SECTION_LABEL, '')
            END) AS FIELD_GROUP,
          CONCAT('GETPICKLISTDISPLAYVALUE(''', VAR_FIELD_DEFINITION_ID, ''', ',
            CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(VAR_COLUMN_NAME, '')), ')') AS COLUMN_NAME,
          SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(VAR_COLUMN_NAME, ''), '_SDN'), 1, 64) AS ALIAS_NAME,
          CONCAT(VAR_FIELD_LABEL, ' Short Display Name') AS DISPLAY_TEXT,
          1 AS FIELD_TYPE,
          CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
          (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
            WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
            AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY,
          (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
            WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
            AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS DYNAMIC_PRIMARY_KEY,
          VAR_FIELD_DEFINITION_ID AS PICKLIST_NAME_ID,
          IFNULL(VAR_COLUMN_NAME, '') AS PICKLIST_ITEM_NAME,
          NULL AS CUSTOM_FIELD_ENTITY_TYPE,
          NULL AS CUSTOM_FIELD_ENTITY_ID,
          NULL AS CUSTOM_FIELD_FIELD_NAME,
          IFNULL(JOINID, 0) AS JOIN_ID,
          '${PICKLIST_ITEM}.DEFAULT_DISPLAY_VALUE' AS SOURCE_COLUMN_NAME,
          NULL AS CONSTITUENT_JOIN_FIELD;
        
        INSERT THEGURU_FIELD_DEFINITIONS
          (VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY, DYNAMIC_PRIMARY_KEY,
          PICKLIST_NAME_ID, PICKLIST_ITEM_NAME, CUSTOM_FIELD_ENTITY_TYPE, CUSTOM_FIELD_ENTITY_ID, CUSTOM_FIELD_FIELD_NAME, JOIN_ID, SOURCE_COLUMN_NAME, CONSTITUENT_JOIN_FIELD)
        SELECT
          VIEWNAME,
          CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
            CASE
              WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                  WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(VAR_COLUMN_NAME, ''), '_LONG_DISPLAY_NAME'), 1, 64)) IS NOT NULL THEN
                  (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                  WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(VAR_COLUMN_NAME, ''), '_LONG_DISPLAY_NAME'), 1, 64))
              WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
              WHEN VAR_SECTION_LABEL = 'Record Information' THEN IFNULL((SELECT CASE WHEN SECTION_LABEL LIKE 'Edit %' THEN CONCAT(REPLACE(SECTION_LABEL, 'Edit ', ''), ' Information') ELSE SECTION_LABEL END FROM TEMP_OL_FIELD_DEFINITIONS B WHERE B.PAGE_TYPE = VAR_PAGE_TYPE ORDER BY SECTION_ORDER LIMIT 1), VAR_SECTION_LABEL)
              ELSE IFNULL(VAR_SECTION_LABEL, '')
            END) AS FIELD_GROUP,
          CONCAT('GETPICKLISTLONGDESCRIPTION(''', VAR_FIELD_DEFINITION_ID, ''', ',
            CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(VAR_COLUMN_NAME, '')), ')') AS COLUMN_NAME,
          SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(VAR_COLUMN_NAME, ''), '_LDN'), 1, 64) AS ALIAS_NAME,
          CONCAT(VAR_FIELD_LABEL, ' Long Display Name') AS DISPLAY_TEXT,
          1 AS FIELD_TYPE,
          CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
          (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
            WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
            AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY,
          (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
            WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
            AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS DYNAMIC_PRIMARY_KEY,
          VAR_FIELD_DEFINITION_ID AS PICKLIST_NAME_ID,
          IFNULL(VAR_COLUMN_NAME, '') AS PICKLIST_ITEM_NAME,
          NULL AS CUSTOM_FIELD_ENTITY_TYPE,
          NULL AS CUSTOM_FIELD_ENTITY_ID,
          NULL AS CUSTOM_FIELD_FIELD_NAME,
          IFNULL(JOINID, 0) AS JOIN_ID,
          '${PICKLIST_ITEM}.LONG_DESCRIPTION' AS SOURCE_COLUMN_NAME,
          NULL AS CONSTITUENT_JOIN_FIELD;
        
        INSERT THEGURU_FIELD_DEFINITIONS
          (VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY, DYNAMIC_PRIMARY_KEY,
          PICKLIST_NAME_ID, PICKLIST_ITEM_NAME, CUSTOM_FIELD_ENTITY_TYPE, CUSTOM_FIELD_ENTITY_ID, CUSTOM_FIELD_FIELD_NAME, JOIN_ID, SOURCE_COLUMN_NAME, CONSTITUENT_JOIN_FIELD)
        SELECT
          VIEWNAME,
          CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
            CASE
              WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                  WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(VAR_COLUMN_NAME, ''), '_DESCRIPTION'), 1, 64)) IS NOT NULL THEN
                  (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                  WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(VAR_COLUMN_NAME, ''), '_DESCRIPTION'), 1, 64))
              WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
              WHEN VAR_SECTION_LABEL = 'Record Information' THEN IFNULL((SELECT CASE WHEN SECTION_LABEL LIKE 'Edit %' THEN CONCAT(REPLACE(SECTION_LABEL, 'Edit ', ''), ' Information') ELSE SECTION_LABEL END FROM TEMP_OL_FIELD_DEFINITIONS B WHERE B.PAGE_TYPE = VAR_PAGE_TYPE ORDER BY SECTION_ORDER LIMIT 1), VAR_SECTION_LABEL)
              ELSE IFNULL(VAR_SECTION_LABEL, '')
            END) AS FIELD_GROUP,
          CONCAT('GETPICKLISTDETAIL(''', VAR_FIELD_DEFINITION_ID, ''', ',
            CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(VAR_COLUMN_NAME, '')), ')') AS COLUMN_NAME,
          SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(VAR_COLUMN_NAME, ''), '_DESC'), 1, 64) AS ALIAS_NAME,
          CONCAT(VAR_FIELD_LABEL, ' Description') AS DISPLAY_TEXT,
          1 AS FIELD_TYPE,
          CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
          (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
            WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
            AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY,
          (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
            WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
            AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS DYNAMIC_PRIMARY_KEY,
          VAR_FIELD_DEFINITION_ID AS PICKLIST_NAME_ID,
          IFNULL(VAR_COLUMN_NAME, '') AS PICKLIST_ITEM_NAME,
          NULL AS CUSTOM_FIELD_ENTITY_TYPE,
          NULL AS CUSTOM_FIELD_ENTITY_ID,
          NULL AS CUSTOM_FIELD_FIELD_NAME,
          IFNULL(JOINID, 0) AS JOIN_ID,
          '${PICKLIST_ITEM}.DETAIL' AS SOURCE_COLUMN_NAME,
          NULL AS CONSTITUENT_JOIN_FIELD;
      ELSE
        INSERT THEGURU_FIELD_DEFINITIONS
          (VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY, DYNAMIC_PRIMARY_KEY,
          PICKLIST_NAME_ID, PICKLIST_ITEM_NAME, CUSTOM_FIELD_ENTITY_TYPE, CUSTOM_FIELD_ENTITY_ID, CUSTOM_FIELD_FIELD_NAME, JOIN_ID, SOURCE_COLUMN_NAME, CONSTITUENT_JOIN_FIELD)
        SELECT
          VIEWNAME,
          CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
            CASE
              WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                  WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(VAR_COLUMN_NAME, '')), 1, 64)) IS NOT NULL THEN
                  (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                  WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(VAR_COLUMN_NAME, '')), 1, 64))
              WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
              WHEN VAR_SECTION_LABEL = 'Record Information' THEN IFNULL((SELECT CASE WHEN SECTION_LABEL LIKE 'Edit %' THEN CONCAT(REPLACE(SECTION_LABEL, 'Edit ', ''), ' Information') ELSE SECTION_LABEL END FROM TEMP_OL_FIELD_DEFINITIONS B WHERE B.PAGE_TYPE = VAR_PAGE_TYPE ORDER BY SECTION_ORDER LIMIT 1), VAR_SECTION_LABEL)
              ELSE IFNULL(VAR_SECTION_LABEL, '')
            END) AS FIELD_GROUP,
          CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(VAR_COLUMN_NAME, '')) AS COLUMN_NAME,
          SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(VAR_COLUMN_NAME, '')), 1, 64) AS ALIAS_NAME,
          VAR_FIELD_LABEL,
          CASE
            WHEN VAR_FIELD_TYPE = 'CHECKBOX' THEN 6
            WHEN VAR_COLUMN_TYPE = 'tinyint' THEN 2
            WHEN VAR_COLUMN_TYPE = 'int' THEN 2
            WHEN VAR_COLUMN_TYPE = 'smallint' THEN 2
            WHEN VAR_COLUMN_TYPE = 'bigint' THEN 2
            WHEN VAR_COLUMN_TYPE = 'datetime' THEN 4
            WHEN VAR_COLUMN_TYPE = 'decimal' THEN 5
            WHEN VAR_COLUMN_TYPE = 'bit' THEN 6
            ELSE 1
          END,
          CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
          (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
            WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
            AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY,
          (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
            WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
            AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS DYNAMIC_PRIMARY_KEY,
          NULL AS PICKLIST_NAME_ID,
          NULL AS PICKLIST_ITEM_NAME,
          NULL AS CUSTOM_FIELD_ENTITY_TYPE,
          NULL AS CUSTOM_FIELD_ENTITY_ID,
          NULL AS CUSTOM_FIELD_FIELD_NAME,
          IFNULL(JOINID, 0) AS JOIN_ID,
          CONCAT('${', TABLENAME, '}.', IFNULL(VAR_COLUMN_NAME, '')) AS SOURCE_COLUMN_NAME,
          NULL AS CONSTITUENT_JOIN_FIELD;
      END IF;
    ELSE
      SET CSR_END = 0;
    END IF;
  END LOOP;
  SET CSR_END = 0;
  CLOSE CSR_FIELDS;
  SET VAR_FIELD_ORDER = 0;
  SET VAR_FIELD_DEFINITION_ID = '';
  SET VAR_SECONDARY_FIELD_DEFINITION_ID = '';
  SET VAR_SECTION_LABEL = '';
  SET VAR_SECTION_ORDER = 0;
  SET VAR_FIELD_LABEL = '';
  SET VAR_ENTITY_TYPE = '';
  SET VAR_FIELD_NAME = '';
  SET VAR_FIELD_TYPE = '';
  SET VAR_REFERENCE_TYPE = '';
  OPEN CSR_FIELD_DEFINITIONS;
  
  FIELD_DEFINITIONS_LOOP: LOOP
    FETCH CSR_FIELD_DEFINITIONS INTO
      VAR_FIELD_ORDER, VAR_FIELD_DEFINITION_ID, VAR_SECONDARY_FIELD_DEFINITION_ID, VAR_SECTION_LABEL, VAR_SECTION_ORDER,
      VAR_FIELD_LABEL, VAR_ENTITY_TYPE, VAR_FIELD_NAME, VAR_FIELD_TYPE, VAR_REFERENCE_TYPE, VAR_VALIDATION_FIELD_TYPE, VAR_PAGE_TYPE;
    IF CSR_END THEN
      LEAVE FIELD_DEFINITIONS_LOOP;
    END IF;
    SET VAR_FIELD_NAME = REPLACE(VAR_FIELD_NAME, 'ReadOnly]', ']');
    
    IF VAR_FIELD_TYPE = 'TEXT' OR VAR_FIELD_TYPE = 'LONG_TEXT' OR VAR_FIELD_TYPE = 'READ_ONLY_TEXT' THEN
      INSERT THEGURU_FIELD_DEFINITIONS
        (VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY, DYNAMIC_PRIMARY_KEY,
          PICKLIST_NAME_ID, PICKLIST_ITEM_NAME, CUSTOM_FIELD_ENTITY_TYPE, CUSTOM_FIELD_ENTITY_ID, CUSTOM_FIELD_FIELD_NAME, JOIN_ID, SOURCE_COLUMN_NAME, CONSTITUENT_JOIN_FIELD)
      SELECT
        VIEWNAME,
        CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
          CASE
            WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64)) IS NOT NULL THEN
                (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64))
            WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
            WHEN VAR_SECTION_LABEL = 'Record Information' THEN IFNULL((SELECT CASE WHEN SECTION_LABEL LIKE 'Edit %' THEN CONCAT(REPLACE(SECTION_LABEL, 'Edit ', ''), ' Information') ELSE SECTION_LABEL END FROM TEMP_OL_FIELD_DEFINITIONS B WHERE B.PAGE_TYPE = VAR_PAGE_TYPE ORDER BY SECTION_ORDER LIMIT 1), VAR_SECTION_LABEL)
            ELSE IFNULL(VAR_SECTION_LABEL, '') END) AS FIELD_GROUP,
        CONCAT('GETCUSTOMFIELD(',
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
          ', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), ''')') AS COLUMN_NAME,
        SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64) AS ALIAS_NAME,
        VAR_FIELD_LABEL AS DISPLAY_TEXT,
        CASE WHEN VAR_VALIDATION_FIELD_TYPE = 'MONEY' THEN 5 WHEN VAR_VALIDATION_FIELD_TYPE = 'NUMBER' THEN 2 ELSE 1 END AS FIELD_TYPE,
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
            WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
            AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS DYNAMIC_PRIMARY_KEY,
        NULL AS PICKLIST_NAME_ID,
        NULL AS PICKLIST_ITEM_NAME,
        GET_ENTITY_TYPE_FOR_TABLE(TABLENAME) AS CUSTOM_FIELD_ENTITY_TYPE,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS CUSTOM_FIELD_ENTITY_ID,
        REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', '') AS CUSTOM_FIELD_FIELD_NAME,
        IFNULL(JOINID, 0) AS JOIN_ID,
        '${CUSTOM_FIELD}.FIELD_VALUE' AS SOURCE_COLUMN_NAME,
        NULL AS CONSTITUENT_JOIN_FIELD;

    ELSEIF VAR_FIELD_TYPE = 'CHECKBOX' THEN
      INSERT THEGURU_FIELD_DEFINITIONS
        (VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY, DYNAMIC_PRIMARY_KEY,
          PICKLIST_NAME_ID, PICKLIST_ITEM_NAME, CUSTOM_FIELD_ENTITY_TYPE, CUSTOM_FIELD_ENTITY_ID, CUSTOM_FIELD_FIELD_NAME, JOIN_ID, SOURCE_COLUMN_NAME, CONSTITUENT_JOIN_FIELD)
      SELECT
        VIEWNAME,
        CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
          CASE
            WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64)) IS NOT NULL THEN
                (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64))
            WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
            WHEN VAR_SECTION_LABEL = 'Record Information' THEN IFNULL((SELECT CASE WHEN SECTION_LABEL LIKE 'Edit %' THEN CONCAT(REPLACE(SECTION_LABEL, 'Edit ', ''), ' Information') ELSE SECTION_LABEL END FROM TEMP_OL_FIELD_DEFINITIONS B WHERE B.PAGE_TYPE = VAR_PAGE_TYPE ORDER BY SECTION_ORDER LIMIT 1), VAR_SECTION_LABEL)
            ELSE IFNULL(VAR_SECTION_LABEL, '') END) AS FIELD_GROUP,
        CONCAT('GETCUSTOMFIELD(',
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
          ', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), ''')') AS COLUMN_NAME,
        SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64) AS ALIAS_NAME,
        VAR_FIELD_LABEL AS DISPLAY_TEXT,
        1 AS FIELD_TYPE,
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
            WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
            AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS DYNAMIC_PRIMARY_KEY,
        NULL AS PICKLIST_NAME_ID,
        NULL AS PICKLIST_ITEM_NAME,
        GET_ENTITY_TYPE_FOR_TABLE(TABLENAME) AS CUSTOM_FIELD_ENTITY_TYPE,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS CUSTOM_FIELD_ENTITY_ID,
        REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', '') AS CUSTOM_FIELD_FIELD_NAME,
        IFNULL(JOINID, 0) AS JOIN_ID,
        '${CUSTOM_FIELD}.FIELD_VALUE' AS SOURCE_COLUMN_NAME,
        NULL AS CONSTITUENT_JOIN_FIELD;

    ELSEIF VAR_FIELD_TYPE = 'DATE' THEN
      INSERT THEGURU_FIELD_DEFINITIONS
        (VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY, DYNAMIC_PRIMARY_KEY,
          PICKLIST_NAME_ID, PICKLIST_ITEM_NAME, CUSTOM_FIELD_ENTITY_TYPE, CUSTOM_FIELD_ENTITY_ID, CUSTOM_FIELD_FIELD_NAME, JOIN_ID, SOURCE_COLUMN_NAME, CONSTITUENT_JOIN_FIELD)
      SELECT
        VIEWNAME,
        CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
          CASE
            WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64)) IS NOT NULL THEN
                (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64))
            WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
            WHEN VAR_SECTION_LABEL = 'Record Information' THEN IFNULL((SELECT CASE WHEN SECTION_LABEL LIKE 'Edit %' THEN CONCAT(REPLACE(SECTION_LABEL, 'Edit ', ''), ' Information') ELSE SECTION_LABEL END FROM TEMP_OL_FIELD_DEFINITIONS B WHERE B.PAGE_TYPE = VAR_PAGE_TYPE ORDER BY SECTION_ORDER LIMIT 1), VAR_SECTION_LABEL)
            ELSE IFNULL(VAR_SECTION_LABEL, '') END) AS FIELD_GROUP,
        CONCAT('GETCUSTOMDATEFIELD(',
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
          ', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), ''')') AS COLUMN_NAME,
        SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64) AS ALIAS_NAME,
        VAR_FIELD_LABEL AS DISPLAY_TEXT,
        4 AS FIELD_TYPE,
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
            WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
            AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS DYNAMIC_PRIMARY_KEY,
        NULL AS PICKLIST_NAME_ID,
        NULL AS PICKLIST_ITEM_NAME,
        GET_ENTITY_TYPE_FOR_TABLE(TABLENAME) AS CUSTOM_FIELD_ENTITY_TYPE,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS CUSTOM_FIELD_ENTITY_ID,
        REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', '') AS CUSTOM_FIELD_FIELD_NAME,
        IFNULL(JOINID, 0) AS JOIN_ID,
        '${CUSTOM_FIELD}.FIELD_DATE_VALUE' AS SOURCE_COLUMN_NAME,
        NULL AS CONSTITUENT_JOIN_FIELD;

    ELSEIF VAR_FIELD_TYPE = 'NUMBER' OR VAR_FIELD_TYPE = 'NUMBER_DISPLAY' THEN
      INSERT THEGURU_FIELD_DEFINITIONS
        (VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY, DYNAMIC_PRIMARY_KEY,
          PICKLIST_NAME_ID, PICKLIST_ITEM_NAME, CUSTOM_FIELD_ENTITY_TYPE, CUSTOM_FIELD_ENTITY_ID, CUSTOM_FIELD_FIELD_NAME, JOIN_ID, SOURCE_COLUMN_NAME, CONSTITUENT_JOIN_FIELD)
      SELECT
        VIEWNAME,
        CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
          CASE
            WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64)) IS NOT NULL THEN
                (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64))
            WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
            WHEN VAR_SECTION_LABEL = 'Record Information' THEN IFNULL((SELECT CASE WHEN SECTION_LABEL LIKE 'Edit %' THEN CONCAT(REPLACE(SECTION_LABEL, 'Edit ', ''), ' Information') ELSE SECTION_LABEL END FROM TEMP_OL_FIELD_DEFINITIONS B WHERE B.PAGE_TYPE = VAR_PAGE_TYPE ORDER BY SECTION_ORDER LIMIT 1), VAR_SECTION_LABEL)
            ELSE IFNULL(VAR_SECTION_LABEL, '') END) AS FIELD_GROUP,
        CONCAT('GETCUSTOMFIELD(',
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
          ', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), ''')') AS COLUMN_NAME,
        SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64) AS ALIAS_NAME,
        VAR_FIELD_LABEL AS DISPLAY_TEXT,
        2 AS FIELD_TYPE,
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
            WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
            AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS DYNAMIC_PRIMARY_KEY,
        NULL AS PICKLIST_NAME_ID,
        NULL AS PICKLIST_ITEM_NAME,
        GET_ENTITY_TYPE_FOR_TABLE(TABLENAME) AS CUSTOM_FIELD_ENTITY_TYPE,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS CUSTOM_FIELD_ENTITY_ID,
        REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', '') AS CUSTOM_FIELD_FIELD_NAME,
        IFNULL(JOINID, 0) AS JOIN_ID,
        '${CUSTOM_FIELD}.FIELD_NUMERIC_VALUE' AS SOURCE_COLUMN_NAME,
        NULL AS CONSTITUENT_JOIN_FIELD;

    ELSEIF VAR_FIELD_TYPE = 'PERCENTAGE' THEN
      INSERT THEGURU_FIELD_DEFINITIONS
        (VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY, DYNAMIC_PRIMARY_KEY,
          PICKLIST_NAME_ID, PICKLIST_ITEM_NAME, CUSTOM_FIELD_ENTITY_TYPE, CUSTOM_FIELD_ENTITY_ID, CUSTOM_FIELD_FIELD_NAME, JOIN_ID, SOURCE_COLUMN_NAME, CONSTITUENT_JOIN_FIELD)
      SELECT
        VIEWNAME,
        CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
          CASE
            WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64)) IS NOT NULL THEN
                (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64))
            WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
            WHEN VAR_SECTION_LABEL = 'Record Information' THEN IFNULL((SELECT CASE WHEN SECTION_LABEL LIKE 'Edit %' THEN CONCAT(REPLACE(SECTION_LABEL, 'Edit ', ''), ' Information') ELSE SECTION_LABEL END FROM TEMP_OL_FIELD_DEFINITIONS B WHERE B.PAGE_TYPE = VAR_PAGE_TYPE ORDER BY SECTION_ORDER LIMIT 1), VAR_SECTION_LABEL)
            ELSE IFNULL(VAR_SECTION_LABEL, '') END) AS FIELD_GROUP,
        CONCAT('GETCUSTOMFIELD(',
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
          ', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), ''')') AS COLUMN_NAME,
        SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64) AS ALIAS_NAME,
        VAR_FIELD_LABEL AS DISPLAY_TEXT,
        5 AS FIELD_TYPE,
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
            WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
            AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS DYNAMIC_PRIMARY_KEY,
        NULL AS PICKLIST_NAME_ID,
        NULL AS PICKLIST_ITEM_NAME,
        GET_ENTITY_TYPE_FOR_TABLE(TABLENAME) AS CUSTOM_FIELD_ENTITY_TYPE,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS CUSTOM_FIELD_ENTITY_ID,
        REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', '') AS CUSTOM_FIELD_FIELD_NAME,
        IFNULL(JOINID, 0) AS JOIN_ID,
        '${CUSTOM_FIELD}.FIELD_VALUE' AS SOURCE_COLUMN_NAME,
        NULL AS CONSTITUENT_JOIN_FIELD;

    ELSEIF VAR_FIELD_TYPE = 'MULTI_CODE_ADDITIONAL' THEN
      INSERT THEGURU_FIELD_DEFINITIONS
        (VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY, DYNAMIC_PRIMARY_KEY,
          PICKLIST_NAME_ID, PICKLIST_ITEM_NAME, CUSTOM_FIELD_ENTITY_TYPE, CUSTOM_FIELD_ENTITY_ID, CUSTOM_FIELD_FIELD_NAME, JOIN_ID, SOURCE_COLUMN_NAME, CONSTITUENT_JOIN_FIELD)
      SELECT
        VIEWNAME,
        CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
          CASE
            WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64)) IS NOT NULL THEN
                (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64))
            WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
            WHEN VAR_SECTION_LABEL = 'Record Information' THEN IFNULL((SELECT CASE WHEN SECTION_LABEL LIKE 'Edit %' THEN CONCAT(REPLACE(SECTION_LABEL, 'Edit ', ''), ' Information') ELSE SECTION_LABEL END FROM TEMP_OL_FIELD_DEFINITIONS B WHERE B.PAGE_TYPE = VAR_PAGE_TYPE ORDER BY SECTION_ORDER LIMIT 1), VAR_SECTION_LABEL)
            ELSE IFNULL(VAR_SECTION_LABEL, '') END) AS FIELD_GROUP,
        CONCAT('GETCUSTOMFIELDCONCATENATED(',
          CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
          (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
            WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
            AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
            ', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), ''')') AS COLUMN_NAME,
        SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64) AS ALIAS_NAME,
        VAR_FIELD_LABEL AS DISPLAY_TEXT,
        1 AS FIELD_TYPE,
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
            WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
            AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS DYNAMIC_PRIMARY_KEY,
        NULL AS PICKLIST_NAME_ID,
        NULL AS PICKLIST_ITEM_NAME,
        GET_ENTITY_TYPE_FOR_TABLE(TABLENAME) AS CUSTOM_FIELD_ENTITY_TYPE,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS CUSTOM_FIELD_ENTITY_ID,
        REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', '') AS CUSTOM_FIELD_FIELD_NAME,
        IFNULL(JOINID, 0) AS JOIN_ID,
        '${CUSTOM_FIELD}.FIELD_VALUE' AS SOURCE_COLUMN_NAME,
        NULL AS CONSTITUENT_JOIN_FIELD;
      
      INSERT THEGURU_FIELD_DEFINITIONS
        (VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY, DYNAMIC_PRIMARY_KEY,
          PICKLIST_NAME_ID, PICKLIST_ITEM_NAME, CUSTOM_FIELD_ENTITY_TYPE, CUSTOM_FIELD_ENTITY_ID, CUSTOM_FIELD_FIELD_NAME, JOIN_ID, SOURCE_COLUMN_NAME, CONSTITUENT_JOIN_FIELD)
      SELECT
        VIEWNAME,
        CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
          CASE
            WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), 'ADDITIONAL'), 1, 64)) IS NOT NULL THEN
                (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), 'ADDITIONAL'), 1, 64))
            WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
            WHEN VAR_SECTION_LABEL = 'Record Information' THEN IFNULL((SELECT CASE WHEN SECTION_LABEL LIKE 'Edit %' THEN CONCAT(REPLACE(SECTION_LABEL, 'Edit ', ''), ' Information') ELSE SECTION_LABEL END FROM TEMP_OL_FIELD_DEFINITIONS B WHERE B.PAGE_TYPE = VAR_PAGE_TYPE ORDER BY SECTION_ORDER LIMIT 1), VAR_SECTION_LABEL)
            ELSE IFNULL(VAR_SECTION_LABEL, '') END) AS FIELD_GROUP,
        REPLACE(CONCAT('GETCUSTOMFIELDCONCATENATED(',
          CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
          (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
            WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
            AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
            ', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), ''')'), '.', '.additional_') AS COLUMN_NAME,
        SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), 'ADD'), 1, 64) AS ALIAS_NAME,
        CONCAT(VAR_FIELD_LABEL, ' - Additional') AS DISPLAY_TEXT,
        1 AS FIELD_TYPE,
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
            WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
            AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS DYNAMIC_PRIMARY_KEY,
        NULL AS PICKLIST_NAME_ID,
        NULL AS PICKLIST_ITEM_NAME,
        GET_ENTITY_TYPE_FOR_TABLE(TABLENAME) AS CUSTOM_FIELD_ENTITY_TYPE,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS CUSTOM_FIELD_ENTITY_ID,
        REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '.additional_') AS CUSTOM_FIELD_FIELD_NAME,
        IFNULL(JOINID, 0) AS JOIN_ID,
        '${CUSTOM_FIELD}.FIELD_VALUE' AS SOURCE_COLUMN_NAME,
        NULL AS CONSTITUENT_JOIN_FIELD;

    ELSEIF VAR_FIELD_TYPE = 'CODE' OR VAR_FIELD_TYPE = 'CODE_OTHER_DISPLAY' OR VAR_FIELD_TYPE = 'PICKLIST' OR VAR_FIELD_TYPE = 'PICKLIST_DISPLAY' THEN
      INSERT THEGURU_FIELD_DEFINITIONS
        (VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY, DYNAMIC_PRIMARY_KEY,
          PICKLIST_NAME_ID, PICKLIST_ITEM_NAME, CUSTOM_FIELD_ENTITY_TYPE, CUSTOM_FIELD_ENTITY_ID, CUSTOM_FIELD_FIELD_NAME, JOIN_ID, SOURCE_COLUMN_NAME, CONSTITUENT_JOIN_FIELD)
      SELECT
        VIEWNAME,
        CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
          CASE
            WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_SHORT_DISPLAY_NAME'), 1, 64)) IS NOT NULL THEN
                (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_SHORT_DISPLAY_NAME'), 1, 64))
            WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
            WHEN VAR_SECTION_LABEL = 'Record Information' THEN IFNULL((SELECT CASE WHEN SECTION_LABEL LIKE 'Edit %' THEN CONCAT(REPLACE(SECTION_LABEL, 'Edit ', ''), ' Information') ELSE SECTION_LABEL END FROM TEMP_OL_FIELD_DEFINITIONS B WHERE B.PAGE_TYPE = VAR_PAGE_TYPE ORDER BY SECTION_ORDER LIMIT 1), VAR_SECTION_LABEL)
            ELSE IFNULL(VAR_SECTION_LABEL, '') END) AS FIELD_GROUP,
        CONCAT('GETPICKLISTDISPLAYVALUE(''', VAR_FIELD_NAME, ''', GETCUSTOMFIELD(',
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
          ', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '''))') AS COLUMN_NAME,
        SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_SDN'), 1, 64) AS ALIAS_NAME,
        CONCAT(VAR_FIELD_LABEL, ' Short Display Name') AS DISPLAY_TEXT,
        1 AS FIELD_TYPE,
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
            WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
            AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS DYNAMIC_PRIMARY_KEY,
        VAR_FIELD_NAME AS PICKLIST_NAME_ID,
        '${CUSTOM_FIELD}.FIELD_VALUE' AS PICKLIST_ITEM_NAME,
        GET_ENTITY_TYPE_FOR_TABLE(TABLENAME) AS CUSTOM_FIELD_ENTITY_TYPE,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS CUSTOM_FIELD_ENTITY_ID,
        REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', '') AS CUSTOM_FIELD_FIELD_NAME,
        IFNULL(JOINID, 0) AS JOIN_ID,
        '${PICKLIST_ITEM}.DEFAULT_DISPLAY_VALUE' AS SOURCE_COLUMN_NAME,
        NULL AS CONSTITUENT_JOIN_FIELD;
      
      INSERT THEGURU_FIELD_DEFINITIONS
        (VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY, DYNAMIC_PRIMARY_KEY,
          PICKLIST_NAME_ID, PICKLIST_ITEM_NAME, CUSTOM_FIELD_ENTITY_TYPE, CUSTOM_FIELD_ENTITY_ID, CUSTOM_FIELD_FIELD_NAME, JOIN_ID, SOURCE_COLUMN_NAME, CONSTITUENT_JOIN_FIELD)
      SELECT
        VIEWNAME,
        CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
          CASE
            WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_LONG_DISPLAY_NAME'), 1, 64)) IS NOT NULL THEN
                (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_LONG_DISPLAY_NAME'), 1, 64))
            WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
            WHEN VAR_SECTION_LABEL = 'Record Information' THEN IFNULL((SELECT CASE WHEN SECTION_LABEL LIKE 'Edit %' THEN CONCAT(REPLACE(SECTION_LABEL, 'Edit ', ''), ' Information') ELSE SECTION_LABEL END FROM TEMP_OL_FIELD_DEFINITIONS B WHERE B.PAGE_TYPE = VAR_PAGE_TYPE ORDER BY SECTION_ORDER LIMIT 1), VAR_SECTION_LABEL)
            ELSE IFNULL(VAR_SECTION_LABEL, '')
          END) AS FIELD_GROUP,
        CONCAT('GETPICKLISTLONGDESCRIPTION(''', VAR_FIELD_NAME, ''', GETCUSTOMFIELD(',
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
          ', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '''))') AS COLUMN_NAME,
        SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_LDN'), 1, 64) AS ALIAS_NAME,
        CONCAT(VAR_FIELD_LABEL, ' Long Display Name') AS DISPLAY_TEXT,
        1 AS FIELD_TYPE,
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
            WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
            AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS DYNAMIC_PRIMARY_KEY,
        VAR_FIELD_NAME AS PICKLIST_NAME_ID,
        '${CUSTOM_FIELD}.FIELD_VALUE' AS PICKLIST_ITEM_NAME,
        GET_ENTITY_TYPE_FOR_TABLE(TABLENAME) AS CUSTOM_FIELD_ENTITY_TYPE,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS CUSTOM_FIELD_ENTITY_ID,
        REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', '') AS CUSTOM_FIELD_FIELD_NAME,
        IFNULL(JOINID, 0) AS JOIN_ID,
        '${PICKLIST_ITEM}.LONG_DESCRIPTION' AS SOURCE_COLUMN_NAME,
        NULL AS CONSTITUENT_JOIN_FIELD;
      
      INSERT THEGURU_FIELD_DEFINITIONS
        (VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY, DYNAMIC_PRIMARY_KEY,
          PICKLIST_NAME_ID, PICKLIST_ITEM_NAME, CUSTOM_FIELD_ENTITY_TYPE, CUSTOM_FIELD_ENTITY_ID, CUSTOM_FIELD_FIELD_NAME, JOIN_ID, SOURCE_COLUMN_NAME, CONSTITUENT_JOIN_FIELD)
      SELECT
        VIEWNAME,
        CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
          CASE
            WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_DESCRIPTION'), 1, 64)) IS NOT NULL THEN
                (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_DESCRIPTION'), 1, 64))
            WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
            WHEN VAR_SECTION_LABEL = 'Record Information' THEN IFNULL((SELECT CASE WHEN SECTION_LABEL LIKE 'Edit %' THEN CONCAT(REPLACE(SECTION_LABEL, 'Edit ', ''), ' Information') ELSE SECTION_LABEL END FROM TEMP_OL_FIELD_DEFINITIONS B WHERE B.PAGE_TYPE = VAR_PAGE_TYPE ORDER BY SECTION_ORDER LIMIT 1), VAR_SECTION_LABEL)
            ELSE IFNULL(VAR_SECTION_LABEL, '')
          END) AS FIELD_GROUP,
        CONCAT('GETPICKLISTDETAIL(''', VAR_FIELD_NAME, ''', GETCUSTOMFIELD(',
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
          ', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '''))') AS COLUMN_NAME,
        SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_DESC'), 1, 64) AS ALIAS_NAME,
        CONCAT(VAR_FIELD_LABEL, ' Description') AS DISPLAY_TEXT,
        1 AS FIELD_TYPE,
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
            WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
            AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS DYNAMIC_PRIMARY_KEY,
        VAR_FIELD_NAME AS PICKLIST_NAME_ID,
        '${CUSTOM_FIELD}.FIELD_VALUE' AS PICKLIST_ITEM_NAME,
        GET_ENTITY_TYPE_FOR_TABLE(TABLENAME) AS CUSTOM_FIELD_ENTITY_TYPE,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS CUSTOM_FIELD_ENTITY_ID,
        REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', '') AS CUSTOM_FIELD_FIELD_NAME,
        IFNULL(JOINID, 0) AS JOIN_ID,
        '${PICKLIST_ITEM}.DETAIL' AS SOURCE_COLUMN_NAME,
        NULL AS CONSTITUENT_JOIN_FIELD;

    ELSEIF VAR_FIELD_TYPE = 'MULTI_PICKLIST' THEN
      INSERT THEGURU_FIELD_DEFINITIONS
        (VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY, DYNAMIC_PRIMARY_KEY,
          PICKLIST_NAME_ID, PICKLIST_ITEM_NAME, CUSTOM_FIELD_ENTITY_TYPE, CUSTOM_FIELD_ENTITY_ID, CUSTOM_FIELD_FIELD_NAME, JOIN_ID, SOURCE_COLUMN_NAME, CONSTITUENT_JOIN_FIELD)
      SELECT
        VIEWNAME,
        CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
          CASE
            WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_SHORT_DISPLAY_NAME'), 1, 64)) IS NOT NULL THEN
                (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_SHORT_DISPLAY_NAME'), 1, 64))
            WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
            WHEN VAR_SECTION_LABEL = 'Record Information' THEN IFNULL((SELECT CASE WHEN SECTION_LABEL LIKE 'Edit %' THEN CONCAT(REPLACE(SECTION_LABEL, 'Edit ', ''), ' Information') ELSE SECTION_LABEL END FROM TEMP_OL_FIELD_DEFINITIONS B WHERE B.PAGE_TYPE = VAR_PAGE_TYPE ORDER BY SECTION_ORDER LIMIT 1), VAR_SECTION_LABEL)
            ELSE IFNULL(VAR_SECTION_LABEL, '')
          END) AS FIELD_GROUP,
        CONCAT('GETCUSTOMFIELDDISPLAYVALUECONCATENATED(',
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
          ', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), ''', ''', VAR_FIELD_NAME, ''')') AS COLUMN_NAME,
        SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_SDN'), 1, 64) AS ALIAS_NAME,
        CONCAT(VAR_FIELD_LABEL, ' Short Display Names') AS DISPLAY_TEXT,
        1 AS FIELD_TYPE,
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
            WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
            AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS DYNAMIC_PRIMARY_KEY,
        VAR_FIELD_NAME AS PICKLIST_NAME_ID,
        '${CUSTOM_FIELD}.FIELD_VALUE' AS PICKLIST_ITEM_NAME,
        GET_ENTITY_TYPE_FOR_TABLE(TABLENAME) AS CUSTOM_FIELD_ENTITY_TYPE,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS CUSTOM_FIELD_ENTITY_ID,
        REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', '') AS CUSTOM_FIELD_FIELD_NAME,
        IFNULL(JOINID, 0) AS JOIN_ID,
        '${PICKLIST_ITEM}.DEFAULT_DISPLAY_VALUE' AS SOURCE_COLUMN_NAME,
        NULL AS CONSTITUENT_JOIN_FIELD;
      
      INSERT THEGURU_FIELD_DEFINITIONS
        (VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY, DYNAMIC_PRIMARY_KEY,
          PICKLIST_NAME_ID, PICKLIST_ITEM_NAME, CUSTOM_FIELD_ENTITY_TYPE, CUSTOM_FIELD_ENTITY_ID, CUSTOM_FIELD_FIELD_NAME, JOIN_ID, SOURCE_COLUMN_NAME, CONSTITUENT_JOIN_FIELD)
      SELECT
        VIEWNAME,
        CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
          CASE
            WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_LONG_DISPLAY_NAME'), 1, 64)) IS NOT NULL THEN
                (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_LONG_DISPLAY_NAME'), 1, 64))
            WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
            WHEN VAR_SECTION_LABEL = 'Record Information' THEN IFNULL((SELECT CASE WHEN SECTION_LABEL LIKE 'Edit %' THEN CONCAT(REPLACE(SECTION_LABEL, 'Edit ', ''), ' Information') ELSE SECTION_LABEL END FROM TEMP_OL_FIELD_DEFINITIONS B WHERE B.PAGE_TYPE = VAR_PAGE_TYPE ORDER BY SECTION_ORDER LIMIT 1), VAR_SECTION_LABEL)
            ELSE IFNULL(VAR_SECTION_LABEL, '')
          END) AS FIELD_GROUP,
        CONCAT('GETCUSTOMFIELDLONGDESCRIPTIONCONCATENATED(',
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
          ', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), ''', ''', VAR_FIELD_NAME, ''')') AS COLUMN_NAME,
        SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_LDN'), 1, 64) AS ALIAS_NAME,
        CONCAT(VAR_FIELD_LABEL, ' Long Display Names') AS DISPLAY_TEXT,
        1 AS FIELD_TYPE,
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
            WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
            AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS DYNAMIC_PRIMARY_KEY,
        VAR_FIELD_NAME AS PICKLIST_NAME_ID,
        '${CUSTOM_FIELD}.FIELD_VALUE' AS PICKLIST_ITEM_NAME,
        GET_ENTITY_TYPE_FOR_TABLE(TABLENAME) AS CUSTOM_FIELD_ENTITY_TYPE,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS CUSTOM_FIELD_ENTITY_ID,
        REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', '') AS CUSTOM_FIELD_FIELD_NAME,
        IFNULL(JOINID, 0) AS JOIN_ID,
        '${PICKLIST_ITEM}.LONG_DESCRIPTION' AS SOURCE_COLUMN_NAME,
        NULL AS CONSTITUENT_JOIN_FIELD;
      
      INSERT THEGURU_FIELD_DEFINITIONS
        (VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY, DYNAMIC_PRIMARY_KEY,
          PICKLIST_NAME_ID, PICKLIST_ITEM_NAME, CUSTOM_FIELD_ENTITY_TYPE, CUSTOM_FIELD_ENTITY_ID, CUSTOM_FIELD_FIELD_NAME, JOIN_ID, SOURCE_COLUMN_NAME, CONSTITUENT_JOIN_FIELD)
      SELECT
        VIEWNAME,
        CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
          CASE
            WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_DESCRIPTION'), 1, 64)) IS NOT NULL THEN
                (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), 'DESCRIPTION'), 1, 64))
            WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
            WHEN VAR_SECTION_LABEL = 'Record Information' THEN IFNULL((SELECT CASE WHEN SECTION_LABEL LIKE 'Edit %' THEN CONCAT(REPLACE(SECTION_LABEL, 'Edit ', ''), ' Information') ELSE SECTION_LABEL END FROM TEMP_OL_FIELD_DEFINITIONS B WHERE B.PAGE_TYPE = VAR_PAGE_TYPE ORDER BY SECTION_ORDER LIMIT 1), VAR_SECTION_LABEL)
            ELSE IFNULL(VAR_SECTION_LABEL, '')
          END) AS FIELD_GROUP,
        CONCAT('GETCUSTOMFIELDPICKLISTDETAILCONCATENATED(',
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
          ', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), ''', ''', VAR_FIELD_NAME, ''')') AS COLUMN_NAME,
        SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_DESC'), 1, 64) AS ALIAS_NAME,
        CONCAT(VAR_FIELD_LABEL, ' Description Names') AS DISPLAY_TEXT,
        1 AS FIELD_TYPE,
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
            WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
            AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS DYNAMIC_PRIMARY_KEY,
        VAR_FIELD_NAME AS PICKLIST_NAME_ID,
        '${CUSTOM_FIELD}.FIELD_VALUE' AS PICKLIST_ITEM_NAME,
        GET_ENTITY_TYPE_FOR_TABLE(TABLENAME) AS CUSTOM_FIELD_ENTITY_TYPE,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS CUSTOM_FIELD_ENTITY_ID,
        REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', '') AS CUSTOM_FIELD_FIELD_NAME,
        IFNULL(JOINID, 0) AS JOIN_ID,
        '${PICKLIST_ITEM}.DETAIL' AS SOURCE_COLUMN_NAME,
        NULL AS CONSTITUENT_JOIN_FIELD;

    ELSEIF VAR_FIELD_TYPE = 'MULTI_PICKLIST_ADDITIONAL' THEN
      INSERT THEGURU_FIELD_DEFINITIONS
        (VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY, DYNAMIC_PRIMARY_KEY,
          PICKLIST_NAME_ID, PICKLIST_ITEM_NAME, CUSTOM_FIELD_ENTITY_TYPE, CUSTOM_FIELD_ENTITY_ID, CUSTOM_FIELD_FIELD_NAME, JOIN_ID, SOURCE_COLUMN_NAME, CONSTITUENT_JOIN_FIELD)
      SELECT
        VIEWNAME,
        CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
          CASE
            WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_SHORT_DISPLAY_NAME'), 1, 64)) IS NOT NULL THEN
                (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_SHORT_DISPLAY_NAME'), 1, 64))
            WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
            WHEN VAR_SECTION_LABEL = 'Record Information' THEN IFNULL((SELECT CASE WHEN SECTION_LABEL LIKE 'Edit %' THEN CONCAT(REPLACE(SECTION_LABEL, 'Edit ', ''), ' Information') ELSE SECTION_LABEL END FROM TEMP_OL_FIELD_DEFINITIONS B WHERE B.PAGE_TYPE = VAR_PAGE_TYPE ORDER BY SECTION_ORDER LIMIT 1), VAR_SECTION_LABEL)
            ELSE IFNULL(VAR_SECTION_LABEL, '')
          END) AS FIELD_GROUP,
        CONCAT('GETCUSTOMFIELDDISPLAYVALUECONCATENATED(',
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
          ', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), ''', ''', VAR_FIELD_NAME, ''')') AS COLUMN_NAME,
        SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_SDN'), 1, 64) AS ALIAS_NAME,
        CONCAT(VAR_FIELD_LABEL, ' Short Display Names') AS DISPLAY_TEXT,
        1 AS FIELD_TYPE,
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
            WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
            AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS DYNAMIC_PRIMARY_KEY,
        VAR_FIELD_NAME AS PICKLIST_NAME_ID,
        '${CUSTOM_FIELD}.FIELD_VALUE' AS PICKLIST_ITEM_NAME,
        GET_ENTITY_TYPE_FOR_TABLE(TABLENAME) AS CUSTOM_FIELD_ENTITY_TYPE,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS CUSTOM_FIELD_ENTITY_ID,
        REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', '') AS CUSTOM_FIELD_FIELD_NAME,
        IFNULL(JOINID, 0) AS JOIN_ID,
        '${PICKLIST_ITEM}.DEFAULT_DISPLAY_VALUE' AS SOURCE_COLUMN_NAME,
        NULL AS CONSTITUENT_JOIN_FIELD;
      
      INSERT THEGURU_FIELD_DEFINITIONS
        (VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY, DYNAMIC_PRIMARY_KEY,
          PICKLIST_NAME_ID, PICKLIST_ITEM_NAME, CUSTOM_FIELD_ENTITY_TYPE, CUSTOM_FIELD_ENTITY_ID, CUSTOM_FIELD_FIELD_NAME, JOIN_ID, SOURCE_COLUMN_NAME, CONSTITUENT_JOIN_FIELD)
      SELECT
        VIEWNAME,
        CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
          CASE
            WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_LONG_DISPLAY_NAME'), 1, 64)) IS NOT NULL THEN
                (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_LONG_DISPLAY_NAME'), 1, 64))
            WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
            WHEN VAR_SECTION_LABEL = 'Record Information' THEN IFNULL((SELECT CASE WHEN SECTION_LABEL LIKE 'Edit %' THEN CONCAT(REPLACE(SECTION_LABEL, 'Edit ', ''), ' Information') ELSE SECTION_LABEL END FROM TEMP_OL_FIELD_DEFINITIONS B WHERE B.PAGE_TYPE = VAR_PAGE_TYPE ORDER BY SECTION_ORDER LIMIT 1), VAR_SECTION_LABEL)
            ELSE IFNULL(VAR_SECTION_LABEL, '')
          END) AS FIELD_GROUP,
        CONCAT('GETCUSTOMFIELDLONGDESCRIPTIONCONCATENATED(',
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
          ', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), ''', ''', VAR_FIELD_NAME, ''')') AS COLUMN_NAME,
        SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_LDN'), 1, 64) AS ALIAS_NAME,
        CONCAT(VAR_FIELD_LABEL, ' Long Display Names') AS DISPLAY_TEXT,
        1 AS FIELD_TYPE,
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
            WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
            AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS DYNAMIC_PRIMARY_KEY,
        VAR_FIELD_NAME AS PICKLIST_NAME_ID,
        '${CUSTOM_FIELD}.FIELD_VALUE' AS PICKLIST_ITEM_NAME,
        GET_ENTITY_TYPE_FOR_TABLE(TABLENAME) AS CUSTOM_FIELD_ENTITY_TYPE,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS CUSTOM_FIELD_ENTITY_ID,
        REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', '') AS CUSTOM_FIELD_FIELD_NAME,
        IFNULL(JOINID, 0) AS JOIN_ID,
        '${PICKLIST_ITEM}.LONG_DESCRIPTION' AS SOURCE_COLUMN_NAME,
        NULL AS CONSTITUENT_JOIN_FIELD;
      
      INSERT THEGURU_FIELD_DEFINITIONS
        (VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY, DYNAMIC_PRIMARY_KEY,
          PICKLIST_NAME_ID, PICKLIST_ITEM_NAME, CUSTOM_FIELD_ENTITY_TYPE, CUSTOM_FIELD_ENTITY_ID, CUSTOM_FIELD_FIELD_NAME, JOIN_ID, SOURCE_COLUMN_NAME, CONSTITUENT_JOIN_FIELD)
      SELECT
        VIEWNAME,
        CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
          CASE
            WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_DESCRIPTION'), 1, 64)) IS NOT NULL THEN
                (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_DESCRIPTION'), 1, 64))
            WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
            WHEN VAR_SECTION_LABEL = 'Record Information' THEN IFNULL((SELECT CASE WHEN SECTION_LABEL LIKE 'Edit %' THEN CONCAT(REPLACE(SECTION_LABEL, 'Edit ', ''), ' Information') ELSE SECTION_LABEL END FROM TEMP_OL_FIELD_DEFINITIONS B WHERE B.PAGE_TYPE = VAR_PAGE_TYPE ORDER BY SECTION_ORDER LIMIT 1), VAR_SECTION_LABEL)
            ELSE IFNULL(VAR_SECTION_LABEL, '')
          END) AS FIELD_GROUP,
        CONCAT('GETCUSTOMFIELDPICKLISTDETAILCONCATENATED(',
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
          ', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), ''', ''', VAR_FIELD_NAME, ''')') AS COLUMN_NAME,
        SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_DESC'), 1, 64) AS ALIAS_NAME,
        CONCAT(VAR_FIELD_LABEL, ' Description Names') AS DISPLAY_TEXT,
        1 AS FIELD_TYPE,
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
            WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
            AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS DYNAMIC_PRIMARY_KEY,
        VAR_FIELD_NAME AS PICKLIST_NAME_ID,
        '${CUSTOM_FIELD}.FIELD_VALUE' AS PICKLIST_ITEM_NAME,
        GET_ENTITY_TYPE_FOR_TABLE(TABLENAME) AS CUSTOM_FIELD_ENTITY_TYPE,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS CUSTOM_FIELD_ENTITY_ID,
        REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', '') AS CUSTOM_FIELD_FIELD_NAME,
        IFNULL(JOINID, 0) AS JOIN_ID,
        '${PICKLIST_ITEM}.DETAIL' AS SOURCE_COLUMN_NAME,
        NULL AS CONSTITUENT_JOIN_FIELD;
      
      INSERT THEGURU_FIELD_DEFINITIONS
        (VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY, DYNAMIC_PRIMARY_KEY,
          PICKLIST_NAME_ID, PICKLIST_ITEM_NAME, CUSTOM_FIELD_ENTITY_TYPE, CUSTOM_FIELD_ENTITY_ID, CUSTOM_FIELD_FIELD_NAME, JOIN_ID, SOURCE_COLUMN_NAME, CONSTITUENT_JOIN_FIELD)
      SELECT
        VIEWNAME,
        CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
          CASE
            WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), 'ADDITIONAL'), 1, 64)) IS NOT NULL THEN
                (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), 'ADDITIONAL'), 1, 64))
            WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
            WHEN VAR_SECTION_LABEL = 'Record Information' THEN IFNULL((SELECT CASE WHEN SECTION_LABEL LIKE 'Edit %' THEN CONCAT(REPLACE(SECTION_LABEL, 'Edit ', ''), ' Information') ELSE SECTION_LABEL END FROM TEMP_OL_FIELD_DEFINITIONS B WHERE B.PAGE_TYPE = VAR_PAGE_TYPE ORDER BY SECTION_ORDER LIMIT 1), VAR_SECTION_LABEL)
            ELSE IFNULL(VAR_SECTION_LABEL, '')
          END) AS FIELD_GROUP,
        CONCAT('GETCUSTOMFIELDCONCATENATED(',
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
          ', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(
          REPLACE(VAR_FIELD_NAME, CASE WHEN VAR_FIELD_NAME LIKE '%.%' THEN '.' ELSE '[' END, CASE WHEN VAR_FIELD_NAME LIKE '%.%' THEN '.additional_' ELSE '[additional_' END),
          'customFieldMap[', ''), ']', ''), ''')') AS COLUMN_NAME,
        SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), 'ADD'), 1, 64) AS ALIAS_NAME,
        CONCAT(VAR_FIELD_LABEL, ' - Additional') AS DISPLAY_TEXT,
        1 AS FIELD_TYPE,
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
            WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
            AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS DYNAMIC_PRIMARY_KEY,
        NULL AS PICKLIST_NAME_ID,
        NULL AS PICKLIST_ITEM_NAME,
        GET_ENTITY_TYPE_FOR_TABLE(TABLENAME) AS CUSTOM_FIELD_ENTITY_TYPE,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS CUSTOM_FIELD_ENTITY_ID,
        REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, CASE WHEN VAR_FIELD_NAME LIKE '%.%' THEN '.' ELSE '[' END, CASE WHEN VAR_FIELD_NAME LIKE '%.%' THEN '.additional_' ELSE '[additional_' END), 'customFieldMap[', ''), ']', '') AS CUSTOM_FIELD_FIELD_NAME,
        IFNULL(JOINID, 0) AS JOIN_ID,
        '${CUSTOM_FIELD}.FIELD_VALUE' AS SOURCE_COLUMN_NAME,
        NULL AS CONSTITUENT_JOIN_FIELD;

    ELSEIF VAR_FIELD_TYPE = 'MULTI_QUERY_LOOKUP' AND VAR_REFERENCE_TYPE = 'constituent' THEN
      INSERT THEGURU_FIELD_DEFINITIONS
        (VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY, DYNAMIC_PRIMARY_KEY,
          PICKLIST_NAME_ID, PICKLIST_ITEM_NAME, CUSTOM_FIELD_ENTITY_TYPE, CUSTOM_FIELD_ENTITY_ID, CUSTOM_FIELD_FIELD_NAME, JOIN_ID, SOURCE_COLUMN_NAME, CONSTITUENT_JOIN_FIELD)
      SELECT
        VIEWNAME,
        CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
          CASE
            WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_ACCOUNTNUMBERS'), 1, 64)) IS NOT NULL THEN
                (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_ACCOUNTNUMBERS'), 1, 64))
            WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
            WHEN VAR_SECTION_LABEL = 'Record Information' THEN IFNULL((SELECT CASE WHEN SECTION_LABEL LIKE 'Edit %' THEN CONCAT(REPLACE(SECTION_LABEL, 'Edit ', ''), ' Information') ELSE SECTION_LABEL END FROM TEMP_OL_FIELD_DEFINITIONS B WHERE B.PAGE_TYPE = VAR_PAGE_TYPE ORDER BY SECTION_ORDER LIMIT 1), VAR_SECTION_LABEL)
            ELSE IFNULL(VAR_SECTION_LABEL, '')
          END) AS FIELD_GROUP,
        CONCAT('GETCUSTOMRELATIONSHIPACCOUNTNUMBERSCONCATENATED(',
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
          ', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), ''')') AS COLUMN_NAME,
        SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_ACCTNBRS'), 1, 64) AS ALIAS_NAME,
        CONCAT(VAR_FIELD_LABEL, ' - ', 'Account Numbers') AS DISPLAY_TEXT,
        1 AS FIELD_TYPE,
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
            WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
            AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS DYNAMIC_PRIMARY_KEY,
        NULL AS PICKLIST_NAME_ID,
        NULL AS PICKLIST_ITEM_NAME,
        GET_ENTITY_TYPE_FOR_TABLE(TABLENAME) AS CUSTOM_FIELD_ENTITY_TYPE,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS CUSTOM_FIELD_ENTITY_ID,
        REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', '') AS CUSTOM_FIELD_FIELD_NAME,
        IFNULL(JOINID, 0) AS JOIN_ID,
        '${CONSTITUENT_TABLE}.ACCOUNT_NUMBER' AS SOURCE_COLUMN_NAME,
        '${CUSTOM_FIELD}.FIELD_NUMERIC_VALUE' AS CONSTITUENT_JOIN_FIELD;
      
      INSERT THEGURU_FIELD_DEFINITIONS
        (VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY, DYNAMIC_PRIMARY_KEY,
          PICKLIST_NAME_ID, PICKLIST_ITEM_NAME, CUSTOM_FIELD_ENTITY_TYPE, CUSTOM_FIELD_ENTITY_ID, CUSTOM_FIELD_FIELD_NAME, JOIN_ID, SOURCE_COLUMN_NAME, CONSTITUENT_JOIN_FIELD)
      SELECT
        VIEWNAME,
        CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
          CASE
            WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_ACCOUNTNAMES'), 1, 64)) IS NOT NULL THEN
                (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_ACCOUNTNAMES'), 1, 64))
            WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
            WHEN VAR_SECTION_LABEL = 'Record Information' THEN IFNULL((SELECT CASE WHEN SECTION_LABEL LIKE 'Edit %' THEN CONCAT(REPLACE(SECTION_LABEL, 'Edit ', ''), ' Information') ELSE SECTION_LABEL END FROM TEMP_OL_FIELD_DEFINITIONS B WHERE B.PAGE_TYPE = VAR_PAGE_TYPE ORDER BY SECTION_ORDER LIMIT 1), VAR_SECTION_LABEL)
            ELSE IFNULL(VAR_SECTION_LABEL, '')
          END) AS FIELD_GROUP,
        CONCAT('GETCUSTOMRELATIONSHIPNAMESCONCATENATED(',
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
          ', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), ''')') AS COLUMN_NAME,
        SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_ACCTNAMES'), 1, 64) AS ALIAS_NAME,
        CONCAT(VAR_FIELD_LABEL, ' - ', 'Account Names') AS DISPLAY_TEXT,
        1 AS FIELD_TYPE,
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
            WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
            AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS DYNAMIC_PRIMARY_KEY,
        NULL AS PICKLIST_NAME_ID,
        NULL AS PICKLIST_ITEM_NAME,
        GET_ENTITY_TYPE_FOR_TABLE(TABLENAME) AS CUSTOM_FIELD_ENTITY_TYPE,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS CUSTOM_FIELD_ENTITY_ID,
        REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', '') AS CUSTOM_FIELD_FIELD_NAME,
        IFNULL(JOINID, 0) AS JOIN_ID,
        'CASE WHEN ${CONSTITUENT_TABLE}.CONSTITUENT_TYPE = ''individual'' THEN CONCAT_WS('', '', ${CONSTITUENT_TABLE}.LAST_NAME, ${CONSTITUENT_TABLE}.FIRST_NAME) WHEN ${CONSTITUENT_TABLE}.CONSTITUENT_TYPE = ''organization'' THEN ${CONSTITUENT_TABLE}.ORGANIZATION_NAME ELSE CAST(${CONSTITUENT_TABLE}.CONSTITUENT_ID AS CHAR(20)) END' AS SOURCE_COLUMN_NAME,
        '${CUSTOM_FIELD}.FIELD_NUMERIC_VALUE' AS CONSTITUENT_JOIN_FIELD;

    ELSEIF VAR_FIELD_TYPE = 'QUERY_LOOKUP' AND VAR_REFERENCE_TYPE = 'constituent' THEN
      INSERT THEGURU_FIELD_DEFINITIONS
        (VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY, DYNAMIC_PRIMARY_KEY,
          PICKLIST_NAME_ID, PICKLIST_ITEM_NAME, CUSTOM_FIELD_ENTITY_TYPE, CUSTOM_FIELD_ENTITY_ID, CUSTOM_FIELD_FIELD_NAME, JOIN_ID, SOURCE_COLUMN_NAME, CONSTITUENT_JOIN_FIELD)
      SELECT
        VIEWNAME,
        CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
          CASE
            WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_ACCOUNTNUMBER'), 1, 64)) IS NOT NULL THEN
                (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_ACCOUNTNUMBER'), 1, 64))
            WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
            WHEN VAR_SECTION_LABEL = 'Record Information' THEN IFNULL((SELECT CASE WHEN SECTION_LABEL LIKE 'Edit %' THEN CONCAT(REPLACE(SECTION_LABEL, 'Edit ', ''), ' Information') ELSE SECTION_LABEL END FROM TEMP_OL_FIELD_DEFINITIONS B WHERE B.PAGE_TYPE = VAR_PAGE_TYPE ORDER BY SECTION_ORDER LIMIT 1), VAR_SECTION_LABEL)
            ELSE IFNULL(VAR_SECTION_LABEL, '')
          END) AS FIELD_GROUP,
        CONCAT('GETCONSTITUENTACCOUNTNUMBER(GETCUSTOMFIELD(',
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
          ', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '''))') AS COLUMN_NAME,
        SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_ACCTNBR'), 1, 64) AS ALIAS_NAME,
        CONCAT(VAR_FIELD_LABEL, ' - ', 'Account Number') AS DISPLAY_TEXT,
        2 AS FIELD_TYPE,
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
            WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
            AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS DYNAMIC_PRIMARY_KEY,
        NULL AS PICKLIST_NAME_ID,
        NULL AS PICKLIST_ITEM_NAME,
        GET_ENTITY_TYPE_FOR_TABLE(TABLENAME) AS CUSTOM_FIELD_ENTITY_TYPE,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS CUSTOM_FIELD_ENTITY_ID,
        REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', '') AS CUSTOM_FIELD_FIELD_NAME,
        IFNULL(JOINID, 0) AS JOIN_ID,
        '${CONSTITUENT_TABLE}.ACCOUNT_NUMBER' AS SOURCE_COLUMN_NAME,
        '${CUSTOM_FIELD}.FIELD_NUMERIC_VALUE' AS CONSTITUENT_JOIN_FIELD;
      
      INSERT THEGURU_FIELD_DEFINITIONS
        (VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY, DYNAMIC_PRIMARY_KEY,
          PICKLIST_NAME_ID, PICKLIST_ITEM_NAME, CUSTOM_FIELD_ENTITY_TYPE, CUSTOM_FIELD_ENTITY_ID, CUSTOM_FIELD_FIELD_NAME, JOIN_ID, SOURCE_COLUMN_NAME, CONSTITUENT_JOIN_FIELD)
      SELECT
        VIEWNAME,
        CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
          CASE
            WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_ACCOUNTNAME'), 1, 64)) IS NOT NULL THEN
                (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_ACCOUNTNAME'), 1, 64))
            WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
            WHEN VAR_SECTION_LABEL = 'Record Information' THEN IFNULL((SELECT CASE WHEN SECTION_LABEL LIKE 'Edit %' THEN CONCAT(REPLACE(SECTION_LABEL, 'Edit ', ''), ' Information') ELSE SECTION_LABEL END FROM TEMP_OL_FIELD_DEFINITIONS B WHERE B.PAGE_TYPE = VAR_PAGE_TYPE ORDER BY SECTION_ORDER LIMIT 1), VAR_SECTION_LABEL)
            ELSE IFNULL(VAR_SECTION_LABEL, '') END) AS FIELD_GROUP,
        CONCAT('GETCONSTITUENTDISPLAYNAME(GETCUSTOMFIELD(',
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
          ', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '''))') AS COLUMN_NAME,
        SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_ACCTNAME'), 1, 64) AS ALIAS_NAME,
        CONCAT(VAR_FIELD_LABEL, ' - ', 'Account Name') AS DISPLAY_TEXT,
        1 AS FIELD_TYPE,
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
            WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
            AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS DYNAMIC_PRIMARY_KEY,
        NULL AS PICKLIST_NAME_ID,
        NULL AS PICKLIST_ITEM_NAME,
        GET_ENTITY_TYPE_FOR_TABLE(TABLENAME) AS CUSTOM_FIELD_ENTITY_TYPE,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS CUSTOM_FIELD_ENTITY_ID,
        REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', '') AS CUSTOM_FIELD_FIELD_NAME,
        IFNULL(JOINID, 0) AS JOIN_ID,
        'CASE WHEN ${CONSTITUENT_TABLE}.CONSTITUENT_TYPE = ''individual'' THEN CONCAT_WS('', '', ${CONSTITUENT_TABLE}.LAST_NAME, ${CONSTITUENT_TABLE}.FIRST_NAME) WHEN ${CONSTITUENT_TABLE}.CONSTITUENT_TYPE = ''organization'' THEN ${CONSTITUENT_TABLE}.ORGANIZATION_NAME ELSE CAST(${CONSTITUENT_TABLE}.CONSTITUENT_ID AS CHAR(20)) END' AS SOURCE_COLUMN_NAME,
        '${CUSTOM_FIELD}.FIELD_NUMERIC_VALUE' AS CONSTITUENT_JOIN_FIELD;

    ELSEIF VAR_FIELD_TYPE = 'QUERY_LOOKUP_DISPLAY' AND VAR_REFERENCE_TYPE = 'constituent' THEN
      INSERT THEGURU_FIELD_DEFINITIONS
        (VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY, DYNAMIC_PRIMARY_KEY,
          PICKLIST_NAME_ID, PICKLIST_ITEM_NAME, CUSTOM_FIELD_ENTITY_TYPE, CUSTOM_FIELD_ENTITY_ID, CUSTOM_FIELD_FIELD_NAME, JOIN_ID, SOURCE_COLUMN_NAME, CONSTITUENT_JOIN_FIELD)
      SELECT
        VIEWNAME,
        CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
          CASE
            WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_ACCOUNTNUMBER'), 1, 64)) IS NOT NULL THEN
                (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_ACCOUNTNUMBER'), 1, 64))
            WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
            WHEN VAR_SECTION_LABEL = 'Record Information' THEN IFNULL((SELECT CASE WHEN SECTION_LABEL LIKE 'Edit %' THEN CONCAT(REPLACE(SECTION_LABEL, 'Edit ', ''), ' Information') ELSE SECTION_LABEL END FROM TEMP_OL_FIELD_DEFINITIONS B WHERE B.PAGE_TYPE = VAR_PAGE_TYPE ORDER BY SECTION_ORDER LIMIT 1), VAR_SECTION_LABEL)
            ELSE IFNULL(VAR_SECTION_LABEL, '') END) AS FIELD_GROUP,
        CONCAT('GETCONSTITUENTACCOUNTNUMBER(GETCUSTOMFIELD(',
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
          ', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '''))') AS COLUMN_NAME,
        SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_ACCTNBR'), 1, 64) AS ALIAS_NAME,
        CONCAT(VAR_FIELD_LABEL, ' - ', 'Account Number') AS DISPLAY_TEXT,
        2 AS FIELD_TYPE,
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
            WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
            AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS DYNAMIC_PRIMARY_KEY,
        NULL AS PICKLIST_NAME_ID,
        NULL AS PICKLIST_ITEM_NAME,
        GET_ENTITY_TYPE_FOR_TABLE(TABLENAME) AS CUSTOM_FIELD_ENTITY_TYPE,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS CUSTOM_FIELD_ENTITY_ID,
        REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', '') AS CUSTOM_FIELD_FIELD_NAME,
        IFNULL(JOINID, 0) AS JOIN_ID,
        '${CONSTITUENT_TABLE}.ACCOUNT_NUMBER' AS SOURCE_COLUMN_NAME,
        '${CUSTOM_FIELD}.FIELD_NUMERIC_VALUE' AS CONSTITUENT_JOIN_FIELD;
      
      INSERT THEGURU_FIELD_DEFINITIONS
        (VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY, DYNAMIC_PRIMARY_KEY,
          PICKLIST_NAME_ID, PICKLIST_ITEM_NAME, CUSTOM_FIELD_ENTITY_TYPE, CUSTOM_FIELD_ENTITY_ID, CUSTOM_FIELD_FIELD_NAME, JOIN_ID, SOURCE_COLUMN_NAME, CONSTITUENT_JOIN_FIELD)
      SELECT
        VIEWNAME,
        CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
          CASE
            WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_ACCOUNTNAME'), 1, 64)) IS NOT NULL THEN
                (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_ACCOUNTNAME'), 1, 64))
            WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
            WHEN VAR_SECTION_LABEL = 'Record Information' THEN IFNULL((SELECT CASE WHEN SECTION_LABEL LIKE 'Edit %' THEN CONCAT(REPLACE(SECTION_LABEL, 'Edit ', ''), ' Information') ELSE SECTION_LABEL END FROM TEMP_OL_FIELD_DEFINITIONS B WHERE B.PAGE_TYPE = VAR_PAGE_TYPE ORDER BY SECTION_ORDER LIMIT 1), VAR_SECTION_LABEL)
            ELSE IFNULL(VAR_SECTION_LABEL, '')
          END) AS FIELD_GROUP,
        CONCAT('GETCONSTITUENTDISPLAYNAME(GETCUSTOMFIELD(',
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
          ', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '''))') AS COLUMN_NAME,
        SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_ACCTNAME'), 1, 64) AS ALIAS_NAME,
        CONCAT(VAR_FIELD_LABEL, ' - ', 'Account Name') AS DISPLAY_TEXT,
        1 AS FIELD_TYPE,
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
            WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
            AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS DYNAMIC_PRIMARY_KEY,
        NULL AS PICKLIST_NAME_ID,
        NULL AS PICKLIST_ITEM_NAME,
        GET_ENTITY_TYPE_FOR_TABLE(TABLENAME) AS CUSTOM_FIELD_ENTITY_TYPE,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS CUSTOM_FIELD_ENTITY_ID,
        REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', '') AS CUSTOM_FIELD_FIELD_NAME,
        IFNULL(JOINID, 0) AS JOIN_ID,
        'CASE WHEN ${CONSTITUENT_TABLE}.CONSTITUENT_TYPE = ''individual'' THEN CONCAT_WS('', '', ${CONSTITUENT_TABLE}.LAST_NAME, ${CONSTITUENT_TABLE}.FIRST_NAME) WHEN ${CONSTITUENT_TABLE}.CONSTITUENT_TYPE = ''organization'' THEN ${CONSTITUENT_TABLE}.ORGANIZATION_NAME ELSE CAST(${CONSTITUENT_TABLE}.CONSTITUENT_ID AS CHAR(20)) END' AS SOURCE_COLUMN_NAME,
        '${CUSTOM_FIELD}.FIELD_NUMERIC_VALUE' AS CONSTITUENT_JOIN_FIELD;

    ELSEIF VAR_FIELD_TYPE = 'QUERY_LOOKUP_OTHER' AND VAR_REFERENCE_TYPE = 'constituent' THEN
      INSERT THEGURU_FIELD_DEFINITIONS
        (VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY, DYNAMIC_PRIMARY_KEY,
          PICKLIST_NAME_ID, PICKLIST_ITEM_NAME, CUSTOM_FIELD_ENTITY_TYPE, CUSTOM_FIELD_ENTITY_ID, CUSTOM_FIELD_FIELD_NAME, JOIN_ID, SOURCE_COLUMN_NAME, CONSTITUENT_JOIN_FIELD)
      SELECT
        VIEWNAME,
        CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
          CASE
            WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_ACCOUNTNUMBER'), 1, 64)) IS NOT NULL THEN
                (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_ACCOUNTNUMBER'), 1, 64))
            WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
            WHEN VAR_SECTION_LABEL = 'Record Information' THEN IFNULL((SELECT CASE WHEN SECTION_LABEL LIKE 'Edit %' THEN CONCAT(REPLACE(SECTION_LABEL, 'Edit ', ''), ' Information') ELSE SECTION_LABEL END FROM TEMP_OL_FIELD_DEFINITIONS B WHERE B.PAGE_TYPE = VAR_PAGE_TYPE ORDER BY SECTION_ORDER LIMIT 1), VAR_SECTION_LABEL)
            ELSE IFNULL(VAR_SECTION_LABEL, '')
          END) AS FIELD_GROUP,
        CONCAT('GETCONSTITUENTACCOUNTNUMBER(GETCUSTOMFIELD(',
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
          ', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '''))') AS COLUMN_NAME,
        SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_ACCTNBR'), 1, 64) AS ALIAS_NAME,
        CONCAT(VAR_FIELD_LABEL, ' - ', 'Account Number') AS DISPLAY_TEXT,
        2 AS FIELD_TYPE,
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
            WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
            AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS DYNAMIC_PRIMARY_KEY,
        NULL AS PICKLIST_NAME_ID,
        NULL AS PICKLIST_ITEM_NAME,
        GET_ENTITY_TYPE_FOR_TABLE(TABLENAME) AS CUSTOM_FIELD_ENTITY_TYPE,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS CUSTOM_FIELD_ENTITY_ID,
        REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', '') AS CUSTOM_FIELD_FIELD_NAME,
        IFNULL(JOINID, 0) AS JOIN_ID,
        '${CONSTITUENT_TABLE}.ACCOUNT_NUMBER' AS SOURCE_COLUMN_NAME,
        '${CUSTOM_FIELD}.FIELD_NUMERIC_VALUE' AS CONSTITUENT_JOIN_FIELD;
      
      INSERT THEGURU_FIELD_DEFINITIONS
        (VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY, DYNAMIC_PRIMARY_KEY,
          PICKLIST_NAME_ID, PICKLIST_ITEM_NAME, CUSTOM_FIELD_ENTITY_TYPE, CUSTOM_FIELD_ENTITY_ID, CUSTOM_FIELD_FIELD_NAME, JOIN_ID, SOURCE_COLUMN_NAME, CONSTITUENT_JOIN_FIELD)
      SELECT
        VIEWNAME,
        CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
          CASE
            WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64)) IS NOT NULL THEN
                (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64))
            WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
            WHEN VAR_SECTION_LABEL = 'Record Information' THEN IFNULL((SELECT CASE WHEN SECTION_LABEL LIKE 'Edit %' THEN CONCAT(REPLACE(SECTION_LABEL, 'Edit ', ''), ' Information') ELSE SECTION_LABEL END FROM TEMP_OL_FIELD_DEFINITIONS B WHERE B.PAGE_TYPE = VAR_PAGE_TYPE ORDER BY SECTION_ORDER LIMIT 1), VAR_SECTION_LABEL)
            ELSE IFNULL(VAR_SECTION_LABEL, '')
          END) AS FIELD_GROUP,
        CONCAT('GETCONSTITUENTQUERYLOOKUPOTHER(',
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
          ', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), ''')') AS COLUMN_NAME,
        SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64) AS ALIAS_NAME,
        CONCAT(VAR_FIELD_LABEL, ' - ', 'Account Name') AS DISPLAY_TEXT,
        1 AS FIELD_TYPE,
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
            WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
            AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS DYNAMIC_PRIMARY_KEY,
        NULL AS PICKLIST_NAME_ID,
        NULL AS PICKLIST_ITEM_NAME,
        GET_ENTITY_TYPE_FOR_TABLE(TABLENAME) AS CUSTOM_FIELD_ENTITY_TYPE,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS CUSTOM_FIELD_ENTITY_ID,
        CONCAT(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), ' ${OR} ',
          CASE WHEN REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', '') LIKE '%.%' THEN REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '.other_') ELSE CONCAT('other_', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', '')) END)
        AS CUSTOM_FIELD_FIELD_NAME,
        IFNULL(JOINID, 0) AS JOIN_ID,
        'IFNULL(CASE WHEN ${CONSTITUENT_TABLE}.CONSTITUENT_TYPE = ''individual'' THEN CONCAT_WS('', '', ${CONSTITUENT_TABLE}.LAST_NAME, ${CONSTITUENT_TABLE}.FIRST_NAME) WHEN ${CONSTITUENT_TABLE}.CONSTITUENT_TYPE = ''organization'' THEN ${CONSTITUENT_TABLE}.ORGANIZATION_NAME ELSE CAST(${CONSTITUENT_TABLE}.CONSTITUENT_ID AS CHAR(20)) END, ${CUSTOM_FIELD}.FIELD_VALUE)' AS SOURCE_COLUMN_NAME,
        '${CUSTOM_FIELD}.FIELD_NUMERIC_VALUE' AS CONSTITUENT_JOIN_FIELD;

    ELSEIF VAR_FIELD_TYPE = 'CUSTOM_TABLE_REFERENCE' THEN
      -- TODO - Find a better way to pull the custom table title fields and remove the function
      INSERT THEGURU_FIELD_DEFINITIONS
        (VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY, DYNAMIC_PRIMARY_KEY,
          PICKLIST_NAME_ID, PICKLIST_ITEM_NAME, CUSTOM_FIELD_ENTITY_TYPE, CUSTOM_FIELD_ENTITY_ID, CUSTOM_FIELD_FIELD_NAME, JOIN_ID, SOURCE_COLUMN_NAME, CONSTITUENT_JOIN_FIELD)
      SELECT
        VIEWNAME,
        CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
          CASE
            WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64)) IS NOT NULL THEN
                (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64))
            WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
            WHEN VAR_SECTION_LABEL = 'Record Information' THEN IFNULL((SELECT CASE WHEN SECTION_LABEL LIKE 'Edit %' THEN CONCAT(REPLACE(SECTION_LABEL, 'Edit ', ''), ' Information') ELSE SECTION_LABEL END FROM TEMP_OL_FIELD_DEFINITIONS B WHERE B.PAGE_TYPE = VAR_PAGE_TYPE ORDER BY SECTION_ORDER LIMIT 1), VAR_SECTION_LABEL)
            ELSE IFNULL(VAR_SECTION_LABEL, '') END) AS FIELD_GROUP,
        CONCAT('GETCUSTOMTABLETITLEFIELDVALUES(''', VAR_REFERENCE_TYPE, ''', GETCUSTOMFIELD(',
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
          ', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '''))') AS COLUMN_NAME,
        SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64) AS ALIAS_NAME,
        VAR_FIELD_LABEL AS DISPLAY_TEXT,
        1 AS FIELD_TYPE,
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
            WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
            AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS DYNAMIC_PRIMARY_KEY,
        NULL AS PICKLIST_NAME_ID,
        NULL AS PICKLIST_ITEM_NAME,
        GET_ENTITY_TYPE_FOR_TABLE(TABLENAME) AS CUSTOM_FIELD_ENTITY_TYPE,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS CUSTOM_FIELD_ENTITY_ID,
        REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', '') AS CUSTOM_FIELD_FIELD_NAME,
        IFNULL(JOINID, 0) AS JOIN_ID,
        CONCAT('GETCUSTOMTABLETITLEFIELDVALUES(''', VAR_REFERENCE_TYPE, ''', GETCUSTOMFIELD(',
          CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
          (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
            WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
            AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
            ', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '''))') AS SOURCE_COLUMN_NAME,
        NULL AS CONSTITUENT_JOIN_FIELD;

    ELSEIF VAR_FIELD_TYPE = 'MULTI_CUSTOM_TABLE_REFERENCE' THEN
      INSERT THEGURU_FIELD_DEFINITIONS
        (VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY, DYNAMIC_PRIMARY_KEY,
          PICKLIST_NAME_ID, PICKLIST_ITEM_NAME, CUSTOM_FIELD_ENTITY_TYPE, CUSTOM_FIELD_ENTITY_ID, CUSTOM_FIELD_FIELD_NAME, JOIN_ID, SOURCE_COLUMN_NAME, CONSTITUENT_JOIN_FIELD)
      SELECT
        VIEWNAME,
        CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
          CASE
            WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64)) IS NOT NULL THEN
                (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64))
            WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
            WHEN VAR_SECTION_LABEL = 'Record Information' THEN IFNULL((SELECT CASE WHEN SECTION_LABEL LIKE 'Edit %' THEN CONCAT(REPLACE(SECTION_LABEL, 'Edit ', ''), ' Information') ELSE SECTION_LABEL END FROM TEMP_OL_FIELD_DEFINITIONS B WHERE B.PAGE_TYPE = VAR_PAGE_TYPE ORDER BY SECTION_ORDER LIMIT 1), VAR_SECTION_LABEL)
            ELSE IFNULL(VAR_SECTION_LABEL, '') END) AS FIELD_GROUP,
        CONCAT('GETCUSTOMTABLETITLEFIELDVALUESCONCATENATED(''', VAR_REFERENCE_TYPE, ''', ',
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
          ', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), ''')') AS COLUMN_NAME,
        SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64) AS ALIAS_NAME,
        VAR_FIELD_LABEL AS DISPLAY_TEXT,
        1 AS FIELD_TYPE,
        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
            WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
            AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS DYNAMIC_PRIMARY_KEY,
        NULL AS PICKLIST_NAME_ID,
        NULL AS PICKLIST_ITEM_NAME,
        GET_ENTITY_TYPE_FOR_TABLE(TABLENAME) AS CUSTOM_FIELD_ENTITY_TYPE,
        (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS CUSTOM_FIELD_ENTITY_ID,
        REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', '') AS CUSTOM_FIELD_FIELD_NAME,
        IFNULL(JOINID, 0) AS JOIN_ID,
        CONCAT('GETCUSTOMTABLETITLEFIELDVALUESCONCATENATED(''', VAR_REFERENCE_TYPE, ''', ',
          (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
          WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
          AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI'),
          ', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), ''')') AS SOURCE_COLUMN_NAME,
        NULL AS CONSTITUENT_JOIN_FIELD;  
    END IF;
  END LOOP;
  SET CSR_END = 0;
  
  OPEN CSR_ADDITIONAL_FIELD_DEFINITIONS;
  ADDITIONAL_FIELD_DEFINITIONS_LOOP: LOOP
    FETCH CSR_ADDITIONAL_FIELD_DEFINITIONS INTO
      VAR_FIELD_GROUP, VAR_DISPLAY_NAME, VAR_ADDITIONAL_DEF_COLUMN_NAME, VAR_ALIAS_NAME, VAR_ADDITIONAL_DEF_FIELD_TYPE,
      VAR_PICKLIST_NAME_ID, VAR_PICKLIST_ITEM_NAME, VAR_CUSTOM_FIELD_ENTITY_TYPE,
      VAR_CUSTOM_FIELD_ENTITY_ID, VAR_CUSTOM_FIELD_FIELD_NAME, VAR_SOURCE_COLUMN_NAME, VAR_CONSTITUENT_JOIN_FIELD, VAR_PICKLIST_CUSTOM_FIELD;
    IF CSR_END THEN
      LEAVE ADDITIONAL_FIELD_DEFINITIONS_LOOP;
    END IF;
    
    INSERT THEGURU_FIELD_DEFINITIONS
      (VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY, DYNAMIC_PRIMARY_KEY,
      PICKLIST_NAME_ID, PICKLIST_ITEM_NAME, CUSTOM_FIELD_ENTITY_TYPE, CUSTOM_FIELD_ENTITY_ID, CUSTOM_FIELD_FIELD_NAME,
      JOIN_ID, SOURCE_COLUMN_NAME, CONSTITUENT_JOIN_FIELD, PICKLIST_CUSTOM_FIELD)
    SELECT
      VIEWNAME,
      CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
        CASE
          WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(VAR_ALIAS_NAME, '')), 1, 64)) IS NOT NULL THEN
              (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(VAR_ALIAS_NAME, '')), 1, 64))
          WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
          ELSE IFNULL(VAR_FIELD_GROUP,'')
        END),
      CONCAT(REPLACE(VAR_ADDITIONAL_DEF_COLUMN_NAME, '${COLUMN_PREFIX}', IFNULL(TABLECOLUMNPREFIX, ''))),
      SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(VAR_ALIAS_NAME, '')), 1, 64) AS ALIAS_NAME,
      VAR_DISPLAY_NAME,
      VAR_ADDITIONAL_DEF_FIELD_TYPE,
      CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
      (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
        WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
        AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY,
      (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
            WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
            AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI') AS DYNAMIC_PRIMARY_KEY,
      REPLACE(VAR_PICKLIST_NAME_ID, '${COLUMN_PREFIX}', CONCAT('${', TABLENAME, '}.')) AS PICKLIST_NAME_ID,
      REPLACE(VAR_PICKLIST_ITEM_NAME, '${COLUMN_PREFIX}', CONCAT('${', TABLENAME, '}.')) AS PICKLIST_ITEM_NAME,
      REPLACE(VAR_CUSTOM_FIELD_ENTITY_TYPE, '${COLUMN_PREFIX}', CONCAT('${', TABLENAME, '}.')) AS CUSTOM_FIELD_ENTITY_TYPE,
      REPLACE(VAR_CUSTOM_FIELD_ENTITY_ID, '${COLUMN_PREFIX}', CONCAT('${', TABLENAME, '}.')) AS CUSTOM_FIELD_ENTITY_ID,
      REPLACE(VAR_CUSTOM_FIELD_FIELD_NAME, '${COLUMN_PREFIX}', CONCAT('${', TABLENAME, '}.')) AS CUSTOM_FIELD_FIELD_NAME,
      IFNULL(JOINID, 0) AS JOIN_ID,
      REPLACE(VAR_SOURCE_COLUMN_NAME, '${COLUMN_PREFIX}', CONCAT('${', TABLENAME, '}.')) AS SOURCE_COLUMN_NAME,
      REPLACE(VAR_CONSTITUENT_JOIN_FIELD, '${COLUMN_PREFIX}', CONCAT('${', TABLENAME, '}.')) AS CONSTITUENT_JOIN_FIELD,
      VAR_PICKLIST_CUSTOM_FIELD AS PICKLIST_CUSTOM_FIELD;
      
  END LOOP;
  SET CSR_END = 0;
  CLOSE CSR_ADDITIONAL_FIELD_DEFINITIONS;
END;$$