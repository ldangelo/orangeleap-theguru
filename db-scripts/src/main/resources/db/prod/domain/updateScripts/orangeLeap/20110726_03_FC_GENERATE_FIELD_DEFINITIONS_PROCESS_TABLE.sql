DELIMITER $$

DROP PROCEDURE IF EXISTS GENERATE_FIELD_DEFINITIONS_PROCESS_TABLE$$

CREATE PROCEDURE GENERATE_FIELD_DEFINITIONS_PROCESS_TABLE(VIEWNAME VARCHAR(255), TABLENAME VARCHAR(255), ISVIEW BIT, TABLECOLUMNPREFIX VARCHAR(255), FIELDGROUPPREFIX VARCHAR(255), FIELDGROUPOVERRIDE VARCHAR(255), PARENTENTITYTYPE VARCHAR(255), SUBFIELDNAME VARCHAR(255), DEFAULTPAGETYPE VARCHAR(255), USEPARENTFIELDGROUPPREFIXES BIT, JOINID BIGINT)
BEGIN
  DECLARE CSR_END INT DEFAULT 0;

  -- THEGURU_VIEW Variables
  DECLARE VAR_VIEW_ID INTEGER;
  DECLARE VAR_VIEW_NAME VARCHAR(255);
  DECLARE VAR_VIEW_DISPLAY_TEXT VARCHAR(255);
  DECLARE VAR_PRIMARY_TABLE VARCHAR(255);
  DECLARE VAR_PRIMARY_TABLE_IS_VIEW BIT;
  DECLARE VAR_PRIMARY_TABLE_ALIAS VARCHAR(255);
  DECLARE VAR_PRIMARY_TABLE_COLUMN_PREFIX VARCHAR(255);
  DECLARE VAR_PRIMARY_TABLE_FIELD_GROUP_PREFIX VARCHAR(255);
  DECLARE VAR_PRIMARY_TABLE_FIELD_GROUP_OVERRIDE VARCHAR(255);
  DECLARE VAR_PRIMARY_TABLE_PARENT_ENTITY_TYPE VARCHAR(255);
  DECLARE VAR_PRIMARY_TABLE_SUB_FIELD_NAME VARCHAR(255);
  DECLARE VAR_PRIMARY_TABLE_DEFAULT_PAGE_TYPE VARCHAR(255);

  -- THEGURU_JOIN Variables
  DECLARE VAR_JOIN_ID INTEGER;
  DECLARE VAR_JOIN_TYPE VARCHAR(20);
  DECLARE VAR_JOIN_TABLE VARCHAR(255);
  DECLARE VAR_JOIN_TABLE_IS_VIEW BIT;
  DECLARE VAR_JOIN_TABLE_ALIAS VARCHAR(255);
  DECLARE VAR_JOIN_TABLE_COLUMN_PREFIX VARCHAR(255);
  DECLARE VAR_JOIN_CRITERIA VARCHAR(2000);
  DECLARE VAR_JOIN_TABLE_FIELD_GROUP_PREFIX VARCHAR(255);
  DECLARE VAR_JOIN_TABLE_FIELD_GROUP_OVERRIDE VARCHAR(255);
  DECLARE VAR_JOIN_TABLE_PARENT_ENTITY_TYPE VARCHAR(255);
  DECLARE VAR_JOIN_TABLE_SUB_FIELD_NAME VARCHAR(255);
  DECLARE VAR_JOIN_TABLE_DEFAULT_PAGE_TYPE VARCHAR(255);
  DECLARE VAR_JOIN_TABLE_USE_PARENT_FIELD_GROUP_PREFIXES BIT;

  DECLARE CSR_JOINS CURSOR FOR
    SELECT
      JOIN_ID, JOIN_TYPE, CASE WHEN CUSTOM_TABLE_NAME IS NOT NULL AND LENGTH(RTRIM(CUSTOM_TABLE_NAME)) <> '' THEN CUSTOM_TABLE_NAME ELSE JOIN_TABLE END,
      JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, FIELD_GROUP_PREFIX, FIELD_GROUP_OVERRIDE, PARENT_ENTITY_TYPE, SUB_FIELD_NAME, DEFAULT_PAGE_TYPE, USE_PARENT_FIELD_GROUP_PREFIXES
    FROM THEGURU_VIEW_JOIN
    WHERE THEGURU_VIEW_JOIN.VIEW_ID = VAR_VIEW_ID
    AND INCLUDE_ALL_FIELDS = TRUE;

  DECLARE CONTINUE HANDLER FOR NOT FOUND SET CSR_END = 1;

  IF ISVIEW THEN
    SELECT CASE WHEN CUSTOM_TABLE_NAME IS NOT NULL AND LENGTH(RTRIM(CUSTOM_TABLE_NAME)) <> '' THEN CUSTOM_TABLE_NAME ELSE PRIMARY_TABLE END,
    PRIMARY_TABLE_IS_VIEW, PRIMARY_TABLE_COLUMN_PREFIX, FIELD_GROUP_PREFIX, FIELD_GROUP_OVERRIDE, PARENT_ENTITY_TYPE, SUB_FIELD_NAME, DEFAULT_PAGE_TYPE
    INTO VAR_PRIMARY_TABLE, VAR_PRIMARY_TABLE_IS_VIEW, VAR_PRIMARY_TABLE_COLUMN_PREFIX, VAR_PRIMARY_TABLE_FIELD_GROUP_PREFIX, VAR_PRIMARY_TABLE_FIELD_GROUP_OVERRIDE, VAR_PRIMARY_TABLE_PARENT_ENTITY_TYPE, VAR_PRIMARY_TABLE_SUB_FIELD_NAME, VAR_PRIMARY_TABLE_DEFAULT_PAGE_TYPE
    FROM THEGURU_VIEW WHERE VIEW_NAME = TABLENAME;
    -- Check if the viewname = tablename and if it does not, pass the TABLECOLUMNPREFIX into the call.  Otherwise, the TABLECOLUMNPREFIX and the VAR_PRIMARY_TABLE_COLUMN_PREFIX will be the same and will duplicate
    CALL GENERATE_FIELD_DEFINITIONS_PROCESS_TABLE(VIEWNAME, VAR_PRIMARY_TABLE, VAR_PRIMARY_TABLE_IS_VIEW, CONCAT(CASE WHEN VIEWNAME <> TABLENAME THEN IFNULL(TABLECOLUMNPREFIX, '') ELSE '' END, IFNULL(VAR_PRIMARY_TABLE_COLUMN_PREFIX, '')), CONCAT(IFNULL(FIELDGROUPPREFIX, ''), IFNULL(VAR_PRIMARY_TABLE_FIELD_GROUP_PREFIX,'')), VAR_PRIMARY_TABLE_FIELD_GROUP_OVERRIDE, VAR_PRIMARY_TABLE_PARENT_ENTITY_TYPE, VAR_PRIMARY_TABLE_SUB_FIELD_NAME, VAR_PRIMARY_TABLE_DEFAULT_PAGE_TYPE, USEPARENTFIELDGROUPPREFIXES, JOINID);
  SET CSR_END = 0;
  ELSE
    CALL GENERATE_FIELD_DEFINITIONS_BUILD_FIELDS(VIEWNAME, TABLENAME, CONCAT(CASE WHEN VIEWNAME <> TABLENAME THEN IFNULL(TABLECOLUMNPREFIX, '') ELSE '' END, IFNULL(VAR_PRIMARY_TABLE_COLUMN_PREFIX, '')), FIELDGROUPPREFIX, FIELDGROUPOVERRIDE, PARENTENTITYTYPE, SUBFIELDNAME, DEFAULTPAGETYPE, JOINID);
    SET CSR_END = 0;
  END IF;

  SET VAR_VIEW_ID = (SELECT VIEW_ID FROM THEGURU_VIEW WHERE VIEW_NAME = TABLENAME);

  -- Iterate through the join tables
  OPEN CSR_JOINS;

  JOINS_LOOP: LOOP
    FETCH CSR_JOINS INTO
      VAR_JOIN_ID, VAR_JOIN_TYPE, VAR_JOIN_TABLE, VAR_JOIN_TABLE_IS_VIEW, VAR_JOIN_TABLE_ALIAS, VAR_JOIN_TABLE_COLUMN_PREFIX, VAR_JOIN_CRITERIA, VAR_JOIN_TABLE_FIELD_GROUP_PREFIX, VAR_JOIN_TABLE_FIELD_GROUP_OVERRIDE, VAR_JOIN_TABLE_PARENT_ENTITY_TYPE, VAR_JOIN_TABLE_SUB_FIELD_NAME, VAR_JOIN_TABLE_DEFAULT_PAGE_TYPE, VAR_JOIN_TABLE_USE_PARENT_FIELD_GROUP_PREFIXES;

    IF CSR_END THEN
      LEAVE JOINS_LOOP;
    END IF;

    -- If the parent specified to use the parent field group prefixes, then use that setting
    IF (USEPARENTFIELDGROUPPREFIXES) THEN
        SET VAR_JOIN_TABLE_USE_PARENT_FIELD_GROUP_PREFIXES = USEPARENTFIELDGROUPPREFIXES;
    END IF;

    IF VAR_JOIN_TABLE_IS_VIEW THEN
      SELECT CASE WHEN CUSTOM_TABLE_NAME IS NOT NULL AND LENGTH(RTRIM(CUSTOM_TABLE_NAME)) <> '' THEN CUSTOM_TABLE_NAME ELSE PRIMARY_TABLE END,
      PRIMARY_TABLE_IS_VIEW, PRIMARY_TABLE_COLUMN_PREFIX, FIELD_GROUP_PREFIX, PARENT_ENTITY_TYPE, SUB_FIELD_NAME, DEFAULT_PAGE_TYPE
      INTO VAR_PRIMARY_TABLE, VAR_PRIMARY_TABLE_IS_VIEW, VAR_PRIMARY_TABLE_COLUMN_PREFIX, VAR_PRIMARY_TABLE_FIELD_GROUP_PREFIX, VAR_PRIMARY_TABLE_PARENT_ENTITY_TYPE, VAR_PRIMARY_TABLE_SUB_FIELD_NAME, VAR_PRIMARY_TABLE_DEFAULT_PAGE_TYPE
      FROM THEGURU_VIEW WHERE VIEW_NAME = VAR_JOIN_TABLE;
      CALL GENERATE_FIELD_DEFINITIONS_PROCESS_TABLE(VIEWNAME, VAR_JOIN_TABLE, TRUE, CASE WHEN USEPARENTFIELDGROUPPREFIXES = TRUE THEN CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), VAR_JOIN_TABLE_COLUMN_PREFIX) ELSE VAR_JOIN_TABLE_COLUMN_PREFIX END, CASE WHEN USEPARENTFIELDGROUPPREFIXES = TRUE THEN CONCAT(IFNULL(FIELDGROUPPREFIX, ''), VAR_JOIN_TABLE_FIELD_GROUP_PREFIX) ELSE VAR_JOIN_TABLE_FIELD_GROUP_PREFIX END, VAR_JOIN_TABLE_FIELD_GROUP_OVERRIDE, VAR_JOIN_TABLE_PARENT_ENTITY_TYPE, VAR_JOIN_TABLE_SUB_FIELD_NAME, VAR_JOIN_TABLE_DEFAULT_PAGE_TYPE, VAR_JOIN_TABLE_USE_PARENT_FIELD_GROUP_PREFIXES, VAR_JOIN_ID);
      SET CSR_END = 0;
    ELSE
      CALL GENERATE_FIELD_DEFINITIONS_BUILD_FIELDS(VIEWNAME, VAR_JOIN_TABLE, CONCAT(CASE WHEN VIEWNAME <> TABLENAME THEN IFNULL(TABLECOLUMNPREFIX, '') ELSE '' END, IFNULL(VAR_JOIN_TABLE_COLUMN_PREFIX, '')), CONCAT(IFNULL(FIELDGROUPPREFIX, ''), IFNULL(VAR_JOIN_TABLE_FIELD_GROUP_PREFIX,'')), VAR_JOIN_TABLE_FIELD_GROUP_OVERRIDE, VAR_JOIN_TABLE_PARENT_ENTITY_TYPE, VAR_JOIN_TABLE_SUB_FIELD_NAME, VAR_JOIN_TABLE_DEFAULT_PAGE_TYPE, VAR_JOIN_ID);
      SET CSR_END = 0;
    END IF;
  END LOOP;
  CLOSE CSR_JOINS;
  SET CSR_END = 0;
END;$$