DELIMITER $$

DROP PROCEDURE IF EXISTS UPDATE_REPORTFIELD_FROM_THEGURU_FIELD_DEFINITIONS_COMPARISON$$

CREATE PROCEDURE UPDATE_REPORTFIELD_FROM_THEGURU_FIELD_DEFINITIONS_COMPARISON()
BEGIN
	DECLARE CSR_END INT DEFAULT 0;

  DECLARE VAR_REPORTSUBSOURCE_ID BIGINT;
  DECLARE VAR_FIELD_GROUP VARCHAR(255);
  DECLARE VAR_REPORTFIELDGROUP_ID BIGINT;

  DECLARE VAR_PRIMARY_KEYS VARCHAR(255);
  DECLARE VAR_ALIAS_NAME VARCHAR(255);
  DECLARE VAR_COLUMN_NAME VARCHAR(500);
  DECLARE VAR_DISPLAY_NAME VARCHAR(255);
  DECLARE VAR_FIELD_TYPE INT;
  DECLARE VAR_PICKLIST_NAME_ID VARCHAR(255);
  DECLARE VAR_PICKLIST_ITEM_NAME VARCHAR(255);
  DECLARE VAR_CUSTOM_FIELD_ENTITY_TYPE VARCHAR(255);
  DECLARE VAR_CUSTOM_FIELD_ENTITY_ID VARCHAR(255);
  DECLARE VAR_CUSTOM_FIELD_FIELD_NAME VARCHAR(255);
  DECLARE VAR_JOIN_ID BIGINT;
  DECLARE VAR_SOURCE_COLUMN_NAME VARCHAR(2000);
  DECLARE VAR_CONSTITUENT_JOIN_FIELD VARCHAR(255);
  DECLARE VAR_THEGURU_FIELD_DEFINITIONS_COMPARISON_ID INT;
  DECLARE VAR_LAST_INSERT_ID INT;    
  DECLARE VAR_DYNAMIC_PRIMARY_KEYS VARCHAR(255);
  DECLARE VAR_PICKLIST_CUSTOM_FIELD BIT;

  -- Add new field groups - Declare cursor
	DECLARE CSR_NEW_FIELD_GROUPS CURSOR FOR
    SELECT DISTINCT REPORTDATASUBSOURCE.REPORTSUBSOURCE_ID, THEGURU_FIELD_DEFINITIONS_COMPARISON.FIELD_GROUP FROM THEGURU_FIELD_DEFINITIONS_COMPARISON
    JOIN REPORTDATASUBSOURCE ON REPORTDATASUBSOURCE.VIEW_NAME = THEGURU_FIELD_DEFINITIONS_COMPARISON.VIEW_NAME
    WHERE NOT EXISTS
      (SELECT * FROM REPORTFIELDGROUP_REPORTDATASUBSOURCE
      JOIN REPORTFIELDGROUP ON REPORTFIELDGROUP_REPORTDATASUBSOURCE.REPORTFIELDGROUP_REPORTFIELDGROUP_ID = REPORTFIELDGROUP.REPORTFIELDGROUP_ID
      WHERE REPORTFIELDGROUP_REPORTDATASUBSOURCE.reportDataSubSource_REPORTSUBSOURCE_ID = REPORTDATASUBSOURCE.REPORTSUBSOURCE_ID
      AND REPORTFIELDGROUP.NAME = THEGURU_FIELD_DEFINITIONS_COMPARISON.FIELD_GROUP);


  -- Add new fields - Declare cursor
  DECLARE CSR_NEW_FIELDS CURSOR FOR
    SELECT
      THEGURU_FIELD_DEFINITIONS_COMPARISON_ID, PRIMARY_KEYS, ALIAS_NAME, COLUMN_NAME, THEGURU_FIELD_DEFINITIONS_COMPARISON.DISPLAY_NAME, FIELD_TYPE, REPORTFIELDGROUP.REPORTFIELDGROUP_ID,
      PICKLIST_NAME_ID, PICKLIST_ITEM_NAME, CUSTOM_FIELD_ENTITY_TYPE, CUSTOM_FIELD_ENTITY_ID, CUSTOM_FIELD_FIELD_NAME, JOIN_ID, SOURCE_COLUMN_NAME, 
	  CONSTITUENT_JOIN_FIELD, DYNAMIC_PRIMARY_KEYS, PICKLIST_CUSTOM_FIELD
    FROM THEGURU_FIELD_DEFINITIONS_COMPARISON
    JOIN REPORTDATASUBSOURCE ON REPORTDATASUBSOURCE.VIEW_NAME = THEGURU_FIELD_DEFINITIONS_COMPARISON.VIEW_NAME
    JOIN REPORTFIELDGROUP_REPORTDATASUBSOURCE ON REPORTFIELDGROUP_REPORTDATASUBSOURCE.reportDataSubSource_REPORTSUBSOURCE_ID = REPORTDATASUBSOURCE.REPORTSUBSOURCE_ID
    JOIN REPORTFIELDGROUP ON REPORTFIELDGROUP_REPORTDATASUBSOURCE.REPORTFIELDGROUP_REPORTFIELDGROUP_ID = REPORTFIELDGROUP.REPORTFIELDGROUP_ID
    WHERE IFNULL(REPORTFIELD_ID, 0) = 0
    AND REPORTFIELDGROUP.NAME = THEGURU_FIELD_DEFINITIONS_COMPARISON.FIELD_GROUP
    ORDER BY THEGURU_FIELD_DEFINITIONS_COMPARISON.FIELD_GROUP, THEGURU_FIELD_DEFINITIONS_COMPARISON.DISPLAY_NAME;

	DECLARE CONTINUE HANDLER FOR NOT FOUND SET CSR_END = 1;

  -- Add new field groups
	OPEN CSR_NEW_FIELD_GROUPS;
	NEW_FIELD_GROUPS_LOOP: LOOP
		FETCH CSR_NEW_FIELD_GROUPS INTO
			VAR_REPORTSUBSOURCE_ID, VAR_FIELD_GROUP;

		IF CSR_END THEN
			LEAVE NEW_FIELD_GROUPS_LOOP;
		END IF;

    CALL INSERTREPORTFIELDGROUP(VAR_FIELD_GROUP, VAR_REPORTSUBSOURCE_ID, VAR_REPORTFIELDGROUP_ID);
	END LOOP;
	CLOSE CSR_NEW_FIELD_GROUPS;
  
	SET CSR_END = 0;
  SET VAR_REPORTFIELDGROUP_ID = NULL;

  -- Add new fields
  OPEN CSR_NEW_FIELDS;
  NEW_FIELDS_LOOP: LOOP
    FETCH CSR_NEW_FIELDS INTO
      VAR_THEGURU_FIELD_DEFINITIONS_COMPARISON_ID, VAR_PRIMARY_KEYS, VAR_ALIAS_NAME, VAR_COLUMN_NAME, VAR_DISPLAY_NAME, VAR_FIELD_TYPE, VAR_REPORTFIELDGROUP_ID,
      VAR_PICKLIST_NAME_ID, VAR_PICKLIST_ITEM_NAME, VAR_CUSTOM_FIELD_ENTITY_TYPE, VAR_CUSTOM_FIELD_ENTITY_ID, VAR_CUSTOM_FIELD_FIELD_NAME, VAR_JOIN_ID,
	  VAR_SOURCE_COLUMN_NAME, VAR_CONSTITUENT_JOIN_FIELD, VAR_DYNAMIC_PRIMARY_KEYS, VAR_PICKLIST_CUSTOM_FIELD;

 	  IF CSR_END THEN
 			LEAVE NEW_FIELDS_LOOP;
	  END IF;

    CALL INSERTREPORTFIELDWITHALIAS(VAR_PRIMARY_KEYS, VAR_ALIAS_NAME, VAR_COLUMN_NAME, VAR_DISPLAY_NAME, b'0', VAR_FIELD_TYPE, VAR_REPORTFIELDGROUP_ID,
      VAR_PICKLIST_NAME_ID, VAR_SOURCE_COLUMN_NAME, VAR_PICKLIST_ITEM_NAME, VAR_CUSTOM_FIELD_ENTITY_TYPE, VAR_CUSTOM_FIELD_ENTITY_ID, VAR_CUSTOM_FIELD_FIELD_NAME,
	  VAR_CONSTITUENT_JOIN_FIELD, VAR_JOIN_ID, VAR_DYNAMIC_PRIMARY_KEYS, VAR_PICKLIST_CUSTOM_FIELD);

    SET VAR_LAST_INSERT_ID = LAST_INSERT_ID();

    UPDATE THEGURU_FIELD_DEFINITIONS_COMPARISON
    SET REPORTFIELD_ID = VAR_LAST_INSERT_ID
    WHERE THEGURU_FIELD_DEFINITIONS_COMPARISON_ID = VAR_THEGURU_FIELD_DEFINITIONS_COMPARISON_ID;
	END LOOP;
	CLOSE CSR_NEW_FIELDS;
	SET CSR_END = 0;


  -- Update the field groups for fields that have moved
  UPDATE REPORTFIELD_REPORTFIELDGROUP
  SET reportFieldGroup_REPORTFIELDGROUP_ID =
    (SELECT REPORTFIELDGROUP.REPORTFIELDGROUP_ID
    FROM REPORTDATASUBSOURCE
    JOIN REPORTFIELDGROUP_REPORTDATASUBSOURCE ON reportDataSubSource_REPORTSUBSOURCE_ID = REPORTDATASUBSOURCE.REPORTSUBSOURCE_ID
    JOIN REPORTFIELDGROUP ON REPORTFIELDGROUP_REPORTFIELDGROUP_ID = REPORTFIELDGROUP.REPORTFIELDGROUP_ID
    JOIN THEGURU_FIELD_DEFINITIONS_COMPARISON ON REPORTDATASUBSOURCE.VIEW_NAME = THEGURU_FIELD_DEFINITIONS_COMPARISON.VIEW_NAME
    AND REPORTFIELDGROUP.NAME = THEGURU_FIELD_DEFINITIONS_COMPARISON.FIELD_GROUP
    WHERE THEGURU_FIELD_DEFINITIONS_COMPARISON.REPORTFIELD_ID = REPORTFIELD_REPORTFIELDGROUP.fields_REPORTFIELD_ID),
  REPORTFIELDGROUP_ID =
    (SELECT REPORTFIELDGROUP.REPORTFIELDGROUP_ID
    FROM REPORTDATASUBSOURCE
    JOIN REPORTFIELDGROUP_REPORTDATASUBSOURCE ON reportDataSubSource_REPORTSUBSOURCE_ID = REPORTDATASUBSOURCE.REPORTSUBSOURCE_ID
    JOIN REPORTFIELDGROUP ON REPORTFIELDGROUP_REPORTFIELDGROUP_ID = REPORTFIELDGROUP.REPORTFIELDGROUP_ID
    JOIN THEGURU_FIELD_DEFINITIONS_COMPARISON ON REPORTDATASUBSOURCE.VIEW_NAME = THEGURU_FIELD_DEFINITIONS_COMPARISON.VIEW_NAME
    AND REPORTFIELDGROUP.NAME = THEGURU_FIELD_DEFINITIONS_COMPARISON.FIELD_GROUP
    WHERE THEGURU_FIELD_DEFINITIONS_COMPARISON.REPORTFIELD_ID = REPORTFIELD_REPORTFIELDGROUP.fields_REPORTFIELD_ID)
  WHERE fields_REPORTFIELD_ID IN
    (SELECT REPORTFIELD_ID FROM THEGURU_FIELD_DEFINITIONS_COMPARISON
    WHERE THEGURU_FIELD_DEFINITIONS_COMPARISON.FIELD_GROUP <>
    (SELECT Name FROM REPORTFIELDGROUP
    WHERE REPORTFIELDGROUP.REPORTFIELDGROUP_ID = REPORTFIELD_REPORTFIELDGROUP.REPORTFIELDGROUP_REPORTFIELDGROUP_ID));

  -- Update fields that currently exist based on REPORTFIELD_ID
  UPDATE REPORTFIELD, THEGURU_FIELD_DEFINITIONS_COMPARISON
  SET REPORTFIELD.COLUMN_NAME = THEGURU_FIELD_DEFINITIONS_COMPARISON.COLUMN_NAME,
  REPORTFIELD.DISPLAY_NAME = THEGURU_FIELD_DEFINITIONS_COMPARISON.DISPLAY_NAME,
  REPORTFIELD.FIELD_TYPE = THEGURU_FIELD_DEFINITIONS_COMPARISON.FIELD_TYPE,
  REPORTFIELD.ALIAS_NAME = THEGURU_FIELD_DEFINITIONS_COMPARISON.ALIAS_NAME,
  REPORTFIELD.PRIMARY_KEYS = THEGURU_FIELD_DEFINITIONS_COMPARISON.PRIMARY_KEYS,
  REPORTFIELD.PICKLIST_NAME_ID = THEGURU_FIELD_DEFINITIONS_COMPARISON.PICKLIST_NAME_ID,
  REPORTFIELD.PICKLIST_ITEM_NAME = THEGURU_FIELD_DEFINITIONS_COMPARISON.PICKLIST_ITEM_NAME,
  REPORTFIELD.CUSTOM_FIELD_ENTITY_TYPE = THEGURU_FIELD_DEFINITIONS_COMPARISON.CUSTOM_FIELD_ENTITY_TYPE,
  REPORTFIELD.CUSTOM_FIELD_ENTITY_ID = THEGURU_FIELD_DEFINITIONS_COMPARISON.CUSTOM_FIELD_ENTITY_ID,
  REPORTFIELD.CUSTOM_FIELD_FIELD_NAME = THEGURU_FIELD_DEFINITIONS_COMPARISON.CUSTOM_FIELD_FIELD_NAME,
  REPORTFIELD.CONSTITUENT_JOIN_FIELD = THEGURU_FIELD_DEFINITIONS_COMPARISON.CONSTITUENT_JOIN_FIELD,
  REPORTFIELD.JOIN_ID = THEGURU_FIELD_DEFINITIONS_COMPARISON.JOIN_ID,
  REPORTFIELD.SOURCE_COLUMN_NAME = THEGURU_FIELD_DEFINITIONS_COMPARISON.SOURCE_COLUMN_NAME,
  REPORTFIELD.DYNAMIC_PRIMARY_KEYS = THEGURU_FIELD_DEFINITIONS_COMPARISON.DYNAMIC_PRIMARY_KEYS,
  REPORTFIELD.PICKLIST_CUSTOM_FIELD = THEGURU_FIELD_DEFINITIONS_COMPARISON.PICKLIST_CUSTOM_FIELD
  WHERE THEGURU_FIELD_DEFINITIONS_COMPARISON.REPORTFIELD_ID = REPORTFIELD.REPORTFIELD_ID;

  -- Delete fields that do not exist, including from any saved reports
  DELETE FROM REPORTWIZARD_REPORTSELECTEDFIELD
  WHERE reportSelectedFields_REPORTSELECTEDFIELD_ID IN
  (SELECT REPORTSELECTEDFIELD_ID FROM REPORTSELECTEDFIELD
  JOIN THEGURU_FIELD_DEFINITIONS_COMPARISON ON FIELD_ID = REPORTFIELD_ID
  WHERE TO_BE_DELETED = 1);

  DELETE FROM REPORTSELECTEDFIELD
  WHERE FIELD_ID IN
  (SELECT REPORTFIELD_ID FROM THEGURU_FIELD_DEFINITIONS_COMPARISON
  WHERE TO_BE_DELETED = 1);

  DELETE FROM REPORTFIELD_REPORTFIELDGROUP
  WHERE fields_REPORTFIELD_ID IN
  (SELECT REPORTFIELD_ID FROM THEGURU_FIELD_DEFINITIONS_COMPARISON
  WHERE TO_BE_DELETED = 1);

  DELETE FROM REPORTFIELD
  WHERE REPORTFIELD_ID IN
  (SELECT REPORTFIELD_ID FROM THEGURU_FIELD_DEFINITIONS_COMPARISON
  WHERE TO_BE_DELETED = 1);

  DELETE FROM REPORTFIELDGROUP_REPORTDATASUBSOURCE
  WHERE REPORTFIELDGROUP_REPORTFIELDGROUP_ID IN
  (SELECT REPORTFIELDGROUP_ID FROM REPORTFIELDGROUP
  WHERE NOT EXISTS (SELECT * FROM REPORTFIELD_REPORTFIELDGROUP WHERE reportFieldGroup_REPORTFIELDGROUP_ID = REPORTFIELDGROUP.REPORTFIELDGROUP_ID));

  DELETE FROM REPORTFIELDGROUP
  WHERE NOT EXISTS (SELECT * FROM REPORTFIELD_REPORTFIELDGROUP WHERE reportFieldGroup_REPORTFIELDGROUP_ID = REPORTFIELDGROUP.REPORTFIELDGROUP_ID);
END;
$$
