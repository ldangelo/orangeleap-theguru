START TRANSACTION;

SET @REPORTDATASUBSOURCEGROUP_ID =
    (SELECT REPORTSUBSOURCEGROUP_ID FROM REPORTDATASUBSOURCEGROUP
    JOIN REPORTDATASOURCE ON REPORTSOURCE_ID = reportDataSource_REPORTSOURCE_ID
    WHERE REPORT_NAME = 'Orange Leap - V2'
    AND DISPLAY_NAME = 'Constituents');

INSERT INTO REPORTDATASUBSOURCE
	(DISPLAY_NAME, DATABASE_TYPE, VIEW_NAME, reportDataSubSourceGroup_REPORTSUBSOURCEGROUP_ID, REPORT_FORMAT_TYPE, JASPER_DATASOURCE_NAME, SEGMENTATION_RESULTS_DATASOURCE_NAME, DESCRIPTION, ALLOW_DYNAMIC_SQL_GENERATION)
VALUES
	('Constituents & Prospect Research Information', 0, 'VW_V2_CONSTITUENTS_PROSPECT_RESEARCH', @REPORTDATASUBSOURCEGROUP_ID, 0, '/datasources/ReportWizardJdbcDS', '/datasources/ReportWizardJdbcDSSegmentationResults', 'Constituents and their prospect research information', TRUE);


-- Do an initial insert of just the constituent view to create the field groups so that they are in the right order
INSERT THEGURU_VIEW
(VIEW_NAME, VIEW_DISPLAY_TEXT, PRIMARY_TABLE, PRIMARY_TABLE_IS_VIEW, PRIMARY_TABLE_ALIAS,
PRIMARY_TABLE_COLUMN_PREFIX, FIELD_GROUP_PREFIX, FIELD_GROUP_OVERRIDE, INCLUDE_ALL_FIELDS,
WHERE_CLAUSE, SORT_ORDER, PARENT_ENTITY_TYPE, SUB_FIELD_NAME, DEFAULT_PAGE_TYPE, SQL_OVERRIDE,
CUSTOM_TABLE_NAME)
SELECT 
'VW_V2_CONSTITUENTS_PROSPECT_RESEARCH', 'Constituents & Prospect Research', 'VW_V2_CONSTITUENTS', 1, 'CUSTOM_TABLE_PROSPECT_RESEARCH',
'VW_V2_CONSTITUENTS_', NULL, NULL, 1,
'', (SELECT MAX(SORT_ORDER) FROM THEGURU_VIEW) + 10, NULL, NULL, NULL, NULL,
NULL;

SET @THEGURU_VIEW_ID = LAST_INSERT_ID();

CALL GENERATE_VIEWS('VW_V2_CONSTITUENTS_PROSPECT_RESEARCH');
CALL GENERATE_FIELD_DEFINITIONS('VW_V2_CONSTITUENTS_PROSPECT_RESEARCH');

UPDATE THEGURU_VIEW
SET PRIMARY_TABLE = 'CUSTOM_TABLE',
PRIMARY_TABLE_IS_VIEW = 0,
PRIMARY_TABLE_COLUMN_PREFIX = 'CUSTOM_TABLE_PROSPECT_RESEARCH_',
WHERE_CLAUSE = 'CUSTOM_TABLE_NAME = ''prospect_research'''
WHERE VIEW_ID = @THEGURU_VIEW_ID;


INSERT THEGURU_VIEW_JOIN
(VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX,
JOIN_CRITERIA, FIELD_GROUP_PREFIX, FIELD_GROUP_OVERRIDE, INCLUDE_ALL_FIELDS, SORT_ORDER,
PARENT_ENTITY_TYPE, SUB_FIELD_NAME, DEFAULT_PAGE_TYPE, USE_PARENT_FIELD_GROUP_PREFIXES, REQUIRES_JOIN_ID,
CUSTOM_TABLE_NAME)
SELECT
@THEGURU_VIEW_ID, 'INNER', 'CUSTOM_TABLE_ROW', 0, 'CUSTOM_TABLE_ROW_PROSPECT_RESEARCH', 'CUSTOM_TABLE_ROW_PROSPECT_RESEARCH_',
'CUSTOM_TABLE_ROW_PROSPECT_RESEARCH.CUSTOM_TABLE_ID = CUSTOM_TABLE_PROSPECT_RESEARCH.CUSTOM_TABLE_ID', 'Prospect Research ', NULL, 1, 1,
NULL, NULL, NULL, 0, 0,
'prospect_research';

SET @THEGURU_VIEW_JOIN_ID = LAST_INSERT_ID();


INSERT THEGURU_VIEW_JOIN
(VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX,
JOIN_CRITERIA,
FIELD_GROUP_PREFIX, FIELD_GROUP_OVERRIDE, INCLUDE_ALL_FIELDS, SORT_ORDER,
PARENT_ENTITY_TYPE, SUB_FIELD_NAME, DEFAULT_PAGE_TYPE, USE_PARENT_FIELD_GROUP_PREFIXES, REQUIRES_JOIN_ID)
SELECT
@THEGURU_VIEW_ID, 'INNER', 'CUSTOM_FIELD', 0, 'CUSTOM_FIELD_CONSTITUENT_ID', 'CUSTOM_FIELD_CONSTITUENT_ID_',
'CUSTOM_FIELD_CONSTITUENT_ID.ENTITY_TYPE = ''customtablerow'' AND CUSTOM_FIELD_CONSTITUENT_ID.ENTITY_ID = CUSTOM_TABLE_ROW_PROSPECT_RESEARCH.CUSTOM_TABLE_ROW_ID AND CUSTOM_FIELD_CONSTITUENT_ID.FIELD_NAME = ''constituentid''',
NULL, NULL, 1, 2,
NULL, NULL, NULL, 0, @THEGURU_VIEW_JOIN_ID;

SET @THEGURU_VIEW_JOIN_ID = LAST_INSERT_ID();


INSERT THEGURU_VIEW_JOIN
(VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX,
JOIN_CRITERIA, FIELD_GROUP_PREFIX, FIELD_GROUP_OVERRIDE, INCLUDE_ALL_FIELDS, SORT_ORDER,
PARENT_ENTITY_TYPE, SUB_FIELD_NAME, DEFAULT_PAGE_TYPE, USE_PARENT_FIELD_GROUP_PREFIXES, REQUIRES_JOIN_ID)
SELECT
@THEGURU_VIEW_ID, 'INNER', 'VW_V2_CONSTITUENTS', 1, 'VW_V2_CONSTITUENTS', '',
'VW_V2_CONSTITUENTS.CONSTITUENT_CONSTITUENT_ID = CUSTOM_FIELD_CONSTITUENT_ID.FIELD_NUMERIC_VALUE', NULL, NULL, 1, 3,
NULL, NULL, NULL, 0, @THEGURU_VIEW_JOIN_ID;

COMMIT;


DELIMITER $$

DROP PROCEDURE IF EXISTS CALL_GENERATE_VIEWS;$$

CREATE PROCEDURE CALL_GENERATE_VIEWS() BEGIN
	IF (DATABASE() <> 'theguru')
	THEN
		CALL GENERATE_VIEWS('VW_V2_CONSTITUENTS_PROSPECT_RESEARCH');
		CALL GENERATE_FIELD_DEFINITIONS('VW_V2_CONSTITUENTS_PROSPECT_RESEARCH');
	END IF;
END;$$

DELIMITER ;

CALL CALL_GENERATE_VIEWS();

DROP PROCEDURE CALL_GENERATE_VIEWS;

COMMIT;