DELIMITER $$

DROP PROCEDURE IF EXISTS GENERATE_FIELD_DEFINITIONS_BUILD_FIELDS$$

CREATE PROCEDURE `GENERATE_FIELD_DEFINITIONS_BUILD_FIELDS`(VIEWNAME VARCHAR(255), TABLENAME VARCHAR(255), TABLECOLUMNPREFIX VARCHAR(255), FIELDGROUPPREFIX VARCHAR(255), FIELDGROUPOVERRIDE VARCHAR(255), PARENTENTITYTYPE VARCHAR(255), SUBFIELDNAME VARCHAR(255), DEFAULTPAGETYPE VARCHAR(255))
BEGIN
	DECLARE CSR_END INT DEFAULT 0;
	DECLARE VAR_FIELD_ORDER INT;
	DECLARE VAR_FIELD_DEFINITION_ID VARCHAR(255);
	DECLARE VAR_SECONDARY_FIELD_DEFINITION_ID VARCHAR(255);
	DECLARE VAR_SECTION_LABEL VARCHAR(255);
	DECLARE VAR_SECTION_ORDER INT;
	DECLARE VAR_FIELD_LABEL VARCHAR(255);
	DECLARE VAR_ENTITY_TYPE VARCHAR(255);
	DECLARE VAR_FIELD_NAME VARCHAR(255);
	DECLARE VAR_FIELD_TYPE VARCHAR(255);
	DECLARE VAR_REFERENCE_TYPE VARCHAR(255);
	
	DECLARE VAR_COLUMN_NAME VARCHAR(500);
	DECLARE VAR_COLUMN_TYPE VARCHAR(255);
    
	DECLARE VAR_FIELD_GROUP VARCHAR(255);
    DECLARE VAR_DISPLAY_NAME VARCHAR(255);
	DECLARE VAR_ADDITIONAL_DEF_COLUMN_NAME VARCHAR(4000);
    DECLARE VAR_ALIAS_NAME VARCHAR(255);
    DECLARE VAR_ADDITIONAL_DEF_FIELD_TYPE INT;
	DECLARE CSR_FIELD_DEFINITIONS CURSOR FOR
    SELECT DISTINCT
		FIELD_ORDER, FIELD_DEFINITION_ID, SECONDARY_FIELD_DEFINITION_ID, SECTION_LABEL, SECTION_ORDER,
		FIELD_LABEL, ENTITY_TYPE, FIELD_NAME, FIELD_TYPE, REFERENCE_TYPE
    FROM TEMP_OL_FIELD_DEFINITIONS
    WHERE ENTITY_TYPE = GET_ENTITY_TYPE_FOR_TABLE(TABLENAME)
    AND FIELD_NAME NOT IN (SELECT FIELD_NAME FROM THEGURU_TABLE_FIELD_EXCLUSIONS WHERE TABLE_NAME = TABLENAME)
    AND FIELD_NAME LIKE '%customFieldMap%'
    AND PAGE_TYPE NOT LIKE '%View'
	UNION
    SELECT DISTINCT
		FIELD_ORDER, FIELD_DEFINITION_ID, SECONDARY_FIELD_DEFINITION_ID, SECTION_LABEL, SECTION_ORDER,
		FIELD_LABEL, ENTITY_TYPE, SUBSTRING(SECONDARY_FIELD_DEFINITION_ID, LOCATE(CONCAT(SUBFIELDNAME, '.'), SECONDARY_FIELD_DEFINITION_ID) + LENGTH(CONCAT(SUBFIELDNAME, '.')), LENGTH(SECONDARY_FIELD_DEFINITION_ID)), FIELD_TYPE, REFERENCE_TYPE
    FROM TEMP_OL_FIELD_DEFINITIONS
	WHERE ENTITY_TYPE = PARENTENTITYTYPE
	AND FIELD_NAME = SUBFIELDNAME
    AND SECONDARY_FIELD_DEFINITION_ID LIKE '%customFieldMap%'
	AND SECONDARY_FIELD_DEFINITION_ID NOT IN (SELECT FIELD_NAME FROM THEGURU_TABLE_FIELD_EXCLUSIONS WHERE TABLE_NAME = TABLENAME)
    AND PAGE_TYPE NOT LIKE '%View';
	DECLARE CSR_FIELDS CURSOR FOR
		SELECT
			COLUMN_NAME, DATA_TYPE
		FROM INFORMATION_SCHEMA.COLUMNS
        WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
        AND TABLE_NAME = TABLENAME
        AND COLUMN_NAME NOT IN (SELECT FIELD_NAME FROM THEGURU_TABLE_FIELD_EXCLUSIONS WHERE TABLE_NAME = TABLENAME);
	DECLARE CSR_ADDITIONAL_FIELD_DEFINITIONS CURSOR FOR
    SELECT DISTINCT
        FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE
    FROM THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    WHERE TABLE_NAME = TABLENAME;
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET CSR_END = 1;
	
	OPEN CSR_FIELDS;
	PRIMARY_FIELDS_LOOP: LOOP
		FETCH CSR_FIELDS INTO
			VAR_COLUMN_NAME, VAR_COLUMN_TYPE;
		IF CSR_END THEN
			LEAVE PRIMARY_FIELDS_LOOP;
		END IF;
		SET VAR_FIELD_ORDER = 0;
		SET VAR_FIELD_DEFINITION_ID = '';
		SET VAR_SECONDARY_FIELD_DEFINITION_ID = '';
		SET VAR_SECTION_LABEL = '';
		SET VAR_SECTION_ORDER = 0;
		SET VAR_FIELD_LABEL = '';
		SET VAR_ENTITY_TYPE = '';
		SET VAR_FIELD_NAME = '';
		SET VAR_FIELD_TYPE = '';
		SET VAR_REFERENCE_TYPE = '';
		IF (LENGTH(IFNULL(PARENTENTITYTYPE, '')) = 0) THEN
			SELECT DISTINCT
				FIELD_ORDER, FIELD_DEFINITION_ID, SECONDARY_FIELD_DEFINITION_ID, SECTION_LABEL, SECTION_ORDER,
				FIELD_LABEL, ENTITY_TYPE, FIELD_NAME, FIELD_TYPE, REFERENCE_TYPE
			INTO
				VAR_FIELD_ORDER, VAR_FIELD_DEFINITION_ID, VAR_SECONDARY_FIELD_DEFINITION_ID, VAR_SECTION_LABEL, VAR_SECTION_ORDER,
				VAR_FIELD_LABEL, VAR_ENTITY_TYPE, VAR_FIELD_NAME, VAR_FIELD_TYPE, VAR_REFERENCE_TYPE
			FROM TEMP_OL_FIELD_DEFINITIONS
			WHERE ENTITY_TYPE = GET_ENTITY_TYPE_FOR_TABLE(TABLENAME)
			AND FIELD_NAME = REPLACE(VAR_COLUMN_NAME, '_', '')
			AND FIELD_NAME NOT IN (SELECT FIELD_NAME FROM THEGURU_TABLE_FIELD_EXCLUSIONS WHERE TABLE_NAME = TABLENAME)
			AND IFNULL(SECTION_LABEL, '') <> ''
			AND SECTION_LABEL NOT LIKE '%EDIT%'
			ORDER BY
				CASE WHEN LENGTH(IFNULL(DEFAULTPAGETYPE, '')) > 0 AND PAGE_TYPE = DEFAULTPAGETYPE THEN 1 ELSE 2 END ASC,
				(SELECT COUNT(*) FROM TEMP_OL_FIELD_DEFINITIONS B WHERE B.SECTION_LABEL = TEMP_OL_FIELD_DEFINITIONS.SECTION_LABEL) DESC
			LIMIT 1;
		ELSE
			SELECT DISTINCT
				FIELD_ORDER, FIELD_DEFINITION_ID, SECONDARY_FIELD_DEFINITION_ID, SECTION_LABEL, SECTION_ORDER,
				FIELD_LABEL, ENTITY_TYPE, SUBSTRING(SECONDARY_FIELD_DEFINITION_ID, LOCATE(CONCAT(SUBFIELDNAME, '.'), SECONDARY_FIELD_DEFINITION_ID) + LENGTH(CONCAT(SUBFIELDNAME, '.')), LENGTH(SECONDARY_FIELD_DEFINITION_ID)), FIELD_TYPE, REFERENCE_TYPE
			INTO
				VAR_FIELD_ORDER, VAR_FIELD_DEFINITION_ID, VAR_SECONDARY_FIELD_DEFINITION_ID, VAR_SECTION_LABEL, VAR_SECTION_ORDER,
				VAR_FIELD_LABEL, VAR_ENTITY_TYPE, VAR_FIELD_NAME, VAR_FIELD_TYPE, VAR_REFERENCE_TYPE
			FROM TEMP_OL_FIELD_DEFINITIONS
			WHERE ENTITY_TYPE = PARENTENTITYTYPE
			AND FIELD_NAME = SUBFIELDNAME
			AND REPLACE(SUBSTRING(SECONDARY_FIELD_DEFINITION_ID, LOCATE(CONCAT(SUBFIELDNAME, '.'), SECONDARY_FIELD_DEFINITION_ID) + LENGTH(CONCAT(SUBFIELDNAME, '.')), LENGTH(SECONDARY_FIELD_DEFINITION_ID)), 'ReadOnly', '') = REPLACE(VAR_COLUMN_NAME, '_', '')
			AND REPLACE(SECONDARY_FIELD_DEFINITION_ID, CONCAT(SUBFIELDNAME, '.'), '') NOT IN (SELECT FIELD_NAME FROM THEGURU_TABLE_FIELD_EXCLUSIONS WHERE TABLE_NAME = TABLENAME)
			AND IFNULL(SECTION_LABEL, '') <> ''
			AND SECTION_LABEL NOT LIKE '%EDIT%'
			ORDER BY
				CASE WHEN LENGTH(IFNULL(DEFAULTPAGETYPE, '')) > 0 AND PAGE_TYPE = DEFAULTPAGETYPE THEN 1 ELSE 2 END ASC,
				(SELECT COUNT(*) FROM TEMP_OL_FIELD_DEFINITIONS B WHERE B.SECTION_LABEL = TEMP_OL_FIELD_DEFINITIONS.SECTION_LABEL) DESC
			LIMIT 1;
		END IF;
    
		SET VAR_FIELD_DEFINITION_ID = REPLACE(VAR_FIELD_DEFINITION_ID, 'ReadOnly', '');
    
		IF CSR_END = 0 THEN
            IF VAR_FIELD_TYPE = 'CODE' OR VAR_FIELD_TYPE = 'CODE_OTHER_DISPLAY' OR VAR_FIELD_TYPE = 'PICKLIST' OR VAR_FIELD_TYPE = 'PICKLIST_DISPLAY' THEN
                
                WHILE LOCATE('.', VAR_FIELD_DEFINITION_ID) DO
                    SET VAR_FIELD_DEFINITION_ID = SUBSTR(VAR_FIELD_DEFINITION_ID, LOCATE('.', VAR_FIELD_DEFINITION_ID) + 1);
                END WHILE;
                
                INSERT THEGURU_FIELD_DEFINITIONS
                    (VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY)
                SELECT
                    VIEWNAME,
                    CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
                        CASE
                            WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                                  WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(VAR_COLUMN_NAME, ''), '_SHORT_DISPLAY_NAME'), 1, 64)) IS NOT NULL THEN
                                  (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                                  WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(VAR_COLUMN_NAME, ''), '_SHORT_DISPLAY_NAME'), 1, 64))
                            WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
                            ELSE IFNULL(VAR_SECTION_LABEL, '')
                        END) AS FIELD_GROUP,
                    CONCAT('GETPICKLISTDISPLAYVALUE(''', VAR_FIELD_DEFINITION_ID, ''', ',
                        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(VAR_COLUMN_NAME, '')), ')') AS COLUMN_NAME,
                    SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(VAR_COLUMN_NAME, ''), '_SDN'), 1, 64) AS ALIAS_NAME,
                    CONCAT(VAR_FIELD_LABEL, ' Short Display Name') AS DISPLAY_TEXT,
                    1 AS FIELD_TYPE,
                    CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
                    (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
                        WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
                        AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY;
                
                INSERT THEGURU_FIELD_DEFINITIONS
                    (VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY)
                SELECT
                    VIEWNAME,
                    CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
                        CASE
                            WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                                  WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(VAR_COLUMN_NAME, ''), '_LONG_DISPLAY_NAME'), 1, 64)) IS NOT NULL THEN
                                  (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                                  WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(VAR_COLUMN_NAME, ''), '_LONG_DISPLAY_NAME'), 1, 64))
                            WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
                            ELSE IFNULL(VAR_SECTION_LABEL, '')
                        END) AS FIELD_GROUP,
                    CONCAT('GETPICKLISTLONGDESCRIPTION(''', VAR_FIELD_DEFINITION_ID, ''', ',
                        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(VAR_COLUMN_NAME, '')), ')') AS COLUMN_NAME,
                    SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(VAR_COLUMN_NAME, ''), '_LDN'), 1, 64) AS ALIAS_NAME,
                    CONCAT(VAR_FIELD_LABEL, ' Long Display Name') AS DISPLAY_TEXT,
                    1 AS FIELD_TYPE,
                    CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
                    (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
                        WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
                        AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY;
                
                INSERT THEGURU_FIELD_DEFINITIONS
                    (VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY)
                SELECT
                    VIEWNAME,
                    CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
                        CASE
                            WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                                  WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(VAR_COLUMN_NAME, ''), '_DESCRIPTION'), 1, 64)) IS NOT NULL THEN
                                  (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                                  WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(VAR_COLUMN_NAME, ''), '_DESCRIPTION'), 1, 64))
                            WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
                            ELSE IFNULL(VAR_SECTION_LABEL, '')
                        END) AS FIELD_GROUP,
                    CONCAT('GETPICKLISTDETAIL(''', VAR_FIELD_DEFINITION_ID, ''', ',
                        CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(VAR_COLUMN_NAME, '')), ')') AS COLUMN_NAME,
                    SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(VAR_COLUMN_NAME, ''), '_DESC'), 1, 64) AS ALIAS_NAME,
                    CONCAT(VAR_FIELD_LABEL, ' Description') AS DISPLAY_TEXT,
                    1 AS FIELD_TYPE,
                    CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
                    (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
                        WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
                        AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY;
            ELSE
                INSERT THEGURU_FIELD_DEFINITIONS
                    (VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY)
                SELECT
                    VIEWNAME,
                    CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
                        CASE
                            WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                                  WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(VAR_COLUMN_NAME, '')), 1, 64)) IS NOT NULL THEN
                                  (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                                  WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(VAR_COLUMN_NAME, '')), 1, 64))
                            WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
                            ELSE IFNULL(VAR_SECTION_LABEL, '')
                        END) AS FIELD_GROUP,
                    CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(VAR_COLUMN_NAME, '')) AS COLUMN_NAME,
                    SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(VAR_COLUMN_NAME, '')), 1, 64) AS ALIAS_NAME,
                    VAR_FIELD_LABEL,
                    CASE
                    	WHEN VAR_FIELD_TYPE = 'CHECKBOX' THEN 6
                        WHEN VAR_COLUMN_TYPE = 'tinyint' THEN 2
                        WHEN VAR_COLUMN_TYPE = 'int' THEN 2
                        WHEN VAR_COLUMN_TYPE = 'smallint' THEN 2
                        WHEN VAR_COLUMN_TYPE = 'bigint' THEN 2
                        WHEN VAR_COLUMN_TYPE = 'datetime' THEN 4
                        WHEN VAR_COLUMN_TYPE = 'decimal' THEN 5
                        WHEN VAR_COLUMN_TYPE = 'bit' THEN 6
                        ELSE 1
                    END,
                    CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
                    (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
                        WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
                        AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI'));
			END IF;
        ELSE
            SET CSR_END = 0;
        END IF;
	END LOOP;
	SET CSR_END = 0;
	CLOSE CSR_FIELDS;
	SET VAR_FIELD_ORDER = 0;
	SET VAR_FIELD_DEFINITION_ID = '';
	SET VAR_SECONDARY_FIELD_DEFINITION_ID = '';
	SET VAR_SECTION_LABEL = '';
	SET VAR_SECTION_ORDER = 0;
	SET VAR_FIELD_LABEL = '';
	SET VAR_ENTITY_TYPE = '';
	SET VAR_FIELD_NAME = '';
	SET VAR_FIELD_TYPE = '';
	SET VAR_REFERENCE_TYPE = '';
	OPEN CSR_FIELD_DEFINITIONS;
    
	FIELD_DEFINITIONS_LOOP: LOOP
		FETCH CSR_FIELD_DEFINITIONS INTO
			VAR_FIELD_ORDER, VAR_FIELD_DEFINITION_ID, VAR_SECONDARY_FIELD_DEFINITION_ID, VAR_SECTION_LABEL, VAR_SECTION_ORDER,
			VAR_FIELD_LABEL, VAR_ENTITY_TYPE, VAR_FIELD_NAME, VAR_FIELD_TYPE, VAR_REFERENCE_TYPE;
		IF CSR_END THEN
			LEAVE FIELD_DEFINITIONS_LOOP;
		END IF;
		SET VAR_FIELD_NAME = REPLACE(VAR_FIELD_NAME, 'ReadOnly]', ']');
		
		IF VAR_FIELD_TYPE = 'TEXT' OR VAR_FIELD_TYPE = 'LONG_TEXT' OR VAR_FIELD_TYPE = 'READ_ONLY_TEXT' THEN
			INSERT THEGURU_FIELD_DEFINITIONS
				(VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY)
			SELECT
				VIEWNAME,
				CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
                    CASE
                        WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64)) IS NOT NULL THEN
                              (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64))
                        WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
                        ELSE IFNULL(VAR_SECTION_LABEL, '') END) AS FIELD_GROUP,
				CONCAT('GETCUSTOMFIELD(',
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
					', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), ''')') AS COLUMN_NAME,
				SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64) AS ALIAS_NAME,
				VAR_FIELD_LABEL AS DISPLAY_TEXT,
				1 AS FIELD_TYPE,
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY;
		ELSEIF VAR_FIELD_TYPE = 'CHECKBOX' THEN
			INSERT THEGURU_FIELD_DEFINITIONS
				(VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY)
			SELECT
				VIEWNAME,
				CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
                    CASE
                        WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64)) IS NOT NULL THEN
                              (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64))
                        WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
                        ELSE IFNULL(VAR_SECTION_LABEL, '') END) AS FIELD_GROUP,
				CONCAT('GETCUSTOMFIELD(',
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
					', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), ''')') AS COLUMN_NAME,
				SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64) AS ALIAS_NAME,
				VAR_FIELD_LABEL AS DISPLAY_TEXT,
				6 AS FIELD_TYPE,
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY;
		ELSEIF VAR_FIELD_TYPE = 'DATE' THEN
			INSERT THEGURU_FIELD_DEFINITIONS
				(VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY)
			SELECT
				VIEWNAME,
				CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
                    CASE
                        WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64)) IS NOT NULL THEN
                              (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64))
                        WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
                        ELSE IFNULL(VAR_SECTION_LABEL, '') END) AS FIELD_GROUP,
				CONCAT('GETCUSTOMDATEFIELD(',
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
					', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), ''')') AS COLUMN_NAME,
				SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64) AS ALIAS_NAME,
				VAR_FIELD_LABEL AS DISPLAY_TEXT,
				4 AS FIELD_TYPE,
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY;
		ELSEIF VAR_FIELD_TYPE = 'NUMBER' THEN
			INSERT THEGURU_FIELD_DEFINITIONS
				(VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY)
			SELECT
				VIEWNAME,
				CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
                    CASE
                        WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64)) IS NOT NULL THEN
                              (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64))
                        WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
                        ELSE IFNULL(VAR_SECTION_LABEL, '') END) AS FIELD_GROUP,
				CONCAT('GETCUSTOMFIELD(',
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
					', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), ''')') AS COLUMN_NAME,
				SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64) AS ALIAS_NAME,
				VAR_FIELD_LABEL AS DISPLAY_TEXT,
				2 AS FIELD_TYPE,
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY;
		ELSEIF VAR_FIELD_TYPE = 'PERCENTAGE' THEN
			INSERT THEGURU_FIELD_DEFINITIONS
				(VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY)
			SELECT
				VIEWNAME,
				CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
                    CASE
                        WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64)) IS NOT NULL THEN
                              (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64))
                        WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
                        ELSE IFNULL(VAR_SECTION_LABEL, '') END) AS FIELD_GROUP,
				CONCAT('GETCUSTOMFIELD(',
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
					', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), ''')') AS COLUMN_NAME,
				SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64) AS ALIAS_NAME,
				VAR_FIELD_LABEL AS DISPLAY_TEXT,
				5 AS FIELD_TYPE,
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY;
        ELSEIF VAR_FIELD_TYPE = 'MULTI_CODE_ADDITIONAL' THEN
            
			INSERT THEGURU_FIELD_DEFINITIONS
				(VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY)
			SELECT
				VIEWNAME,
				CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
                    CASE
                        WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64)) IS NOT NULL THEN
                              (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64))
                        WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
                        ELSE IFNULL(VAR_SECTION_LABEL, '') END) AS FIELD_GROUP,
				CONCAT('GETCUSTOMFIELDCONCATENATED(',
                    CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
                    (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
                        WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
                        AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
                        ', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), ''')') AS COLUMN_NAME,
				SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64) AS ALIAS_NAME,
				VAR_FIELD_LABEL AS DISPLAY_TEXT,
				1 AS FIELD_TYPE,
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY;
            
			INSERT THEGURU_FIELD_DEFINITIONS
				(VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY)
			SELECT
				VIEWNAME,
				CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
                    CASE
                        WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), 'ADDITIONAL'), 1, 64)) IS NOT NULL THEN
                              (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), 'ADDITIONAL'), 1, 64))
                        WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
                        ELSE IFNULL(VAR_SECTION_LABEL, '') END) AS FIELD_GROUP,
				REPLACE(CONCAT('GETCUSTOMFIELDCONCATENATED(',
                    CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
                    (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
                        WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
                        AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
                        ', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), ''')'), '.', '.additional_') AS COLUMN_NAME,
				SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), 'ADD'), 1, 64) AS ALIAS_NAME,
				CONCAT(VAR_FIELD_LABEL, ' - Additional') AS DISPLAY_TEXT,
				1 AS FIELD_TYPE,
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY;
		ELSEIF VAR_FIELD_TYPE = 'PICKLIST' THEN
            
			INSERT THEGURU_FIELD_DEFINITIONS
				(VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY)
			SELECT
				VIEWNAME,
				CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
                    CASE
                        WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_SHORT_DISPLAY_NAME'), 1, 64)) IS NOT NULL THEN
                              (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_SHORT_DISPLAY_NAME'), 1, 64))
                        WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
                        ELSE IFNULL(VAR_SECTION_LABEL, '') END) AS FIELD_GROUP,
				CONCAT('GETPICKLISTDISPLAYVALUE(''', VAR_FIELD_NAME, ''', GETCUSTOMFIELD(',
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
					', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '''))') AS COLUMN_NAME,
				SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_SDN'), 1, 64) AS ALIAS_NAME,
				CONCAT(VAR_FIELD_LABEL, ' Short Display Name') AS DISPLAY_TEXT,
				1 AS FIELD_TYPE,
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY;
            
			INSERT THEGURU_FIELD_DEFINITIONS
				(VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY)
			SELECT
				VIEWNAME,
				CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
                    CASE
                        WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_LONG_DISPLAY_NAME'), 1, 64)) IS NOT NULL THEN
                              (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_LONG_DISPLAY_NAME'), 1, 64))
                        WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
                        ELSE IFNULL(VAR_SECTION_LABEL, '')
                    END) AS FIELD_GROUP,
				CONCAT('GETPICKLISTLONGDESCRIPTION(''', VAR_FIELD_NAME, ''', GETCUSTOMFIELD(',
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
					', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '''))') AS COLUMN_NAME,
				SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_LDN'), 1, 64) AS ALIAS_NAME,
				CONCAT(VAR_FIELD_LABEL, ' Long Display Name') AS DISPLAY_TEXT,
				1 AS FIELD_TYPE,
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY;
            
			INSERT THEGURU_FIELD_DEFINITIONS
				(VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY)
			SELECT
				VIEWNAME,
				CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
                    CASE
                        WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_DESCRIPTION'), 1, 64)) IS NOT NULL THEN
                              (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_DESCRIPTION'), 1, 64))
                        WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
                        ELSE IFNULL(VAR_SECTION_LABEL, '')
                    END) AS FIELD_GROUP,
				CONCAT('GETPICKLISTDETAIL(''', VAR_FIELD_NAME, ''', GETCUSTOMFIELD(',
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
					', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '''))') AS COLUMN_NAME,
				SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_DESC'), 1, 64) AS ALIAS_NAME,
				CONCAT(VAR_FIELD_LABEL, ' Description') AS DISPLAY_TEXT,
				1 AS FIELD_TYPE,
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY;
		ELSEIF VAR_FIELD_TYPE = 'MULTI_PICKLIST' THEN
			
			INSERT THEGURU_FIELD_DEFINITIONS
				(VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY)
			SELECT
				VIEWNAME,
				CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
                    CASE
                        WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_SHORT_DISPLAY_NAME'), 1, 64)) IS NOT NULL THEN
                              (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_SHORT_DISPLAY_NAME'), 1, 64))
                        WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
                        ELSE IFNULL(VAR_SECTION_LABEL, '')
                    END) AS FIELD_GROUP,
				CONCAT('GETCUSTOMFIELDDISPLAYVALUECONCATENATED(',
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
					', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), ''', ''', VAR_FIELD_NAME, ''')') AS COLUMN_NAME,
				SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_SDN'), 1, 64) AS ALIAS_NAME,
				CONCAT(VAR_FIELD_LABEL, ' Short Display Names') AS DISPLAY_TEXT,
				1 AS FIELD_TYPE,
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY;
			
			INSERT THEGURU_FIELD_DEFINITIONS
				(VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY)
			SELECT
				VIEWNAME,
				CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
                    CASE
                        WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_LONG_DISPLAY_NAME'), 1, 64)) IS NOT NULL THEN
                              (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_LONG_DISPLAY_NAME'), 1, 64))
                        WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
                        ELSE IFNULL(VAR_SECTION_LABEL, '')
                    END) AS FIELD_GROUP,
				CONCAT('GETCUSTOMFIELDLONGDESCRIPTIONCONCATENATED(',
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
					', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), ''', ''', VAR_FIELD_NAME, ''')') AS COLUMN_NAME,
				SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_LDN'), 1, 64) AS ALIAS_NAME,
				CONCAT(VAR_FIELD_LABEL, ' Long Display Names') AS DISPLAY_TEXT,
				1 AS FIELD_TYPE,
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY;
			
			INSERT THEGURU_FIELD_DEFINITIONS
				(VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY)
			SELECT
				VIEWNAME,
				CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
                    CASE
                        WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_DESCRIPTION'), 1, 64)) IS NOT NULL THEN
                              (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), 'DESCRIPTION'), 1, 64))
                        WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
                        ELSE IFNULL(VAR_SECTION_LABEL, '')
                    END) AS FIELD_GROUP,
				CONCAT('GETCUSTOMFIELDPICKLISTDETAILCONCATENATED(',
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
					', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), ''', ''', VAR_FIELD_NAME, ''')') AS COLUMN_NAME,
				SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_DESC'), 1, 64) AS ALIAS_NAME,
				CONCAT(VAR_FIELD_LABEL, ' Description Names') AS DISPLAY_TEXT,
				1 AS FIELD_TYPE,
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY;
        ELSEIF VAR_FIELD_TYPE = 'MULTI_PICKLIST_ADDITIONAL' THEN
			
			INSERT THEGURU_FIELD_DEFINITIONS
				(VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY)
			SELECT
				VIEWNAME,
				CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
                    CASE
                        WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_SHORT_DISPLAY_NAME'), 1, 64)) IS NOT NULL THEN
                              (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_SHORT_DISPLAY_NAME'), 1, 64))
                        WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
                        ELSE IFNULL(VAR_SECTION_LABEL, '')
                    END) AS FIELD_GROUP,
				CONCAT('GETCUSTOMFIELDDISPLAYVALUECONCATENATED(',
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
					', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), ''', ''', VAR_FIELD_NAME, ''')') AS COLUMN_NAME,
				SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_SDN'), 1, 64) AS ALIAS_NAME,
				CONCAT(VAR_FIELD_LABEL, ' Short Display Names') AS DISPLAY_TEXT,
				1 AS FIELD_TYPE,
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY;
			
			INSERT THEGURU_FIELD_DEFINITIONS
				(VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY)
			SELECT
				VIEWNAME,
				CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
                    CASE
                        WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_LONG_DISPLAY_NAME'), 1, 64)) IS NOT NULL THEN
                              (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_LONG_DISPLAY_NAME'), 1, 64))
                        WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
                        ELSE IFNULL(VAR_SECTION_LABEL, '')
                    END) AS FIELD_GROUP,
				CONCAT('GETCUSTOMFIELDLONGDESCRIPTIONCONCATENATED(',
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
					', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), ''', ''', VAR_FIELD_NAME, ''')') AS COLUMN_NAME,
				SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_LDN'), 1, 64) AS ALIAS_NAME,
				CONCAT(VAR_FIELD_LABEL, ' Long Display Names') AS DISPLAY_TEXT,
				1 AS FIELD_TYPE,
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY;
			
			INSERT THEGURU_FIELD_DEFINITIONS
				(VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY)
			SELECT
				VIEWNAME,
				CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
                    CASE
                        WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_DESCRIPTION'), 1, 64)) IS NOT NULL THEN
                              (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_DESCRIPTION'), 1, 64))
                        WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
                        ELSE IFNULL(VAR_SECTION_LABEL, '')
                    END) AS FIELD_GROUP,
				CONCAT('GETCUSTOMFIELDPICKLISTDETAILCONCATENATED(',
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
					', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), ''', ''', VAR_FIELD_NAME, ''')') AS COLUMN_NAME,
				SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_DESC'), 1, 64) AS ALIAS_NAME,
				CONCAT(VAR_FIELD_LABEL, ' Description Names') AS DISPLAY_TEXT,
				1 AS FIELD_TYPE,
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY;
            
			INSERT THEGURU_FIELD_DEFINITIONS
				(VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY)
			SELECT
				VIEWNAME,
				CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
                    CASE
                        WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), 'ADDITIONAL'), 1, 64)) IS NOT NULL THEN
                              (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), 'ADDITIONAL'), 1, 64))
                        WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
                        ELSE IFNULL(VAR_SECTION_LABEL, '')
                    END) AS FIELD_GROUP,
				CONCAT('GETCUSTOMFIELDCONCATENATED(',
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
					', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(
					REPLACE(VAR_FIELD_NAME, CASE WHEN VAR_FIELD_NAME LIKE '%.%' THEN '.' ELSE '[' END, CASE WHEN VAR_FIELD_NAME LIKE '%.%' THEN '.additional_' ELSE '[additional_' END),
					'customFieldMap[', ''), ']', ''), ''')') AS COLUMN_NAME,
				SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), 'ADD'), 1, 64) AS ALIAS_NAME,
				CONCAT(VAR_FIELD_LABEL, ' - Additional') AS DISPLAY_TEXT,
				1 AS FIELD_TYPE,
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY;
        ELSEIF VAR_FIELD_TYPE = 'MULTI_QUERY_LOOKUP' AND VAR_REFERENCE_TYPE = 'constituent' THEN
            
            INSERT THEGURU_FIELD_DEFINITIONS
				(VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY)
			SELECT
				VIEWNAME,
				CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
                    CASE
                        WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_ACCOUNTNUMBERS'), 1, 64)) IS NOT NULL THEN
                              (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_ACCOUNTNUMBERS'), 1, 64))
                        WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
                        ELSE IFNULL(VAR_SECTION_LABEL, '')
                    END) AS FIELD_GROUP,
				CONCAT('GETCUSTOMRELATIONSHIPACCOUNTNUMBERSCONCATENATED(',
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
					', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), ''')') AS COLUMN_NAME,
				SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_ACCTNBRS'), 1, 64) AS ALIAS_NAME,
				CONCAT(VAR_FIELD_LABEL, ' - ', 'Account Numbers') AS DISPLAY_TEXT,
				1 AS FIELD_TYPE,
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY;
            
			INSERT THEGURU_FIELD_DEFINITIONS
				(VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY)
			SELECT
				VIEWNAME,
				CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
                    CASE
                        WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_ACCOUNTNAMES'), 1, 64)) IS NOT NULL THEN
                              (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_ACCOUNTNAMES'), 1, 64))
                        WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
                        ELSE IFNULL(VAR_SECTION_LABEL, '')
                    END) AS FIELD_GROUP,
				CONCAT('GETCUSTOMRELATIONSHIPNAMESCONCATENATED(',
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
					', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), ''')') AS COLUMN_NAME,
				SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_ACCTNAMES'), 1, 64) AS ALIAS_NAME,
				CONCAT(VAR_FIELD_LABEL, ' - ', 'Account Names') AS DISPLAY_TEXT,
				1 AS FIELD_TYPE,
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY;
        ELSEIF VAR_FIELD_TYPE = 'QUERY_LOOKUP' AND VAR_REFERENCE_TYPE = 'constituent' THEN
            
            INSERT THEGURU_FIELD_DEFINITIONS
				(VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY)
			SELECT
				VIEWNAME,
				CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
                    CASE
                        WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_ACCOUNTNUMBER'), 1, 64)) IS NOT NULL THEN
                              (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_ACCOUNTNUMBER'), 1, 64))
                        WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
                        ELSE IFNULL(VAR_SECTION_LABEL, '')
                    END) AS FIELD_GROUP,
				CONCAT('GETCONSTITUENTACCOUNTNUMBER(GETCUSTOMFIELD(',
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
					', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '''))') AS COLUMN_NAME,
				SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_ACCTNBR'), 1, 64) AS ALIAS_NAME,
				CONCAT(VAR_FIELD_LABEL, ' - ', 'Account Number') AS DISPLAY_TEXT,
				2 AS FIELD_TYPE,
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY;
            
			INSERT THEGURU_FIELD_DEFINITIONS
				(VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY)
			SELECT
				VIEWNAME,
				CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
                    CASE
                        WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_ACCOUNTNAME'), 1, 64)) IS NOT NULL THEN
                              (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_ACCOUNTNAME'), 1, 64))
                        WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
                        ELSE IFNULL(VAR_SECTION_LABEL, '') END) AS FIELD_GROUP,
				CONCAT('GETCONSTITUENTDISPLAYNAME(GETCUSTOMFIELD(',
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
					', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '''))') AS COLUMN_NAME,
				SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_ACCTNAME'), 1, 64) AS ALIAS_NAME,
				CONCAT(VAR_FIELD_LABEL, ' - ', 'Account Name') AS DISPLAY_TEXT,
				1 AS FIELD_TYPE,
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY;
        ELSEIF VAR_FIELD_TYPE = 'QUERY_LOOKUP_DISPLAY' AND VAR_REFERENCE_TYPE = 'constituent' THEN
            
            INSERT THEGURU_FIELD_DEFINITIONS
				(VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY)
			SELECT
				VIEWNAME,
				CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
                    CASE
                        WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_ACCOUNTNUMBER'), 1, 64)) IS NOT NULL THEN
                              (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_ACCOUNTNUMBER'), 1, 64))
                        WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
                        ELSE IFNULL(VAR_SECTION_LABEL, '') END) AS FIELD_GROUP,
				CONCAT('GETCONSTITUENTACCOUNTNUMBER(GETCUSTOMFIELD(',
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
					', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '''))') AS COLUMN_NAME,
				SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_ACCTNBR'), 1, 64) AS ALIAS_NAME,
				CONCAT(VAR_FIELD_LABEL, ' - ', 'Account Number') AS DISPLAY_TEXT,
				2 AS FIELD_TYPE,
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY;
            
			INSERT THEGURU_FIELD_DEFINITIONS
				(VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY)
			SELECT
				VIEWNAME,
				CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
                    CASE
                        WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_ACCOUNTNAME'), 1, 64)) IS NOT NULL THEN
                              (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_ACCOUNTNAME'), 1, 64))
                        WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
                        ELSE IFNULL(VAR_SECTION_LABEL, '')
                    END) AS FIELD_GROUP,
				CONCAT('GETCONSTITUENTDISPLAYNAME(GETCUSTOMFIELD(',
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
					', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '''))') AS COLUMN_NAME,
				SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_ACCTNAME'), 1, 64) AS ALIAS_NAME,
				CONCAT(VAR_FIELD_LABEL, ' - ', 'Account Name') AS DISPLAY_TEXT,
				1 AS FIELD_TYPE,
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY;
        ELSEIF VAR_FIELD_TYPE = 'QUERY_LOOKUP_OTHER' AND VAR_REFERENCE_TYPE = 'constituent' THEN
            
            INSERT THEGURU_FIELD_DEFINITIONS
				(VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY)
			SELECT
				VIEWNAME,
				CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
                    CASE
                        WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_ACCOUNTNUMBER'), 1, 64)) IS NOT NULL THEN
                              (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_ACCOUNTNUMBER'), 1, 64))
                        WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
                        ELSE IFNULL(VAR_SECTION_LABEL, '')
                    END) AS FIELD_GROUP,
				CONCAT('GETCONSTITUENTACCOUNTNUMBER(GETCUSTOMFIELD(',
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
					', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '''))') AS COLUMN_NAME,
				SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), ''), '_ACCTNBR'), 1, 64) AS ALIAS_NAME,
				CONCAT(VAR_FIELD_LABEL, ' - ', 'Account Number') AS DISPLAY_TEXT,
				2 AS FIELD_TYPE,
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY;
            
            INSERT THEGURU_FIELD_DEFINITIONS
				(VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY)
			SELECT
				VIEWNAME,
				CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
                    CASE
                        WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64)) IS NOT NULL THEN
                              (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                              WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64))
                        WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
                        ELSE IFNULL(VAR_SECTION_LABEL, '')
                    END) AS FIELD_GROUP,
				CONCAT('GETCONSTITUENTQUERYLOOKUPOTHER(',
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
					', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), ''')') AS COLUMN_NAME,
				SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64) AS ALIAS_NAME,
				CONCAT(VAR_FIELD_LABEL, ' - ', 'Account Name') AS DISPLAY_TEXT,
				1 AS FIELD_TYPE,
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY;
		ELSEIF VAR_FIELD_TYPE = 'CUSTOM_TABLE_REFERENCE' THEN
			INSERT THEGURU_FIELD_DEFINITIONS
				(VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY)
			SELECT
				VIEWNAME,
				CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
					CASE
						WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
							  WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64)) IS NOT NULL THEN
							  (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
							  WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64))
						WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
						ELSE IFNULL(VAR_SECTION_LABEL, '') END) AS FIELD_GROUP,
				CONCAT('GETCUSTOMTABLETITLEFIELDVALUES(''', VAR_REFERENCE_TYPE, ''', GETCUSTOMFIELD(',
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
					', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '''))') AS COLUMN_NAME,
				SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64) AS ALIAS_NAME,
				VAR_FIELD_LABEL AS DISPLAY_TEXT,
				1 AS FIELD_TYPE,
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY;
		ELSEIF VAR_FIELD_TYPE = 'MULTI_CUSTOM_TABLE_REFERENCE' THEN
			INSERT THEGURU_FIELD_DEFINITIONS
				(VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY)
			SELECT
				VIEWNAME,
				CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
					CASE
						WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
							  WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64)) IS NOT NULL THEN
							  (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
							  WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64))
						WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
						ELSE IFNULL(VAR_SECTION_LABEL, '') END) AS FIELD_GROUP,
				CONCAT('GETCUSTOMTABLETITLEFIELDVALUESCONCATENATED(''', VAR_REFERENCE_TYPE, ''', ',
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')),
					', ''', GET_ENTITY_TYPE_FOR_TABLE(TABLENAME), ''', ''', REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), ''')') AS COLUMN_NAME,
				SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(UPPER(REPLACE(REPLACE(REPLACE(VAR_FIELD_NAME, 'customFieldMap[', ''), ']', ''), '.', '_')), '')), 1, 64) AS ALIAS_NAME,
				VAR_FIELD_LABEL AS DISPLAY_TEXT,
				1 AS FIELD_TYPE,
				CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
				(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
					AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI')) AS PRIMARY_KEY;	
        END IF;
	END LOOP;
    SET CSR_END = 0;
    
	OPEN CSR_ADDITIONAL_FIELD_DEFINITIONS;
	ADDITIONAL_FIELD_DEFINITIONS_LOOP: LOOP
		FETCH CSR_ADDITIONAL_FIELD_DEFINITIONS INTO
            VAR_FIELD_GROUP, VAR_DISPLAY_NAME, VAR_ADDITIONAL_DEF_COLUMN_NAME, VAR_ALIAS_NAME, VAR_ADDITIONAL_DEF_FIELD_TYPE;
		IF CSR_END THEN
			LEAVE ADDITIONAL_FIELD_DEFINITIONS_LOOP;
		END IF;
		INSERT THEGURU_FIELD_DEFINITIONS
			(VIEW_NAME, FIELD_GROUP, COLUMN_NAME, ALIAS_NAME, DISPLAY_TEXT, FIELD_TYPE, PRIMARY_KEY)
		SELECT
			VIEWNAME,
			CONCAT(IFNULL(FIELDGROUPPREFIX, ''),
                CASE
                    WHEN (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                          WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(VAR_ALIAS_NAME, '')), 1, 64)) IS NOT NULL THEN
                          (SELECT FIELD_GROUP_OVERRIDE FROM THEGURU_FIELD_FIELDGROUP_OVERRIDE
                          WHERE ALIAS_NAME = SUBSTR(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(VAR_ALIAS_NAME, '')), 1, 64))
                    WHEN LENGTH(IFNULL(FIELDGROUPOVERRIDE, '')) > 0 THEN FIELDGROUPOVERRIDE
                    ELSE IFNULL(VAR_FIELD_GROUP,'')
                END),
            CONCAT(REPLACE(VAR_ADDITIONAL_DEF_COLUMN_NAME, '${COLUMN_PREFIX}', IFNULL(TABLECOLUMNPREFIX, ''))),
			SUBSTRING(CONCAT(IFNULL(TABLECOLUMNPREFIX, ''), IFNULL(VAR_ALIAS_NAME, '')), 1, 64) AS ALIAS_NAME,
			VAR_DISPLAY_NAME,
            VAR_ADDITIONAL_DEF_FIELD_TYPE,
			CONCAT(IFNULL(TABLECOLUMNPREFIX, ''),
			(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
				WHERE TABLE_SCHEMA = REPLACE(DATABASE(), 'theguru', '')
				AND TABLE_NAME = TABLENAME AND COLUMN_KEY = 'PRI'));
	END LOOP;
	SET CSR_END = 0;
	CLOSE CSR_ADDITIONAL_FIELD_DEFINITIONS;
END;
$$
