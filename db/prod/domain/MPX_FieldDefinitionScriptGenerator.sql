
DECLARE @TABLENAME varchar(50)
Declare @CRLF as VarChar(50)
Set @CRLF = Char(13) + Char(10)

Declare viewCursor Cursor For
Select Name From SysObjects Where Name Like 'VW_REPORT%' And Xtype = 'V'
And Name Not In ('VW_REPORT_GIFTHEADERCOMBINED', 'VW_REPORT_PEOPLE_TRANSACTIONS_BASE')
Order By ISNULL((SELECT DESCRIPTION FROM DATADICTIONARY WHERE TABLENAME = Name AND COLUMNNAME IS NULL),'')

Open viewCursor
Fetch Next From viewCursor Into @TABLENAME
While @@Fetch_Status = 0
Begin
	DECLARE @DISPLAYNAME varchar(100)
	SET @DISPLAYNAME = ISNULL((SELECT DESCRIPTION FROM DATADICTIONARY WHERE TABLENAME = @TABLENAME AND COLUMNNAME IS NULL),'')
	IF LEN(@DISPLAYNAME) = 0
	BEGIN
		CONTINUE
		Fetch Next From viewCursor Into @TABLENAME
	END
		--SET @DISPLAYNAME = dbo.pCase_Extended((SELECT Replace(Replace(@TABLENAME, 'VW_REPORT_',''), '_', ' ')))
	 
	DECLARE @REPORTDATASUBSOURCE VARCHAR(8000)
	DECLARE @REPORTFIELDGROUP VARCHAR(8000)
	DECLARE @REPORTFIELDGROUP_REPORTDATASUBSOURCE VARCHAR(8000)
	DECLARE @INSERTREPORTFIELD VARCHAR(8000)
	DECLARE @REPORTFIELD_REPORTFIELDGROUP VARCHAR(8000)
	DECLARE @FIELDNAME VARCHAR(100), @TEMPFIELDNAME VARCHAR(100)
	DECLARE @FIELDTYPE VARCHAR(100)
	DECLARE @FieldGroup VarChar(100), @CurrentFieldGroup VarChar(100), @CurrentFieldName VarChar(100)
	Set @CurrentFieldGroup = ''

	DECLARE CSR CURSOR FOR 
	SELECT COLUMN_NAME, DATA_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @TABLENAME

	OPEN CSR

	-- Insert REPORTDATASUBSOURCE
	PRINT '-- Insert REPORTDATASUBSOURCE'
	SET @REPORTDATASUBSOURCE = 'INSERT REPORTDATASUBSOURCE' + @CRLF +
		'  (REPORTSUBSOURCE_ID, DATABASE_TYPE, DISPLAY_NAME, JASPER_DATASOURCE_NAME, REPORT_FORMAT_TYPE, VIEW_NAME, REPORTDATASOURCE_REPORTSOURCE_ID)' + @CRLF +
		'VALUES ' + @CRLF + '  (NULL, 1, ''' + @DISPLAYNAME + ''', ''/datasources/ReportWizardJdbcDSForMPX'', 1, ''' + @TABLENAME + ''', 3);' + @CRLF + @CRLF +
		'SET @REPORTSUBSOURCE_ID = LAST_INSERT_ID();' + @CRLF + @CRLF

	PRINT @REPORTDATASUBSOURCE
	  
	FETCH NEXT FROM CSR INTO @FIELDNAME, @FIELDTYPE
	WHILE @@FETCH_STATUS = 0
	BEGIN
		SET @TEMPFIELDNAME = @FIELDNAME
		DECLARE @PREFIX VARCHAR(20)
		SET @PREFIX = ''
		IF @TABLENAME In ('VW_REPORT_PEOPLE_TRANSACTIONS', 'VW_REPORT_GIFTS', 'VW_REPORT_ORDERS',
		'VW_REPORT_PEOPLE_GIFTS', 'VW_REPORT_PEOPLE_ORDERS')
		BEGIN
			IF @TABLENAME = 'VW_REPORT_PEOPLE_TRANSACTIONS' AND CHARINDEX('GIFT_', @TEMPFIELDNAME) > 0
				SET @PREFIX = 'Gift - '
			IF @TABLENAME = 'VW_REPORT_PEOPLE_TRANSACTIONS' AND CHARINDEX('ORDER_', @TEMPFIELDNAME) > 0
				SET @PREFIX = 'Order - '

			SET @TEMPFIELDNAME = Replace(@TEMPFIELDNAME, 'GIFT_', '')
			SET @TEMPFIELDNAME = Replace(@TEMPFIELDNAME, 'ORDER_', '')
		END

		IF @TABLENAME In ('VW_REPORT_PEOPLE_ORDERSUMMARY', 'VW_REPORT_PEOPLE_GIFTSUMMARY', 'VW_REPORT_PEOPLE_GIFTANNUAL', 'VW_REPORT_PEOPLE_ORDERANNUAL')
		BEGIN
			IF CHARINDEX('HEADER_LARGE', @TEMPFIELDNAME) > 0 AND CHARINDEX('GIFT', @TEMPFIELDNAME) > 0
				SET @PREFIX = 'Large Gift - '
			IF CHARINDEX('HEADER_LAST', @TEMPFIELDNAME) > 0 AND CHARINDEX('GIFT', @TEMPFIELDNAME) > 0
				SET @PREFIX = 'Last Gift - '
			IF CHARINDEX('HEADER_FIRST', @TEMPFIELDNAME) > 0 AND CHARINDEX('GIFT', @TEMPFIELDNAME) > 0
				SET @PREFIX = 'First Gift - '
			IF CHARINDEX('HEADER_LARGE', @TEMPFIELDNAME) > 0 AND CHARINDEX('ORDER', @TEMPFIELDNAME) > 0
				SET @PREFIX = 'Large Order - '
			IF CHARINDEX('HEADER_LAST', @TEMPFIELDNAME) > 0 AND CHARINDEX('ORDER', @TEMPFIELDNAME) > 0
				SET @PREFIX = 'Last Order - '
			IF CHARINDEX('HEADER_FIRST', @TEMPFIELDNAME) > 0 AND CHARINDEX('ORDER', @TEMPFIELDNAME) > 0
				SET @PREFIX = 'First Order - '
		END

		SET @CURRENTFIELDNAME = ISNULL((SELECT DESCRIPTION FROM DATADICTIONARY WHERE TABLENAME = @TABLENAME AND COLUMNNAME = @FIELDNAME),'')
		IF (LEN(@CURRENTFIELDNAME) = 0)
		BEGIN
			FETCH NEXT FROM CSR INTO @FIELDNAME, @FIELDTYPE
			CONTINUE
		END
			--Set @CurrentFieldName = dbo.pCase_Extended(SubString(@TEMPFIELDNAME, CharIndex('_', @TEMPFIELDNAME) + 1, Len(@TEMPFIELDNAME)))
		Set @FieldGroup = @PREFIX + dbo.pCase_Extended(SubString(@TEMPFIELDNAME, 1, CharIndex('_', @TEMPFIELDNAME) - 1))

		IF (@FieldGroup <> @CurrentFieldGroup)
		BEGIN
			PRINT '-- Insert REPORTFIELDGROUP'
			SET @REPORTFIELDGROUP = 'INSERT REPORTFIELDGROUP' + @CRLF +
				'  (REPORTFIELDGROUP_ID, NAME)'  + @CRLF + 'VALUES' + @CRLF + '  (NULL, ''' + @PREFIX + ISNULL((SELECT DESCRIPTION FROM DATADICTIONARY WHERE TABLENAME = Replace(@FieldGroup, @PREFIX, '') AND COLUMNNAME IS NULL),@FieldGroup) + ''');' + @CRLF + @CRLF +
				'SET @REPORTFIELDGROUP_ID = LAST_INSERT_ID();' + @CRLF + @CRLF 
			SET @CurrentFieldGroup = @FieldGroup

			PRINT @REPORTFIELDGROUP
			
			PRINT '-- Insert REPORTFIELDGROUP_REPORTDATASUBSOURCE'
			
			SET @REPORTFIELDGROUP_REPORTDATASUBSOURCE = 'SET @MAXREPORTSUBSOURCE_ID = (SELECT IFNULL(MAX(REPORTSUBSOURCE_ID),0) + 1 FROM REPORTFIELDGROUP_REPORTDATASUBSOURCE);' + @CRLF + @CRLF +
				  'INSERT REPORTFIELDGROUP_REPORTDATASUBSOURCE' + @CRLF +
						'  (REPORTFIELDGROUP_REPORTFIELDGROUP_ID, REPORTDATASUBSOURCE_REPORTSUBSOURCE_ID, REPORTSUBSOURCE_ID)' + @CRLF +
				  'VALUES' + @CRLF + '  (@REPORTFIELDGROUP_ID, @REPORTSUBSOURCE_ID, @MAXREPORTSUBSOURCE_ID);' + @CRLF + @CRLF
			
			PRINT @REPORTFIELDGROUP_REPORTDATASUBSOURCE

		END
		
		-- Insert REPORTFIELD
		PRINT N'-- Insert REPORTFIELD'
		SET @INSERTREPORTFIELD = 'INSERT REPORTFIELD' + @CRLF +
			'  (REPORTFIELD_ID, AVERAGE, CAN_BE_SUMMARIZED, COLUMN_NAME, DISPLAY_NAME, IS_DEFAULT, IS_SUMMARIZED, LARGEST_VALUE, PERFORMSUMMARY, IS_SELECTED, SMALLEST_VALUE, RECORD_COUNT, FIELD_TYPE)' + @CRLF +
			'VALUES' + @CRLF + '  (NULL, '

	  --REPORTFIELD_ID

		--AVERAGE
		IF @FIELDTYPE IN ('MONEY','INT')
		BEGIN
			SET @INSERTREPORTFIELD = @INSERTREPORTFIELD + '1, ' 
		END
		ELSE
		BEGIN
			SET @INSERTREPORTFIELD = @INSERTREPORTFIELD + '0, ' 
		END
		--CAN_BE_SUMMARIZED
		IF @FIELDTYPE IN ('MONEY','INT')
		BEGIN
			SET @INSERTREPORTFIELD = @INSERTREPORTFIELD + '1, ' 
		END
		ELSE
		BEGIN
			SET @INSERTREPORTFIELD = @INSERTREPORTFIELD + '0, ' 
		END
		--COLUMN_NAME
		SET @INSERTREPORTFIELD = @INSERTREPORTFIELD + '''' + @FIELDNAME + ''', ' 
		--DISPLAY_NAME
		SET @INSERTREPORTFIELD = @INSERTREPORTFIELD + '''' + @CurrentFieldName + ''', ' 
		--IS_DEFAULT
		SET @INSERTREPORTFIELD = @INSERTREPORTFIELD + '0, ' 
		--IS_SUMMARIZED
		SET @INSERTREPORTFIELD = @INSERTREPORTFIELD + '0, '  
		--LARGEST_VALUE
		SET @INSERTREPORTFIELD = @INSERTREPORTFIELD + '0, '  
		--PERFORMSUMMARY
		SET @INSERTREPORTFIELD = @INSERTREPORTFIELD + '0, ' 
		--IS_SELECTED
		SET @INSERTREPORTFIELD = @INSERTREPORTFIELD + '0, '  
		--SMALLEST_VALUE
		SET @INSERTREPORTFIELD = @INSERTREPORTFIELD + '0, '  
		--RECORD_COUNT
		SET @INSERTREPORTFIELD = @INSERTREPORTFIELD + '0, ' + @CRLF; 
		--FIELD_TYPE
		SET @INSERTREPORTFIELD = @INSERTREPORTFIELD +
		CASE 
			WHEN (@FIELDTYPE in ('varchar', 'nvarchar', 'char')) THEN  '1); '
			WHEN (@FIELDTYPE in ('tinyint', 'int', 'bigint')) THEN  '2); '
			WHEN (@FIELDTYPE in ('float','real')) THEN  '3); '  
			WHEN (@FIELDTYPE in ('datetime','smalldatetime')) THEN  '4); '
			WHEN (@FIELDTYPE in ('decimal','money')) THEN  '5); '
			WHEN (@FIELDTYPE = 'bit') THEN  '6); '
			ELSE 'UNKNOWN);'
		END 

		SET @INSERTREPORTFIELD = @INSERTREPORTFIELD + @CRLF + 'SET @REPORTFIELD_ID = LAST_INSERT_ID();' + @CRLF + @CRLF
		PRINT @INSERTREPORTFIELD

		PRINT '-- Insert REPORTFIELD_REPORTFIELDGROUP'
		SET @REPORTFIELD_REPORTFIELDGROUP = 'INSERT REPORTFIELD_REPORTFIELDGROUP' + @CRLF +
			'  (FIELDS_REPORTFIELD_ID, REPORTFIELDGROUP_ID, REPORTFIELDGROUP_REPORTFIELDGROUP_ID, REPORTFIELD_ID)' + @CRLF +
			'VALUES' + @CRLF + '  (@REPORTFIELD_ID, @REPORTFIELDGROUP_ID, @REPORTFIELDGROUP_ID ,@REPORTFIELD_ID);' + @CRLF + @CRLF
		PRINT @REPORTFIELD_REPORTFIELDGROUP
		 
		PRINT '-- ********************************************************************************************'
	  FETCH NEXT FROM CSR INTO @FIELDNAME, @FIELDTYPE
	END
	 
	CLOSE CSR
	DEALLOCATE CSR

	Fetch Next From viewCursor Into @TABLENAME
End
Close viewCursor
Deallocate viewCursor	 
	 
PRINT ''
PRINT 'UPDATE REPORTFIELDGROUP SET NAME = ''Project Code Account'' WHERE NAME = ''Projectcodeentity'';'
PRINT 'UPDATE REPORTFIELDGROUP SET NAME = ''Gift - Project Code Account'' WHERE NAME = ''Gift - Projectcodeentity'';'
PRINT 'UPDATE REPORTFIELDGROUP SET NAME = ''Gift - Project Code Account'' WHERE NAME = ''Gift - Gift - Projectcodeentity'';'
PRINT 'UPDATE REPORTFIELDGROUP SET NAME = ''Gift Detail Related Account'' WHERE NAME = ''Relatedaccountentity'';'
PRINT 'UPDATE REPORTFIELDGROUP SET NAME = ''Gift - Gift Detail Related Account'' WHERE NAME = ''Gift - Relatedaccountentity'';'
PRINT 'UPDATE REPORTFIELDGROUP SET NAME = ''Gift - Gift Detail Related Account'' WHERE NAME = ''Gift - Gift - Relatedaccountentity'';'
PRINT ''
PRINT 'INSERT REPORTCUSTOMFILTERDEFINITION_REPORTDATASUBSOURCE
SELECT REPORTCUSTOMFILTERDEFINITION_ID, REPORTDATASUBSOURCE_REPORTSUBSOURCE_ID, REPORTDATASUBSOURCE_REPORTSUBSOURCE_ID, REPORTSUBSOURCE_ID + REPORTCUSTOMFILTERDEFINITION_ID
FROM REPORTFIELDGROUP_REPORTDATASUBSOURCE
JOIN REPORTCUSTOMFILTERDEFINITION ON 1 = 1
WHERE REPORTCUSTOMFILTERDEFINITION_ID < 100000
AND REPORTFIELDGROUP_REPORTFIELDGROUP_ID IN
  (SELECT REPORTFIELDGROUP_ID FROM REPORTFIELD_REPORTFIELDGROUP
  WHERE REPORTFIELD_ID IN
    (SELECT REPORTFIELD_ID FROM REPORTFIELD
    WHERE COLUMN_NAME = ''ENTITY_ENTITYID''));'


PRINT '
CREATE TABLE TMP ( REPORTFIELD_ID INT, REPORTDATASUBSOURCE_ID INT);
CREATE TABLE TMP2 ( REPORTFIELD_ID INT);

INSERT TMP
SELECT A.REPORTFIELD_ID, C.REPORTDATASUBSOURCE_REPORTSUBSOURCE_ID
FROM REPORTFIELD A
JOIN REPORTFIELD_REPORTFIELDGROUP B ON B.REPORTFIELD_ID = A.REPORTFIELD_ID
JOIN REPORTFIELDGROUP_REPORTDATASUBSOURCE C ON B.REPORTFIELDGROUP_REPORTFIELDGROUP_ID = C.REPORTFIELDGROUP_REPORTFIELDGROUP_ID;

INSERT TMP2
SELECT REPORTFIELD_ID FROM TMP WHERE REPORTFIELD_ID =
(SELECT REPORTFIELD_ID FROM TMP B WHERE B.REPORTDATASUBSOURCE_ID = TMP.REPORTDATASUBSOURCE_ID LIMIT 0, 1);

UPDATE REPORTFIELD SET IS_DEFAULT = 1
WHERE REPORTFIELD_ID IN
(SELECT REPORTFIELD_ID FROM TMP2);

DROP TABLE TMP;
DROP TABLE TMP2;'