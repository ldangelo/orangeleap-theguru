DELIMITER $$

DROP PROCEDURE IF EXISTS `INSERTFIELDDEFINITION_UPDATESCRIPT`$$

CREATE PROCEDURE INSERTFIELDDEFINITION_UPDATESCRIPT()
BEGIN
  DECLARE CSR_END INT DEFAULT 0;
  DECLARE REPORTFIELDGROUPID BIGINT DEFAULT 0;
  DECLARE PRIMARYKEYS VARCHAR(255) DEFAULT '';
  DECLARE COLUMNNAME VARCHAR(255) DEFAULT '';

  DECLARE CSR_FIELDGROUPS CURSOR FOR
    SELECT DISTINCT PRIMARY_KEYS, REPLACE(REPLACE(COLUMN_NAME, 'GETPICKLISTDISPLAYVALUE(''projectCode'', ', ''), ')', '') as COLUMN_NAME,
    REPORTFIELDGROUP_REPORTFIELDGROUP_ID
    FROM REPORTFIELD
    JOIN REPORTFIELD_REPORTFIELDGROUP ON REPORTFIELD_REPORTFIELDGROUP.REPORTFIELD_ID = REPORTFIELD.REPORTFIELD_ID
    WHERE DISPLAY_NAME = 'Designation';

  DECLARE CONTINUE HANDLER FOR NOT FOUND SET CSR_END = 1;

  IF NOT EXISTS
    (SELECT * FROM REPORTFIELD
    WHERE DISPLAY_NAME = 'Designation ID')
  THEN
    OPEN CSR_FIELDGROUPS;

    FIELDGROUPS_LOOP: LOOP
      FETCH CSR_FIELDGROUPS INTO PRIMARYKEYS, COLUMNNAME, REPORTFIELDGROUPID;

      IF CSR_END THEN
        LEAVE FIELDGROUPS_LOOP;
      END IF;

      CALL INSERTREPORTFIELD(PRIMARYKEYS, COLUMNNAME, 'Designation ID', b'0', 1, REPORTFIELDGROUPID);

    END LOOP;
    SET CSR_END = 0;
    CLOSE CSR_FIELDGROUPS;
  END IF;
END$$

DELIMITER ;

CALL INSERTFIELDDEFINITION_UPDATESCRIPT();
