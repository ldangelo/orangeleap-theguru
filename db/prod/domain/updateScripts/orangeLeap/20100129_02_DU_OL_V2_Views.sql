-- Populate new Orange Leap - V2 data sources

INSERT INTO REPORTDATASOURCE
	(REPORT_NAME)
SELECT
	'Orange Leap - V2';

SET @REPORTDATASOURCE_ID = LAST_INSERT_ID();

INSERT INTO REPORTDATASUBSOURCEGROUP
	(DESCRIPTION, DISPLAY_NAME, reportDataSource_REPORTSOURCE_ID)
VALUES
	('Administrative', 'Administrative', @REPORTDATASOURCE_ID);

INSERT INTO REPORTDATASUBSOURCEGROUP
	(DESCRIPTION, DISPLAY_NAME, reportDataSource_REPORTSOURCE_ID)
VALUES
	('Audit History', 'Audit History', @REPORTDATASOURCE_ID);

INSERT INTO REPORTDATASUBSOURCEGROUP
	(DESCRIPTION, DISPLAY_NAME, reportDataSource_REPORTSOURCE_ID)
VALUES
	('Constituents', 'Constituents', @REPORTDATASOURCE_ID);

INSERT INTO REPORTDATASUBSOURCEGROUP
	(DESCRIPTION, DISPLAY_NAME, reportDataSource_REPORTSOURCE_ID)
VALUES
	('Constituents & Transactions', 'Constituents & Transactions', @REPORTDATASOURCE_ID);

INSERT INTO REPORTDATASUBSOURCEGROUP
	(DESCRIPTION, DISPLAY_NAME, reportDataSource_REPORTSOURCE_ID)
VALUES
	('Touch Points', 'Touch Points', @REPORTDATASOURCE_ID);

INSERT INTO REPORTDATASUBSOURCEGROUP
	(DESCRIPTION, DISPLAY_NAME, reportDataSource_REPORTSOURCE_ID)
VALUES
	('Transactions', 'Transactions', @REPORTDATASOURCE_ID);

SET @REPORTDATASUBSOURCEGROUP_ID =
    (SELECT REPORTSUBSOURCEGROUP_ID FROM REPORTDATASUBSOURCEGROUP
    JOIN REPORTDATASOURCE ON REPORTSOURCE_ID = reportDataSource_REPORTSOURCE_ID
    WHERE REPORT_NAME = 'Orange Leap - V2'
    AND DISPLAY_NAME = 'Administrative');

INSERT INTO REPORTDATASUBSOURCE
	(DISPLAY_NAME, DATABASE_TYPE, VIEW_NAME, reportDataSubSourceGroup_REPORTSUBSOURCEGROUP_ID, REPORT_FORMAT_TYPE, JASPER_DATASOURCE_NAME, SEGMENTATION_RESULTS_DATASOURCE_NAME)
VALUES
	('Picklists', 0, 'VW_V2_PICKLISTS', @REPORTDATASUBSOURCEGROUP_ID, 0, '/datasources/ReportWizardJdbcDS', '/datasources/ReportWizardJdbcDSSegmentationResults');


SET @REPORTDATASUBSOURCEGROUP_ID =
    (SELECT REPORTSUBSOURCEGROUP_ID FROM REPORTDATASUBSOURCEGROUP
    JOIN REPORTDATASOURCE ON REPORTSOURCE_ID = reportDataSource_REPORTSOURCE_ID
    WHERE REPORT_NAME = 'Orange Leap - V2'
    AND DISPLAY_NAME = 'Constituents');

INSERT INTO REPORTDATASUBSOURCE
	(DISPLAY_NAME, DATABASE_TYPE, VIEW_NAME, reportDataSubSourceGroup_REPORTSUBSOURCEGROUP_ID, REPORT_FORMAT_TYPE, JASPER_DATASOURCE_NAME, SEGMENTATION_RESULTS_DATASOURCE_NAME)
VALUES
	('Constituents', 0, 'VW_V2_CONSTITUENTS', @REPORTDATASUBSOURCEGROUP_ID, 0, '/datasources/ReportWizardJdbcDS', '/datasources/ReportWizardJdbcDSSegmentationResults');

INSERT INTO REPORTDATASUBSOURCE
	(DISPLAY_NAME, DATABASE_TYPE, VIEW_NAME, reportDataSubSourceGroup_REPORTSUBSOURCEGROUP_ID, REPORT_FORMAT_TYPE, JASPER_DATASOURCE_NAME, SEGMENTATION_RESULTS_DATASOURCE_NAME)
VALUES
	('Constituents & Addresses', 0, 'VW_V2_CONSTITUENTS_ADDRESSES', @REPORTDATASUBSOURCEGROUP_ID, 0, '/datasources/ReportWizardJdbcDS', '/datasources/ReportWizardJdbcDSSegmentationResults');

INSERT INTO REPORTDATASUBSOURCE
	(DISPLAY_NAME, DATABASE_TYPE, VIEW_NAME, reportDataSubSourceGroup_REPORTSUBSOURCEGROUP_ID, REPORT_FORMAT_TYPE, JASPER_DATASOURCE_NAME, SEGMENTATION_RESULTS_DATASOURCE_NAME)
VALUES
	('Constituents & Phone Numbers', 0, 'VW_V2_CONSTITUENTS_PHONENUMBERS', @REPORTDATASUBSOURCEGROUP_ID, 0, '/datasources/ReportWizardJdbcDS', '/datasources/ReportWizardJdbcDSSegmentationResults');


SET @REPORTDATASUBSOURCEGROUP_ID =
    (SELECT REPORTSUBSOURCEGROUP_ID FROM REPORTDATASUBSOURCEGROUP
    JOIN REPORTDATASOURCE ON REPORTSOURCE_ID = reportDataSource_REPORTSOURCE_ID
    WHERE REPORT_NAME = 'Orange Leap - V2'
    AND DISPLAY_NAME = 'Transactions');

INSERT INTO REPORTDATASUBSOURCE
	(DISPLAY_NAME, DATABASE_TYPE, VIEW_NAME, reportDataSubSourceGroup_REPORTSUBSOURCEGROUP_ID, REPORT_FORMAT_TYPE, JASPER_DATASOURCE_NAME, SEGMENTATION_RESULTS_DATASOURCE_NAME)
VALUES
	('Gifts', 0, 'VW_V2_GIFTS', @REPORTDATASUBSOURCEGROUP_ID, 0, '/datasources/ReportWizardJdbcDS', '/datasources/ReportWizardJdbcDSSegmentationResults');

INSERT INTO REPORTDATASUBSOURCE
	(DISPLAY_NAME, DATABASE_TYPE, VIEW_NAME, reportDataSubSourceGroup_REPORTSUBSOURCEGROUP_ID, REPORT_FORMAT_TYPE, JASPER_DATASOURCE_NAME, SEGMENTATION_RESULTS_DATASOURCE_NAME)
VALUES
	('Gifts & Gift Distributions', 0, 'VW_V2_GIFTS_DISTRIBUTIONS', @REPORTDATASUBSOURCEGROUP_ID, 0, '/datasources/ReportWizardJdbcDS', '/datasources/ReportWizardJdbcDSSegmentationResults');

INSERT INTO REPORTDATASUBSOURCE
	(DISPLAY_NAME, DATABASE_TYPE, VIEW_NAME, reportDataSubSourceGroup_REPORTSUBSOURCEGROUP_ID, REPORT_FORMAT_TYPE, JASPER_DATASOURCE_NAME, SEGMENTATION_RESULTS_DATASOURCE_NAME)
VALUES
	('Gift Adjustments & Distributions', 0, 'VW_V2_ADJUSTED_GIFTS_DISTRIBUTIONS', @REPORTDATASUBSOURCEGROUP_ID, 0, '/datasources/ReportWizardJdbcDS', '/datasources/ReportWizardJdbcDSSegmentationResults');

INSERT INTO REPORTDATASUBSOURCE
	(DISPLAY_NAME, DATABASE_TYPE, VIEW_NAME, reportDataSubSourceGroup_REPORTSUBSOURCEGROUP_ID, REPORT_FORMAT_TYPE, JASPER_DATASOURCE_NAME, SEGMENTATION_RESULTS_DATASOURCE_NAME)
VALUES
	('Pledges', 0, 'VW_V2_PLEDGES', @REPORTDATASUBSOURCEGROUP_ID, 0, '/datasources/ReportWizardJdbcDS', '/datasources/ReportWizardJdbcDSSegmentationResults');

INSERT INTO REPORTDATASUBSOURCE
	(DISPLAY_NAME, DATABASE_TYPE, VIEW_NAME, reportDataSubSourceGroup_REPORTSUBSOURCEGROUP_ID, REPORT_FORMAT_TYPE, JASPER_DATASOURCE_NAME, SEGMENTATION_RESULTS_DATASOURCE_NAME)
VALUES
	('Pledges & Distributions', 0, 'VW_V2_PLEDGES_DISTRIBUTIONS', @REPORTDATASUBSOURCEGROUP_ID, 0, '/datasources/ReportWizardJdbcDS', '/datasources/ReportWizardJdbcDSSegmentationResults');

INSERT INTO REPORTDATASUBSOURCE
	(DISPLAY_NAME, DATABASE_TYPE, VIEW_NAME, reportDataSubSourceGroup_REPORTSUBSOURCEGROUP_ID, REPORT_FORMAT_TYPE, JASPER_DATASOURCE_NAME, SEGMENTATION_RESULTS_DATASOURCE_NAME)
VALUES
	('Recurring Gifts', 0, 'VW_V2_RECURRINGGIFTS', @REPORTDATASUBSOURCEGROUP_ID, 0, '/datasources/ReportWizardJdbcDS', '/datasources/ReportWizardJdbcDSSegmentationResults');

INSERT INTO REPORTDATASUBSOURCE
	(DISPLAY_NAME, DATABASE_TYPE, VIEW_NAME, reportDataSubSourceGroup_REPORTSUBSOURCEGROUP_ID, REPORT_FORMAT_TYPE, JASPER_DATASOURCE_NAME, SEGMENTATION_RESULTS_DATASOURCE_NAME)
VALUES
	('Recurring Gifts & Distributions', 0, 'VW_V2_RECURRINGGIFTS_DISTRIBUTIONS', @REPORTDATASUBSOURCEGROUP_ID, 0, '/datasources/ReportWizardJdbcDS', '/datasources/ReportWizardJdbcDSSegmentationResults');

INSERT INTO REPORTDATASUBSOURCE
	(DISPLAY_NAME, DATABASE_TYPE, VIEW_NAME, reportDataSubSourceGroup_REPORTSUBSOURCEGROUP_ID, REPORT_FORMAT_TYPE, JASPER_DATASOURCE_NAME, SEGMENTATION_RESULTS_DATASOURCE_NAME)
VALUES
	('Payment Methods', 0, 'VW_V2_PAYMENTMETHODS', @REPORTDATASUBSOURCEGROUP_ID, 0, '/datasources/ReportWizardJdbcDS', '/datasources/ReportWizardJdbcDSSegmentationResults');


SET @REPORTDATASUBSOURCEGROUP_ID =
    (SELECT REPORTSUBSOURCEGROUP_ID FROM REPORTDATASUBSOURCEGROUP
    JOIN REPORTDATASOURCE ON REPORTSOURCE_ID = reportDataSource_REPORTSOURCE_ID
    WHERE REPORT_NAME = 'Orange Leap - V2'
    AND DISPLAY_NAME = 'Constituents & Transactions');

INSERT INTO REPORTDATASUBSOURCE
	(DISPLAY_NAME, DATABASE_TYPE, VIEW_NAME, reportDataSubSourceGroup_REPORTSUBSOURCEGROUP_ID, REPORT_FORMAT_TYPE, JASPER_DATASOURCE_NAME, SEGMENTATION_RESULTS_DATASOURCE_NAME)
VALUES
	('Constituents & Gifts', 0, 'VW_V2_CONSTITUENTS_GIFTS', @REPORTDATASUBSOURCEGROUP_ID, 0, '/datasources/ReportWizardJdbcDS', '/datasources/ReportWizardJdbcDSSegmentationResults');

INSERT INTO REPORTDATASUBSOURCE
	(DISPLAY_NAME, DATABASE_TYPE, VIEW_NAME, reportDataSubSourceGroup_REPORTSUBSOURCEGROUP_ID, REPORT_FORMAT_TYPE, JASPER_DATASOURCE_NAME, SEGMENTATION_RESULTS_DATASOURCE_NAME)
VALUES
	('Constituents & Gift Distributions', 0, 'VW_V2_CONSTITUENTS_GIFTDISTRIBUTIONS', @REPORTDATASUBSOURCEGROUP_ID, 0, '/datasources/ReportWizardJdbcDS', '/datasources/ReportWizardJdbcDSSegmentationResults');

INSERT INTO REPORTDATASUBSOURCE
	(DISPLAY_NAME, DATABASE_TYPE, VIEW_NAME, reportDataSubSourceGroup_REPORTSUBSOURCEGROUP_ID, REPORT_FORMAT_TYPE, JASPER_DATASOURCE_NAME, SEGMENTATION_RESULTS_DATASOURCE_NAME)
VALUES
	('Constituents & Gift Adjustment Distributions', 0, 'VW_V2_CONSTITUENTS_ADJUSTED_GIFTS_DISTRIBUTIONS', @REPORTDATASUBSOURCEGROUP_ID, 0, '/datasources/ReportWizardJdbcDS', '/datasources/ReportWizardJdbcDSSegmentationResults');

INSERT INTO REPORTDATASUBSOURCE
	(DISPLAY_NAME, DATABASE_TYPE, VIEW_NAME, reportDataSubSourceGroup_REPORTSUBSOURCEGROUP_ID, REPORT_FORMAT_TYPE, JASPER_DATASOURCE_NAME, SEGMENTATION_RESULTS_DATASOURCE_NAME)
VALUES
	('Constituents & Pledges', 0, 'VW_V2_CONSTITUENTS_PLEDGES', @REPORTDATASUBSOURCEGROUP_ID, 0, '/datasources/ReportWizardJdbcDS', '/datasources/ReportWizardJdbcDSSegmentationResults');

INSERT INTO REPORTDATASUBSOURCE
	(DISPLAY_NAME, DATABASE_TYPE, VIEW_NAME, reportDataSubSourceGroup_REPORTSUBSOURCEGROUP_ID, REPORT_FORMAT_TYPE, JASPER_DATASOURCE_NAME, SEGMENTATION_RESULTS_DATASOURCE_NAME)
VALUES
	('Constituents, Pledges & Distributions', 0, 'VW_V2_CONSTITUENTS_PLEDGES_DISTRIBUTIONS', @REPORTDATASUBSOURCEGROUP_ID, 0, '/datasources/ReportWizardJdbcDS', '/datasources/ReportWizardJdbcDSSegmentationResults');

INSERT INTO REPORTDATASUBSOURCE
	(DISPLAY_NAME, DATABASE_TYPE, VIEW_NAME, reportDataSubSourceGroup_REPORTSUBSOURCEGROUP_ID, REPORT_FORMAT_TYPE, JASPER_DATASOURCE_NAME, SEGMENTATION_RESULTS_DATASOURCE_NAME)
VALUES
	('Constituents & Recurring Gifts', 0, 'VW_V2_CONSTITUENTS_RECURRINGGIFTS', @REPORTDATASUBSOURCEGROUP_ID, 0, '/datasources/ReportWizardJdbcDS', '/datasources/ReportWizardJdbcDSSegmentationResults');

INSERT INTO REPORTDATASUBSOURCE
	(DISPLAY_NAME, DATABASE_TYPE, VIEW_NAME, reportDataSubSourceGroup_REPORTSUBSOURCEGROUP_ID, REPORT_FORMAT_TYPE, JASPER_DATASOURCE_NAME, SEGMENTATION_RESULTS_DATASOURCE_NAME)
VALUES
	('Constituents, Recurring Gifts & Distributions', 0, 'VW_V2_CONSTITUENTS_RECURRINGGIFTS_DISTRIBUTIONS', @REPORTDATASUBSOURCEGROUP_ID, 0, '/datasources/ReportWizardJdbcDS', '/datasources/ReportWizardJdbcDSSegmentationResults');

INSERT INTO REPORTDATASUBSOURCE
	(DISPLAY_NAME, DATABASE_TYPE, VIEW_NAME, reportDataSubSourceGroup_REPORTSUBSOURCEGROUP_ID, REPORT_FORMAT_TYPE, JASPER_DATASOURCE_NAME, SEGMENTATION_RESULTS_DATASOURCE_NAME)
VALUES
	('Constituents & Payment Methods', 0, 'VW_V2_CONSTITUENTS_PAYMENTMETHODS', @REPORTDATASUBSOURCEGROUP_ID, 0, '/datasources/ReportWizardJdbcDS', '/datasources/ReportWizardJdbcDSSegmentationResults');

INSERT INTO REPORTDATASUBSOURCE
	(DISPLAY_NAME, DATABASE_TYPE, VIEW_NAME, reportDataSubSourceGroup_REPORTSUBSOURCEGROUP_ID, REPORT_FORMAT_TYPE, JASPER_DATASOURCE_NAME, SEGMENTATION_RESULTS_DATASOURCE_NAME)
VALUES
	('Constituents & Gift Summaries', 0, 'VW_V2_CONSTITUENTS_GIFTSUMMARIES', @REPORTDATASUBSOURCEGROUP_ID, 0, '/datasources/ReportWizardJdbcDS', '/datasources/ReportWizardJdbcDSSegmentationResults');

SET @VIEW_ID = LAST_INSERT_ID();

-- Tie Constituents & Gift Summaries to the appropriate segmentation type and custom filters
INSERT REPORTCUSTOMFILTERDEFINITION_REPORTDATASUBSOURCE
SELECT REPORTCUSTOMFILTERDEFINITION_ID, @VIEW_ID, @VIEW_ID, REPORTCUSTOMFILTERDEFINITION_ID + @VIEW_ID
FROM REPORTCUSTOMFILTERDEFINITION WHERE SQL_TEXT LIKE '%[VIEWNAME].CONSTITUENT_CONSTITUENT_ID%';

INSERT REPORTSEGMENTATIONTYPE_REPORTDATASUBSOURCE
SELECT REPORTSEGMENTATIONTYPE_ID, @VIEW_ID, @VIEW_ID, REPORTSEGMENTATIONTYPE_ID
FROM REPORTSEGMENTATIONTYPE WHERE COLUMN_NAME = 'CONSTITUENT_CONSTITUENT_ID';


-- VW_V2_PICKLISTS
INSERT THEGURU_VIEW
	(VIEW_NAME, VIEW_DISPLAY_TEXT, PRIMARY_TABLE, PRIMARY_TABLE_IS_VIEW, PRIMARY_TABLE_ALIAS, PRIMARY_TABLE_COLUMN_PREFIX, INCLUDE_ALL_FIELDS, SORT_ORDER)
SELECT
	'VW_V2_PICKLISTS', 'Picklists', 'PICKLIST', FALSE, 'PICKLIST', 'PICKLIST_', TRUE, 10;

SET @VIEW_ID = LAST_INSERT_ID();

INSERT THEGURU_VIEW_JOIN
	(VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER)
SELECT
	@VIEW_ID, 'LEFT', 'CUSTOM_FIELD', FALSE, 'PICKLIST_CUSTOM_FIELD', 'PICKLIST_CUSTOM_FIELD_', 'PICKLIST.PICKLIST_ID = PICKLIST_CUSTOM_FIELD.ENTITY_ID AND PICKLIST_CUSTOM_FIELD.ENTITY_TYPE = ''picklist''', TRUE, 1;

INSERT THEGURU_VIEW_JOIN
	(VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER)
SELECT
	@VIEW_ID, 'LEFT', 'PICKLIST_ITEM', FALSE, 'PICKLIST_ITEM', 'PICKLIST_ITEM_', 'PICKLIST.PICKLIST_ID = PICKLIST_ITEM.PICKLIST_ID', TRUE, 2;

INSERT THEGURU_VIEW_JOIN
	(VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER)
SELECT
	@VIEW_ID, 'LEFT', 'CUSTOM_FIELD', FALSE, 'PICKLIST_ITEM_CUSTOM_FIELD', 'PICKLIST_ITEM_CUSTOM_FIELD_', 'PICKLIST_ITEM.PICKLIST_ITEM_ID = PICKLIST_ITEM_CUSTOM_FIELD.ENTITY_ID AND PICKLIST_ITEM_CUSTOM_FIELD.ENTITY_TYPE = ''picklistitem''', TRUE, 3;


INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'PICKLIST', 'Picklist Information', 'Picklist Name ID', '${COLUMN_PREFIX}PICKLIST_NAME_ID', 'PICKLIST_NAME_ID', 1;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'PICKLIST', 'Picklist Information', 'Picklist Name', '${COLUMN_PREFIX}PICKLIST_DESC', 'PICKLIST_NAME', 1;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'PICKLIST', 'Picklist Information', 'Site Name', '${COLUMN_PREFIX}SITE_NAME', 'SITE_NAME', 1;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'PICKLIST', 'Picklist Information', 'Picklist Custom Field Name', '${COLUMN_PREFIX}CUSTOM_FIELD_FIELD_NAME', 'CUSTOM_FIELD_FIELD_NAME', 1;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'PICKLIST', 'Picklist Information', 'Picklist Custom Field Value', '${COLUMN_PREFIX}CUSTOM_FIELD_FIELD_VALUE', 'CUSTOM_FIELD_FIELD_VALUE', 1;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'PICKLIST_ITEM', 'Picklist Information', 'Picklist Item Name', '${COLUMN_PREFIX}ITEM_NAME', 'ITEM_NAME', 1;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'PICKLIST_ITEM', 'Picklist Information', 'Picklist Item Short Display Name', '${COLUMN_PREFIX}DEFAULT_DISPLAY_VALUE', 'DEFAULT_DISPLAY_VALUE', 1;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'PICKLIST_ITEM', 'Picklist Information', 'Picklist Item Long Display Name', '${COLUMN_PREFIX}LONG_DESCRIPTION', 'LONG_DESCRIPTION', 1;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'PICKLIST_ITEM', 'Picklist Information', 'Picklist Item Description', '${COLUMN_PREFIX}DETAIL', 'DETAIL', 1;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'PICKLIST_ITEM', 'Picklist Information', 'Picklist Item Inactive', '${COLUMN_PREFIX}INACTIVE', 'INACTIVE', 6;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'PICKLIST_ITEM', 'Picklist Information', 'Picklist Item Order', '${COLUMN_PREFIX}ITEM_ORDER', 'ITEM_ORDER', 2;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'PICKLIST_ITEM', 'Picklist Information', 'Picklist Item Custom Field Name', '${COLUMN_PREFIX}CUSTOM_FIELD_FIELD_NAME', 'CUSTOM_FIELD_FIELD_NAME', 1;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'PICKLIST_ITEM', 'Picklist Information', 'Picklist Item Custom Field Value', '${COLUMN_PREFIX}CUSTOM_FIELD_FIELD_VALUE', 'CUSTOM_FIELD_FIELD_VALUE', 1;



-- VW_V2_ADDRESSES_CURRENT
INSERT THEGURU_VIEW
	(VIEW_NAME, VIEW_DISPLAY_TEXT, PRIMARY_TABLE, PRIMARY_TABLE_IS_VIEW, PRIMARY_TABLE_ALIAS, PRIMARY_TABLE_COLUMN_PREFIX, INCLUDE_ALL_FIELDS, SORT_ORDER, WHERE_CLAUSE, DEFAULT_PAGE_TYPE)
SELECT
	'VW_V2_ADDRESSES_CURRENT', 'Current Address Information', 'ADDRESS', FALSE, 'ADDRESS_CURRENT', 'ADDRESS_CURRENT_', TRUE, 20,
    'ADDRESS_CURRENT.UNDELIVERABLE = ''0'' AND ADDRESS_CURRENT.INACTIVE= ''0'' AND ((ADDRESS_CURRENT.ACTIVATION_STATUS = ''temporary'' AND ADDRESS_CURRENT.TEMPORARY_START_DATE <= NOW() AND ADDRESS_CURRENT.TEMPORARY_END_DATE >= NOW()) OR (ADDRESS_CURRENT.ACTIVATION_STATUS = ''seasonal'' AND IS_IN_SEASON(now(), SEASONAL_START_DATE, SEASONAL_END_DATE)) OR (ADDRESS_CURRENT.ACTIVATION_STATUS = ''permanent'' AND ADDRESS_CURRENT.EFFECTIVE_DATE <= NOW()))',
	'addressManagerEdit';

SET @VIEW_ID = LAST_INSERT_ID();


INSERT THEGURU_VIEW_JOIN
	(VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER)
SELECT
	@VIEW_ID, 'LEFT', 'CUSTOM_FIELD', FALSE, 'ADDRESS_TYPE', 'ADDRESS_CURRENT_', 'ADDRESS_TYPE.ENTITY_TYPE = ''address'' AND ADDRESS_CURRENT.ADDRESS_ID = ADDRESS_TYPE.ENTITY_ID AND ADDRESS_TYPE.FIELD_NAME = ''addressType''', FALSE, 3;


-- Add additional field definitions
INSERT THEGURU_TABLE_ADDITIONAL_FIELD
	(TABLE_NAME, FIELD_TEXT, FIELD_ALIAS)
SELECT
	'ADDRESS', 'ADDRESS_TYPE.FIELD_VALUE', 'ADDRESS_TYPE';


INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'ADDRESS', 'Address Information', 'Address ID', '${COLUMN_PREFIX}ADDRESS_ID', 'ADDRESS_ID', 1;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'ADDRESS', 'Address Information', 'Address Type', 'GETPICKLISTDISPLAYVALUE(''customFieldMap[addressType]'', ${COLUMN_PREFIX}ADDRESS_TYPE)', 'ADDRESS_TYPE', 1;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'ADDRESS', 'Address Information', 'Seasonal Start Date', 'CONCAT(MONTHNAME(${COLUMN_PREFIX}SEASONAL_START_DATE), ''-'', DAY(${COLUMN_PREFIX}SEASONAL_START_DATE))', 'SEASONAL_START_DATE_DISPLAY', 1;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'ADDRESS', 'Address Information', 'Seasonal End Date', 'CONCAT(MONTHNAME(${COLUMN_PREFIX}SEASONAL_END_DATE), ''-'', DAY(${COLUMN_PREFIX}SEASONAL_END_DATE))', 'SEASONAL_END_DATE_DISPLAY', 1;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'ADDRESS', 'Address Information', 'Comments', '${COLUMN_PREFIX}COMMENT', 'COMMENT', 1;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'ADDRESS', 'Address Information', 'Address Create Date', '${COLUMN_PREFIX}CREATE_DATE', 'CREATE_DATE', 4;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'ADDRESS', 'Address Information', 'Address Update Date', '${COLUMN_PREFIX}UPDATE_DATE', 'UPDATE_DATE', 4;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'ADDRESS', 'Address Information', 'Primary Address', '${COLUMN_PREFIX}IS_PRIMARY', 'IS_PRIMARY', 6;


INSERT THEGURU_TABLE_FIELD_EXCLUSIONS
	(TABLE_NAME, FIELD_NAME)
SELECT
	'ADDRESS', 'customFieldMap[addressType]';

INSERT THEGURU_TABLE_FIELD_EXCLUSIONS
	(TABLE_NAME, FIELD_NAME)
SELECT
	'ADDRESS', 'seasonalStartDate';

INSERT THEGURU_TABLE_FIELD_EXCLUSIONS
	(TABLE_NAME, FIELD_NAME)
SELECT
	'ADDRESS', 'seasonalEndDate';




-- VW_V2_CONSTITUENTS
INSERT THEGURU_VIEW
	(VIEW_NAME, VIEW_DISPLAY_TEXT, PRIMARY_TABLE, PRIMARY_TABLE_IS_VIEW, PRIMARY_TABLE_ALIAS, PRIMARY_TABLE_COLUMN_PREFIX, INCLUDE_ALL_FIELDS, SORT_ORDER, DEFAULT_PAGE_TYPE)
SELECT
	'VW_V2_CONSTITUENTS', 'Constituents', 'CONSTITUENT', FALSE, 'CONSTITUENT', 'CONSTITUENT_', TRUE, 30, 'constituent';

SET @VIEW_ID = LAST_INSERT_ID();


INSERT THEGURU_VIEW_JOIN
	(VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX)
SELECT
	@VIEW_ID, 'LEFT', 'VW_V2_ADDRESSES_CURRENT', TRUE, 'VW_V2_ADDRESSES_CURRENT', '', 'VW_V2_ADDRESSES_CURRENT.ADDRESS_CURRENT_CONSTITUENT_ID = CONSTITUENT.CONSTITUENT_ID', TRUE, 1, 'Current ';


INSERT THEGURU_VIEW_JOIN
	(VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER)
SELECT
	@VIEW_ID, 'LEFT', 'CUSTOM_FIELD', FALSE, 'CONSTITUENT_ROLES', '', 'CONSTITUENT_ROLES.ENTITY_TYPE = ''constituent'' AND CONSTITUENT_ROLES.ENTITY_ID = CONSTITUENT.CONSTITUENT_ID AND CONSTITUENT_ROLES.FIELD_NAME = CASE WHEN CONSTITUENT_TYPE = ''individual'' THEN ''constituentIndividualRoles'' WHEN CONSTITUENT_TYPE = ''organization'' THEN ''constituentOrganizationRoles'' ELSE '''' END', FALSE, 2;

INSERT THEGURU_VIEW_JOIN
	(VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER)
SELECT
	@VIEW_ID, 'LEFT', 'CUSTOM_FIELD', FALSE, 'DONOR_PROFILES', '', 'DONOR_PROFILES.ENTITY_TYPE = ''constituent'' AND DONOR_PROFILES.ENTITY_ID = CONSTITUENT.CONSTITUENT_ID AND DONOR_PROFILES.FIELD_NAME = ''donorProfiles''', FALSE, 3;


-- Create an additional field for constituent role, both in the view and in the field definitions
INSERT THEGURU_TABLE_ADDITIONAL_FIELD
	(TABLE_NAME, FIELD_TEXT, FIELD_ALIAS)
SELECT
	'CONSTITUENT', 'GETPICKLISTDISPLAYVALUE(CASE WHEN CONSTITUENT_TYPE = ''individual'' THEN ''customFieldMap[constituentIndividualRoles]'' WHEN CONSTITUENT_TYPE = ''organization'' THEN ''customFieldMap[constituentOrganizationRoles]'' ELSE '''' END, CONSTITUENT_ROLES.FIELD_VALUE)', 'CONSTITUENT_ROLE';

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'CONSTITUENT', 'Contact Details', 'Profile Type', 'CONSTITUENT_CONSTITUENT_ROLE', 'CONSTITUENT_ROLE', 1;


-- Create an additional field for donor role, both in the view and the field definitions
INSERT THEGURU_TABLE_ADDITIONAL_FIELD
	(TABLE_NAME, FIELD_TEXT, FIELD_ALIAS)
SELECT
	'CONSTITUENT', 'GETPICKLISTDISPLAYVALUE(''customFieldMap[donorProfiles]'', DONOR_PROFILES.FIELD_VALUE)', 'DONOR_PROFILE';

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'CONSTITUENT', 'Contact Details', 'Donor Profile', 'CONSTITUENT_DONOR_PROFILE', 'DONOR_PROFILE', 1;


-- Additional field definitions
INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'CONSTITUENT', 'Contact Details', 'Create Date', '${COLUMN_PREFIX}CREATE_DATE', 'CREATE_DATE', 4;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'CONSTITUENT', 'Contact Details', 'Update Date', '${COLUMN_PREFIX}UPDATE_DATE', 'UPDATE_DATE', 4;

INSERT THEGURU_TABLE_FIELD_EXCLUSIONS
	(TABLE_NAME, FIELD_NAME)
SELECT
	'CONSTITUENT', 'customFieldMap[constituentIndividualRoles]';

INSERT THEGURU_TABLE_FIELD_EXCLUSIONS
	(TABLE_NAME, FIELD_NAME)
SELECT
	'CONSTITUENT', 'customFieldMap[constituentOrganizationRoles]';

INSERT THEGURU_TABLE_FIELD_EXCLUSIONS
	(TABLE_NAME, FIELD_NAME)
SELECT
	'CONSTITUENT', 'customFieldMap[donorProfiles]';



-- VW_V2_CONSTITUENTS_ADDRESSES
INSERT THEGURU_VIEW
	(VIEW_NAME, VIEW_DISPLAY_TEXT, PRIMARY_TABLE, PRIMARY_TABLE_IS_VIEW, PRIMARY_TABLE_ALIAS, PRIMARY_TABLE_COLUMN_PREFIX, INCLUDE_ALL_FIELDS, SORT_ORDER)
SELECT
	'VW_V2_CONSTITUENTS_ADDRESSES', 'Constituents & Addresses', 'VW_V2_CONSTITUENTS', TRUE, 'VW_V2_CONSTITUENTS', '', TRUE, 50;

SET @VIEW_ID = LAST_INSERT_ID();


INSERT THEGURU_VIEW_JOIN
	(VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX)
SELECT
	@VIEW_ID, 'LEFT', 'ADDRESS', FALSE, 'ADDRESS', 'ADDRESS_', 'VW_V2_CONSTITUENTS.CONSTITUENT_CONSTITUENT_ID = ADDRESS.CONSTITUENT_ID', TRUE, 1, '';

INSERT THEGURU_VIEW_JOIN
	(VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER)
SELECT
	@VIEW_ID, 'LEFT', 'CUSTOM_FIELD', FALSE, 'ADDRESS_TYPE', 'ADDRESS_', 'ADDRESS_TYPE.ENTITY_TYPE = ''address'' AND ADDRESS.ADDRESS_ID = ADDRESS_TYPE.ENTITY_ID AND ADDRESS_TYPE.FIELD_NAME = ''addressType''', FALSE, 2;





-- VW_V2_CONSTITUENTS_PHONES
INSERT THEGURU_VIEW
	(VIEW_NAME, VIEW_DISPLAY_TEXT, PRIMARY_TABLE, PRIMARY_TABLE_IS_VIEW, PRIMARY_TABLE_ALIAS, PRIMARY_TABLE_COLUMN_PREFIX, INCLUDE_ALL_FIELDS, SORT_ORDER)
SELECT
	'VW_V2_CONSTITUENTS_PHONENUMBERS', 'Constituents & Phone Numbers', 'VW_V2_CONSTITUENTS', TRUE, 'VW_V2_CONSTITUENTS', '', TRUE, 70;

SET @VIEW_ID = LAST_INSERT_ID();


INSERT THEGURU_VIEW_JOIN
	(VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX)
SELECT
	@VIEW_ID, 'LEFT', 'PHONE', FALSE, 'PHONE', 'PHONE_', 'VW_V2_CONSTITUENTS.CONSTITUENT_CONSTITUENT_ID = PHONE.CONSTITUENT_ID', TRUE, 1, '';

INSERT THEGURU_VIEW_JOIN
	(VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER)
SELECT
	@VIEW_ID, 'LEFT', 'CUSTOM_FIELD', FALSE, 'PHONE_TYPE', 'PHONE_', 'PHONE_TYPE.ENTITY_TYPE = ''phone'' AND PHONE_TYPE.ENTITY_ID = PHONE.PHONE_ID AND PHONE_TYPE.FIELD_NAME = ''phoneType''', FALSE, 2;



-- Add additional field definitions
INSERT THEGURU_TABLE_ADDITIONAL_FIELD
	(TABLE_NAME, FIELD_TEXT, FIELD_ALIAS)
SELECT
	'PHONE', 'PHONE_TYPE.FIELD_VALUE', 'PHONE_TYPE';


INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'PHONE', 'Phone Information', 'Phone ID', '${COLUMN_PREFIX}PHONE_ID', 'PHONE_ID', 1;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'PHONE', 'Phone Information', 'Phone Type', 'GETPICKLISTDISPLAYVALUE(''customFieldMap[addressType]'', ${COLUMN_PREFIX}PHONE_TYPE)', 'PHONE_TYPE', 1;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'PHONE', 'Phone Information', 'Seasonal Start Date', 'CONCAT(MONTHNAME(${COLUMN_PREFIX}SEASONAL_START_DATE), ''-'', DAY(${COLUMN_PREFIX}SEASONAL_START_DATE))', 'SEASONAL_START_DATE_DISPLAY', 1;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'PHONE', 'Phone Information', 'Seasonal End Date', 'CONCAT(MONTHNAME(${COLUMN_PREFIX}SEASONAL_END_DATE), ''-'', DAY(${COLUMN_PREFIX}SEASONAL_END_DATE))', 'SEASONAL_END_DATE_DISPLAY', 1;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'PHONE', 'Phone Information', 'Comments', '${COLUMN_PREFIX}COMMENT', 'COMMENT', 1;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'PHONE', 'Phone Information', 'Phone Create Date', '${COLUMN_PREFIX}CREATE_DATE', 'CREATE_DATE', 4;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'PHONE', 'Phone Information', 'Phone Update Date', '${COLUMN_PREFIX}UPDATE_DATE', 'UPDATE_DATE', 4;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'PHONE', 'Phone Information', 'Primary Phone', '${COLUMN_PREFIX}IS_PRIMARY', 'IS_PRIMARY', 6;

INSERT THEGURU_TABLE_FIELD_EXCLUSIONS
	(TABLE_NAME, FIELD_NAME)
SELECT
	'PHONE', 'customFieldMap[phoneType]';

INSERT THEGURU_TABLE_FIELD_EXCLUSIONS
	(TABLE_NAME, FIELD_NAME)
SELECT
	'PHONE', 'seasonalStartDate';

INSERT THEGURU_TABLE_FIELD_EXCLUSIONS
	(TABLE_NAME, FIELD_NAME)
SELECT
	'PHONE', 'seasonalEndDate';






-- VW_V2_PLEDGES
INSERT THEGURU_VIEW
	(VIEW_NAME, VIEW_DISPLAY_TEXT, PRIMARY_TABLE, PRIMARY_TABLE_IS_VIEW, PRIMARY_TABLE_ALIAS, PRIMARY_TABLE_COLUMN_PREFIX, INCLUDE_ALL_FIELDS, SORT_ORDER, DEFAULT_PAGE_TYPE)
SELECT
	'VW_V2_PLEDGES', 'Pledges', 'PLEDGE', FALSE, 'PLEDGE', 'PLEDGE_', TRUE, 135, 'pledge';

SET @VIEW_ID = LAST_INSERT_ID();

INSERT THEGURU_VIEW_JOIN
	(VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX)
SELECT
	@VIEW_ID, 'LEFT', 'SCHEDULED_ITEM', FALSE, 'SCHEDULED_ITEM', 'SCHEDULED_ITEM_', 'SCHEDULED_ITEM.SOURCE_ENTITY_ID = PLEDGE.PLEDGE_ID AND SCHEDULED_ITEM.SOURCE_ENTITY = ''pledge''', TRUE, 1, 'Pledge Payment ';

INSERT THEGURU_VIEW_JOIN
	(VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX)
SELECT
	@VIEW_ID, 'LEFT', 'SCHEDULED_ITEM', FALSE, 'SCHEDULED_ITEM_REMINDER', 'SCHEDULED_ITEM_REMINDER_', 'SCHEDULED_ITEM_REMINDER.SOURCE_ENTITY_ID = SCHEDULED_ITEM.SCHEDULED_ITEM_ID AND SCHEDULED_ITEM_REMINDER.SOURCE_ENTITY = ''scheduleditem''', TRUE, 2, 'Pledge Reminder ';


INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'PLEDGE', 'Pledge Information', 'Pledge ID', '${COLUMN_PREFIX}PLEDGE_ID', 'PLEDGE_ID', 1;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'PLEDGE', 'Pledge Information', 'Account Number', 'GETCONSTITUENTACCOUNTNUMBER(${COLUMN_PREFIX}CONSTITUENT_ID)', 'ACCOUNT_NUMBER', 2;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'PLEDGE', 'Pledge Information', 'Account Name', 'GETCONSTITUENTDISPLAYNAME(${COLUMN_PREFIX}CONSTITUENT_ID)', 'ACCOUNT_NAME', 1;



-- VW_V2_PLEDGES
INSERT THEGURU_VIEW
	(VIEW_NAME, VIEW_DISPLAY_TEXT, PRIMARY_TABLE, PRIMARY_TABLE_IS_VIEW, PRIMARY_TABLE_ALIAS, PRIMARY_TABLE_COLUMN_PREFIX, INCLUDE_ALL_FIELDS, SORT_ORDER, DEFAULT_PAGE_TYPE)
SELECT
	'VW_V2_PLEDGES_DISTRIBUTIONS', 'Pledges & Distributions', 'PLEDGE', FALSE, 'PLEDGE', 'PLEDGE_', TRUE, 140, 'pledge';

SET @VIEW_ID = LAST_INSERT_ID();

INSERT THEGURU_VIEW_JOIN
    (VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX, FIELD_GROUP_OVERRIDE, PARENT_ENTITY_TYPE, SUB_FIELD_NAME)
SELECT
	@VIEW_ID, 'LEFT', 'DISTRO_LINE', FALSE, 'DISTRO_LINE', 'DISTRO_LINE_', 'PLEDGE.PLEDGE_ID = DISTRO_LINE.PLEDGE_ID', TRUE, 1, '', 'Pledge Distribution Information', 'pledge', 'distributionLines';

INSERT THEGURU_VIEW_JOIN
	(VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX)
SELECT
	@VIEW_ID, 'LEFT', 'SCHEDULED_ITEM', FALSE, 'SCHEDULED_ITEM', 'SCHEDULED_ITEM_', 'SCHEDULED_ITEM.SOURCE_ENTITY_ID = PLEDGE.PLEDGE_ID AND SCHEDULED_ITEM.SOURCE_ENTITY = ''pledge''', TRUE, 2, 'Pledge Payment ';

INSERT THEGURU_VIEW_JOIN
	(VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX)
SELECT
	@VIEW_ID, 'LEFT', 'SCHEDULED_ITEM', FALSE, 'SCHEDULED_ITEM_REMINDER', 'SCHEDULED_ITEM_REMINDER_', 'SCHEDULED_ITEM_REMINDER.SOURCE_ENTITY_ID = SCHEDULED_ITEM.SCHEDULED_ITEM_ID AND SCHEDULED_ITEM_REMINDER.SOURCE_ENTITY = ''scheduleditem''', TRUE, 3, 'Pledge Reminder ';




-- VW_V2_RECURRINGGIFTS
INSERT THEGURU_VIEW
	(VIEW_NAME, VIEW_DISPLAY_TEXT, PRIMARY_TABLE, PRIMARY_TABLE_IS_VIEW, PRIMARY_TABLE_ALIAS, PRIMARY_TABLE_COLUMN_PREFIX, INCLUDE_ALL_FIELDS, SORT_ORDER, DEFAULT_PAGE_TYPE)
SELECT
	'VW_V2_RECURRINGGIFTS', 'Recurring Gifts', 'RECURRING_GIFT', FALSE, 'RECURRING_GIFT', 'RECURRING_GIFT_', TRUE, 150, 'recurringGift';

SET @VIEW_ID = LAST_INSERT_ID();


INSERT THEGURU_VIEW_JOIN
	(VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX, FIELD_GROUP_OVERRIDE)
SELECT
	@VIEW_ID, 'LEFT', 'PAYMENT_SOURCE', FALSE, 'PAYMENT_SOURCE', 'RECURRING_GIFT_PAYMENT_SOURCE_', 'RECURRING_GIFT.PAYMENT_SOURCE_ID = PAYMENT_SOURCE.PAYMENT_SOURCE_ID', TRUE, 1, '', 'Recurring Gift Payment Information';

INSERT THEGURU_VIEW_JOIN
	(VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX, FIELD_GROUP_OVERRIDE, DEFAULT_PAGE_TYPE)
SELECT
	@VIEW_ID, 'LEFT', 'ADDRESS', FALSE, 'RECURRING_GIFT_PAYMENT_ADDRESS', 'RECURRING_GIFT_PAYMENT_ADDRESS_', 'RECURRING_GIFT.ADDRESS_ID = RECURRING_GIFT_PAYMENT_ADDRESS.ADDRESS_ID', TRUE, 2, 'Recurring Gift Payment ', '', 'addressManagerEdit';

INSERT THEGURU_VIEW_JOIN
	(VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX, FIELD_GROUP_OVERRIDE)
SELECT
	@VIEW_ID, 'LEFT', 'CUSTOM_FIELD', FALSE, 'ADDRESS_TYPE', 'ADDRESS_', 'ADDRESS_TYPE.ENTITY_TYPE = ''address'' AND RECURRING_GIFT_PAYMENT_ADDRESS.ADDRESS_ID = ADDRESS_TYPE.ENTITY_ID AND ADDRESS_TYPE.FIELD_NAME = ''addressType''', FALSE, 3, '', '';

INSERT THEGURU_VIEW_JOIN
	(VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX, FIELD_GROUP_OVERRIDE, DEFAULT_PAGE_TYPE)
SELECT
	@VIEW_ID, 'LEFT', 'PHONE', FALSE, 'RECURRING_GIFT_PAYMENT_PHONE', 'RECURRING_GIFT_PAYMENT_PHONE_', 'RECURRING_GIFT.PHONE_ID = RECURRING_GIFT_PAYMENT_PHONE.PHONE_ID', TRUE, 4, 'Recurring Gift Payment ', '', 'phoneManagerEdit';

INSERT THEGURU_VIEW_JOIN
	(VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER)
SELECT
	@VIEW_ID, 'LEFT', 'CUSTOM_FIELD', FALSE, 'PHONE_TYPE', 'PHONE_', 'PHONE_TYPE.ENTITY_TYPE = ''phone'' AND PHONE_TYPE.ENTITY_ID = RECURRING_GIFT_PAYMENT_PHONE.PHONE_ID AND PHONE_TYPE.FIELD_NAME = ''phoneType''', FALSE, 5;

INSERT THEGURU_VIEW_JOIN
	(VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX)
SELECT
	@VIEW_ID, 'LEFT', 'SCHEDULED_ITEM', FALSE, 'SCHEDULED_ITEM', 'SCHEDULED_ITEM_', 'SCHEDULED_ITEM.SOURCE_ENTITY_ID = RECURRING_GIFT.RECURRING_GIFT_ID AND SCHEDULED_ITEM.SOURCE_ENTITY = ''recurringgift''', TRUE, 6, 'Recurring Gift Payment ';

INSERT THEGURU_VIEW_JOIN
	(VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX)
SELECT
	@VIEW_ID, 'LEFT', 'SCHEDULED_ITEM', FALSE, 'SCHEDULED_ITEM_REMINDER', 'SCHEDULED_ITEM_REMINDER_', 'SCHEDULED_ITEM_REMINDER.SOURCE_ENTITY_ID = SCHEDULED_ITEM.SCHEDULED_ITEM_ID AND SCHEDULED_ITEM_REMINDER.SOURCE_ENTITY = ''scheduleditem''', TRUE, 7, 'Recurring Gift Reminder ';




INSERT THEGURU_TABLE_FIELD_EXCLUSIONS
	(TABLE_NAME, FIELD_NAME)
SELECT
	'RECURRING_GIFT', 'PAYMENT_TYPE';

INSERT THEGURU_TABLE_FIELD_EXCLUSIONS
	(TABLE_NAME, FIELD_NAME)
SELECT
	'RECURRING_GIFT', 'AMOUNT_TOTAL';

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'RECURRING_GIFT', 'Recurring Gift Information', 'Amount Total', '${COLUMN_PREFIX}AMOUNT_TOTAL', 'AMOUNT_TOTAL', 2;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'RECURRING_GIFT', 'Recurring Gift Information', 'Account Number', 'GETCONSTITUENTACCOUNTNUMBER(${COLUMN_PREFIX}CONSTITUENT_ID)', 'ACCOUNT_NUMBER', 2;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'RECURRING_GIFT', 'Recurring Gift Information', 'Account Name', 'GETCONSTITUENTDISPLAYNAME(${COLUMN_PREFIX}CONSTITUENT_ID)', 'ACCOUNT_NAME', 1;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'RECURRING_GIFT', 'Recurring Gift Information', 'Recurring Gift Create Date', '${COLUMN_PREFIX}CREATE_DATE', 'CREATE_DATE', 4;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'RECURRING_GIFT', 'Recurring Gift Information', 'Recurring Gift Update Date', '${COLUMN_PREFIX}UPDATE_DATE', 'UPDATE_DATE', 4;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'RECURRING_GIFT', 'Recurring Gift Information', 'Recurring Gift ID', '${COLUMN_PREFIX}RECURRING_GIFT_ID', 'RECURRING_GIFT_ID', 2;

INSERT THEGURU_FIELD_FIELDGROUP_OVERRIDE
    (ALIAS_NAME, FIELD_GROUP_OVERRIDE)
SELECT
    'RECURRING_GIFT_ADDITIONALINFO', 'Recurring Gift Payment Information';

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'SCHEDULED_ITEM', 'Schedule Information', 'Original Scheduled Date', '${COLUMN_PREFIX}ORIGINAL_SCHEDULED_DATE', 'ORIGINAL_SCHEDULED_DATE', 4;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'SCHEDULED_ITEM', 'Schedule Information', 'Actual Scheduled Date', '${COLUMN_PREFIX}ACTUAL_SCHEDULED_DATE', 'ACTUAL_SCHEDULED_DATE', 4;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'SCHEDULED_ITEM', 'Schedule Information', 'Amount', '${COLUMN_PREFIX}SCHEDULED_ITEM_AMOUNT', 'SCHEDULED_ITEM_AMOUNT', 5;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'SCHEDULED_ITEM', 'Schedule Information', 'Completion Date', '${COLUMN_PREFIX}COMPLETION_DATE', 'COMPLETION_DATE', 4;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'SCHEDULED_ITEM', 'Schedule Information', 'Completion Status', '${COLUMN_PREFIX}COMPLETION_STATUS', 'COMPLETION_STATUS', 1;





INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'PAYMENT_SOURCE', 'Payment Information', 'Account Number', 'GETCONSTITUENTACCOUNTNUMBER(${COLUMN_PREFIX}CONSTITUENT_ID)', 'ACCOUNT_NUMBER', 2;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'PAYMENT_SOURCE', 'Payment Information', 'Account Name', 'GETCONSTITUENTDISPLAYNAME(${COLUMN_PREFIX}CONSTITUENT_ID)', 'ACCOUNT_NAME', 1;

INSERT THEGURU_TABLE_FIELD_EXCLUSIONS
	(TABLE_NAME, FIELD_NAME)
SELECT
	'PAYMENT_SOURCE', 'ACH_ACCOUNT_NUMBER';

INSERT THEGURU_TABLE_FIELD_EXCLUSIONS
	(TABLE_NAME, FIELD_NAME)
SELECT
	'PAYMENT_SOURCE', 'CHECK_ACCOUNT_NUMBER';

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'PAYMENT_SOURCE', 'Payment Information', 'Credit Card / ACH / Check Account Number - Last 4 Digits', '${COLUMN_PREFIX}LAST_FOUR_DIGITS', 'LAST_FOUR_DIGITS', 1;

INSERT THEGURU_TABLE_FIELD_EXCLUSIONS
	(TABLE_NAME, FIELD_NAME)
SELECT
	'PAYMENT_SOURCE', 'ACH_ROUTING_NUMBER';

INSERT THEGURU_TABLE_FIELD_EXCLUSIONS
	(TABLE_NAME, FIELD_NAME)
SELECT
	'PAYMENT_SOURCE', 'CHECK_ROUTING_NUMBER';

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'PAYMENT_SOURCE', 'Payment Information', 'Payment Source Reference Number', '${COLUMN_PREFIX}PAYMENT_SOURCE_ID', 'PAYMENT_SOURCE_ID', 2;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'PAYMENT_SOURCE', 'Payment Information', 'ACH Routing Number', 'CONCAT(''****'', RIGHT(${COLUMN_PREFIX}ACH_ROUTING_NUMBER, 4))', 'ACH_ROUTING_NUMBER', 1;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'PAYMENT_SOURCE', 'Payment Information', 'Check Routing Number', 'CONCAT(''****'', RIGHT(${COLUMN_PREFIX}CHECK_ROUTING_NUMBER, 4))', 'CHECK_ROUTING_NUMBER', 1;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'PAYMENT_SOURCE', 'Payment Information', 'Credit Card Expiration', 'CONCAT(MONTH(${COLUMN_PREFIX}CREDIT_CARD_EXPIRATION), ''/'', YEAR(${COLUMN_PREFIX}CREDIT_CARD_EXPIRATION))', 'CREDIT_CARD_EXPIRATION_DISPLAY', 1;

-- Exclude CREDIT_CARD_EXPIRATION to use a different display name
INSERT THEGURU_TABLE_FIELD_EXCLUSIONS
	(TABLE_NAME, FIELD_NAME)
SELECT
	'PAYMENT_SOURCE', 'CREDIT_CARD_EXPIRATION';

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'PAYMENT_SOURCE', 'Payment Information', 'Credit Card Expiration (Date / Time)', '${COLUMN_PREFIX}CREDIT_CARD_EXPIRATION', 'CREDIT_CARD_EXPIRATION', 4;


INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'PAYMENT_SOURCE', 'Payment Information', 'Payment Profile Description', '${COLUMN_PREFIX}PAYMENT_PROFILE', 'PAYMENT_PROFILE', 1;




-- VW_V2_RECURRINGGIFTS
INSERT THEGURU_VIEW
	(VIEW_NAME, VIEW_DISPLAY_TEXT, PRIMARY_TABLE, PRIMARY_TABLE_IS_VIEW, PRIMARY_TABLE_ALIAS, PRIMARY_TABLE_COLUMN_PREFIX, INCLUDE_ALL_FIELDS, SORT_ORDER, DEFAULT_PAGE_TYPE)
SELECT
	'VW_V2_RECURRINGGIFTS_DISTRIBUTIONS', 'Recurring Gifts & Distributions', 'VW_V2_RECURRINGGIFTS', TRUE, 'RECURRING_GIFT', '', TRUE, 160, 'recurringGift';

SET @VIEW_ID = LAST_INSERT_ID();


INSERT THEGURU_VIEW_JOIN
    (VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX, FIELD_GROUP_OVERRIDE, PARENT_ENTITY_TYPE, SUB_FIELD_NAME)
SELECT
	@VIEW_ID, 'LEFT', 'DISTRO_LINE', FALSE, 'DISTRO_LINE', 'DISTRO_LINE_', 'RECURRING_GIFT.RECURRING_GIFT_RECURRING_GIFT_ID = DISTRO_LINE.RECURRING_GIFT_ID', TRUE, 1, '', 'Recurring Gift Distribution Information', 'recurringGift', 'distributionLines';



-- VW_V2_GIFTS
INSERT THEGURU_VIEW
	(VIEW_NAME, VIEW_DISPLAY_TEXT, PRIMARY_TABLE, PRIMARY_TABLE_IS_VIEW, PRIMARY_TABLE_ALIAS, PRIMARY_TABLE_COLUMN_PREFIX, INCLUDE_ALL_FIELDS, SORT_ORDER, DEFAULT_PAGE_TYPE)
SELECT
	'VW_V2_GIFTS', 'Gifts', 'GIFT', FALSE, 'VW_V2_GIFTS', 'GIFT_', TRUE, 170, 'gift';

SET @VIEW_ID = LAST_INSERT_ID();


INSERT THEGURU_VIEW_JOIN
    (VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX, FIELD_GROUP_OVERRIDE, PARENT_ENTITY_TYPE, SUB_FIELD_NAME)
SELECT
	@VIEW_ID, 'LEFT', 'PAYMENT_SOURCE', FALSE, 'PAYMENT_SOURCE', 'GIFT_PAYMENT_SOURCE_', 'VW_V2_GIFTS.PAYMENT_SOURCE_ID = PAYMENT_SOURCE.PAYMENT_SOURCE_ID', TRUE, 1, '', 'Payment Information', '', '';

INSERT THEGURU_VIEW_JOIN
	(VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX, DEFAULT_PAGE_TYPE)
SELECT
	@VIEW_ID, 'LEFT', 'ADDRESS', FALSE, 'GIFT_PAYMENT_ADDRESS', 'GIFT_PAYMENT_ADDRESS_', 'VW_V2_GIFTS.ADDRESS_ID = GIFT_PAYMENT_ADDRESS.ADDRESS_ID', TRUE, 2, 'Payment ', 'addressManagerEdit';

INSERT THEGURU_VIEW_JOIN
	(VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER)
SELECT
	@VIEW_ID, 'LEFT', 'CUSTOM_FIELD', FALSE, 'ADDRESS_TYPE', 'GIFT_PAYMENT_ADDRESS_', 'ADDRESS_TYPE.ENTITY_TYPE = ''address'' AND GIFT_PAYMENT_ADDRESS.ADDRESS_ID = ADDRESS_TYPE.ENTITY_ID AND ADDRESS_TYPE.FIELD_NAME = ''addressType''', FALSE, 3;

INSERT THEGURU_VIEW_JOIN
	(VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX, DEFAULT_PAGE_TYPE)
SELECT
	@VIEW_ID, 'LEFT', 'PHONE', FALSE, 'GIFT_PAYMENT_PHONE', 'GIFT_PAYMENT_PHONE_', 'VW_V2_GIFTS.PHONE_ID = GIFT_PAYMENT_PHONE.PHONE_ID', TRUE, 4, 'Payment ', 'phoneManagerEdit';

INSERT THEGURU_VIEW_JOIN
	(VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER)
SELECT
	@VIEW_ID, 'LEFT', 'CUSTOM_FIELD', FALSE, 'PHONE_TYPE', 'GIFT_PAYMENT_PHONE_', 'PHONE_TYPE.ENTITY_TYPE = ''phone'' AND PHONE_TYPE.ENTITY_ID = GIFT_PAYMENT_PHONE.PHONE_ID AND PHONE_TYPE.FIELD_NAME = ''phoneType''', FALSE, 5;

INSERT THEGURU_VIEW_JOIN
	(VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX, FIELD_GROUP_OVERRIDE, PARENT_ENTITY_TYPE, SUB_FIELD_NAME)
SELECT
	@VIEW_ID, 'LEFT', 'DISTRO_LINE', FALSE, 'DISTRO_LINE', 'DISTRO_LINE_', 'DISTRO_LINE.GIFT_ID = VW_V2_GIFTS.GIFT_ID', FALSE, 6, '', 'Gift Distribution Information', 'gift', 'distributionLines';

INSERT THEGURU_VIEW_JOIN
    (VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX, FIELD_GROUP_OVERRIDE, PARENT_ENTITY_TYPE, SUB_FIELD_NAME)
SELECT
	@VIEW_ID, 'LEFT', 'CUSTOM_FIELD', FALSE, 'CUSTOM_FIELD_ASSOCIATEDPLEDGE', 'CUSTOM_FIELD_ASSOCIATEDPLEDGE_', 'CUSTOM_FIELD_ASSOCIATEDPLEDGE.FIELD_NAME = ''associatedPledgeId'' AND CUSTOM_FIELD_ASSOCIATEDPLEDGE.ENTITY_TYPE = ''distributionline'' AND DISTRO_LINE.DISTRO_LINE_ID = CUSTOM_FIELD_ASSOCIATEDPLEDGE.ENTITY_ID', FALSE, 7, '', '', '', '';

INSERT THEGURU_VIEW_JOIN
    (VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX, FIELD_GROUP_OVERRIDE, PARENT_ENTITY_TYPE, SUB_FIELD_NAME)
SELECT
	@VIEW_ID, 'LEFT', 'VW_V2_PLEDGES_DISTRIBUTIONS', TRUE, 'VW_V2_PLEDGES_DISTRIBUTIONS', 'VW_V2_PLDGDIST_', 'VW_V2_PLEDGES_DISTRIBUTIONS.PLEDGE_PLEDGE_ID = CUSTOM_FIELD_ASSOCIATEDPLEDGE.FIELD_VALUE', TRUE, 8, 'Associated ', '', '', '';

INSERT THEGURU_VIEW_JOIN
    (VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX, FIELD_GROUP_OVERRIDE, PARENT_ENTITY_TYPE, SUB_FIELD_NAME)
SELECT
	@VIEW_ID, 'LEFT', 'CUSTOM_FIELD', FALSE, 'CUSTOM_FIELD_ASSOCIATEDRECURRINGGIFT', 'CUSTOM_FIELD_ASSOCIATEDRECURRINGGIFT_', 'CUSTOM_FIELD_ASSOCIATEDRECURRINGGIFT.FIELD_NAME = ''associatedRecurringGiftId'' AND CUSTOM_FIELD_ASSOCIATEDRECURRINGGIFT.ENTITY_TYPE = ''distributionline'' AND DISTRO_LINE.DISTRO_LINE_ID = CUSTOM_FIELD_ASSOCIATEDRECURRINGGIFT.ENTITY_ID', FALSE, 9, '', '', '', '';

INSERT THEGURU_VIEW_JOIN
    (VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX, FIELD_GROUP_OVERRIDE, PARENT_ENTITY_TYPE, SUB_FIELD_NAME)
SELECT
	@VIEW_ID, 'LEFT', 'VW_V2_RECURRINGGIFTS_DISTRIBUTIONS', TRUE, 'VW_V2_RECURRINGGIFTS_DISTRIBUTIONS', 'VW_RGD_', 'VW_V2_RECURRINGGIFTS_DISTRIBUTIONS.RECURRING_GIFT_RECURRING_GIFT_ID = CUSTOM_FIELD_ASSOCIATEDRECURRINGGIFT.FIELD_VALUE', TRUE, 10, 'Associated ', '', '', '';


INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'GIFT', 'Payment Status', 'Payment Reference Number', '${COLUMN_PREFIX}PAYMENT_TXREFNUM', 'PAYMENT_TXREFNUM', 1;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'GIFT', 'Donation Information', 'Posted Short Display Name', 'GETPICKLISTDISPLAYVALUE(''posted'', CASE WHEN ${COLUMN_PREFIX}POSTED = 1 THEN ''true'' WHEN ${COLUMN_PREFIX}POSTED = 0 THEN ''false'' ELSE NULL END)', 'POSTED_SHORT_DISPLAY_NAME', 1;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'GIFT', 'Donation Information', 'Posted Long Display Name', 'GETPICKLISTLONGDESCRIPTION(''posted'', CASE WHEN ${COLUMN_PREFIX}POSTED = 1 THEN ''true'' WHEN ${COLUMN_PREFIX}POSTED = 0 THEN ''false'' ELSE NULL END)', 'POSTED_LONG_DISPLAY_NAME', 1;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'GIFT', 'Donation Information', 'Posted Description', 'GETPICKLISTDETAIL(''posted'', CASE WHEN ${COLUMN_PREFIX}POSTED = 1 THEN ''true'' WHEN ${COLUMN_PREFIX}POSTED = 0 THEN ''false'' ELSE NULL END)', 'POSTED_DESCRIPTION', 1;

INSERT THEGURU_TABLE_FIELD_EXCLUSIONS
	(TABLE_NAME, FIELD_NAME)
SELECT
	'GIFT', 'POSTED';


INSERT THEGURU_TABLE_FIELD_EXCLUSIONS
	(TABLE_NAME, FIELD_NAME)
SELECT
	'VW_V2_GIFTS', 'GIFT_PAYMENT_SOURCE_PAYMENT_TYPE_DESCRIPTION';

INSERT THEGURU_TABLE_FIELD_EXCLUSIONS
	(TABLE_NAME, FIELD_NAME)
SELECT
	'VW_V2_GIFTS', 'GIFT_PAYMENT_SOURCE_PAYMENT_TYPE_LONG_DISPLAY_NAME';

INSERT THEGURU_TABLE_FIELD_EXCLUSIONS
	(TABLE_NAME, FIELD_NAME)
SELECT
	'VW_V2_GIFTS', 'GIFT_PAYMENT_SOURCE_PAYMENT_TYPE_SHORT_DISPLAY_NAME';

INSERT THEGURU_TABLE_FIELD_EXCLUSIONS
	(TABLE_NAME, FIELD_NAME)
SELECT
	'VW_V2_GIFTS_DISTRIBUTIONS', 'GIFT_PAYMENT_SOURCE_PAYMENT_TYPE_DESCRIPTION';

INSERT THEGURU_TABLE_FIELD_EXCLUSIONS
	(TABLE_NAME, FIELD_NAME)
SELECT
	'VW_V2_GIFTS_DISTRIBUTIONS', 'GIFT_PAYMENT_SOURCE_PAYMENT_TYPE_LONG_DISPLAY_NAME';

INSERT THEGURU_TABLE_FIELD_EXCLUSIONS
	(TABLE_NAME, FIELD_NAME)
SELECT
	'VW_V2_GIFTS_DISTRIBUTIONS', 'GIFT_PAYMENT_SOURCE_PAYMENT_TYPE_SHORT_DISPLAY_NAME';

INSERT THEGURU_TABLE_FIELD_EXCLUSIONS
	(TABLE_NAME, FIELD_NAME)
SELECT
	'VW_V2_CONSTITUENTS_GIFTS', 'GIFT_PAYMENT_SOURCE_PAYMENT_TYPE_DESCRIPTION';

INSERT THEGURU_TABLE_FIELD_EXCLUSIONS
	(TABLE_NAME, FIELD_NAME)
SELECT
	'VW_V2_CONSTITUENTS_GIFTS', 'GIFT_PAYMENT_SOURCE_PAYMENT_TYPE_LONG_DISPLAY_NAME';

INSERT THEGURU_TABLE_FIELD_EXCLUSIONS
	(TABLE_NAME, FIELD_NAME)
SELECT
	'VW_V2_CONSTITUENTS_GIFTS', 'GIFT_PAYMENT_SOURCE_PAYMENT_TYPE_SHORT_DISPLAY_NAME';

INSERT THEGURU_TABLE_FIELD_EXCLUSIONS
	(TABLE_NAME, FIELD_NAME)
SELECT
	'VW_V2_CONSTITUENTS_GIFTDISTRIBUTIONS', 'GIFT_PAYMENT_SOURCE_PAYMENT_TYPE_DESCRIPTION';

INSERT THEGURU_TABLE_FIELD_EXCLUSIONS
	(TABLE_NAME, FIELD_NAME)
SELECT
	'VW_V2_CONSTITUENTS_GIFTDISTRIBUTIONS', 'GIFT_PAYMENT_SOURCE_PAYMENT_TYPE_LONG_DISPLAY_NAME';

INSERT THEGURU_TABLE_FIELD_EXCLUSIONS
	(TABLE_NAME, FIELD_NAME)
SELECT
	'VW_V2_CONSTITUENTS_GIFTDISTRIBUTIONS', 'GIFT_PAYMENT_SOURCE_PAYMENT_TYPE_SHORT_DISPLAY_NAME';




INSERT THEGURU_FIELD_FIELDGROUP_OVERRIDE
    (ALIAS_NAME, FIELD_GROUP_OVERRIDE)
SELECT
    'GIFT_CHECK_NUMBER', 'Payment Information';

INSERT THEGURU_FIELD_FIELDGROUP_OVERRIDE
    (ALIAS_NAME, FIELD_GROUP_OVERRIDE)
SELECT
    'GIFT_CHECK_DATE', 'Payment Information';

INSERT THEGURU_FIELD_FIELDGROUP_OVERRIDE
    (ALIAS_NAME, FIELD_GROUP_OVERRIDE)
SELECT
    'VW_RGD_RECURRING_GIFT_ADDITIONALINFO', 'Recurring Gift Payment Information';




-- Only difference between VW_V2_GIFTS & VW_V2_GIFTS_DISTRIBUTIONS is that the include all fields flag is set to true on the DISTRO_LINE table
-- The VW_V2_GIFTS needed to join to DISTRO_LINE to link to the pledges and recurring gifts
-- VW_V2_GIFTS_DISTRIBUTIONS
INSERT THEGURU_VIEW
	(VIEW_NAME, VIEW_DISPLAY_TEXT, PRIMARY_TABLE, PRIMARY_TABLE_IS_VIEW, PRIMARY_TABLE_ALIAS, PRIMARY_TABLE_COLUMN_PREFIX, INCLUDE_ALL_FIELDS, SORT_ORDER, DEFAULT_PAGE_TYPE)
SELECT
	'VW_V2_GIFTS_DISTRIBUTIONS', 'Gifts & Distributions', 'GIFT', FALSE, 'VW_V2_GIFTS', 'GIFT_', TRUE, 170, 'gift';

SET @VIEW_ID = LAST_INSERT_ID();


INSERT THEGURU_VIEW_JOIN
    (VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX, FIELD_GROUP_OVERRIDE, PARENT_ENTITY_TYPE, SUB_FIELD_NAME)
SELECT
	@VIEW_ID, 'LEFT', 'PAYMENT_SOURCE', FALSE, 'PAYMENT_SOURCE', 'GIFT_PAYMENT_SOURCE_', 'VW_V2_GIFTS.PAYMENT_SOURCE_ID = PAYMENT_SOURCE.PAYMENT_SOURCE_ID', TRUE, 1, '', 'Payment Information', '', '';

INSERT THEGURU_VIEW_JOIN
	(VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX, DEFAULT_PAGE_TYPE)
SELECT
	@VIEW_ID, 'LEFT', 'ADDRESS', FALSE, 'GIFT_PAYMENT_ADDRESS', 'GIFT_PAYMENT_ADDRESS_', 'VW_V2_GIFTS.ADDRESS_ID = GIFT_PAYMENT_ADDRESS.ADDRESS_ID', TRUE, 2, 'Payment ', 'addressManagerEdit';

INSERT THEGURU_VIEW_JOIN
	(VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER)
SELECT
	@VIEW_ID, 'LEFT', 'CUSTOM_FIELD', FALSE, 'ADDRESS_TYPE', 'GIFT_PAYMENT_ADDRESS_', 'ADDRESS_TYPE.ENTITY_TYPE = ''address'' AND GIFT_PAYMENT_ADDRESS.ADDRESS_ID = ADDRESS_TYPE.ENTITY_ID AND ADDRESS_TYPE.FIELD_NAME = ''addressType''', FALSE, 3;

INSERT THEGURU_VIEW_JOIN
	(VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX, DEFAULT_PAGE_TYPE)
SELECT
	@VIEW_ID, 'LEFT', 'PHONE', FALSE, 'GIFT_PAYMENT_PHONE', 'GIFT_PAYMENT_PHONE_', 'VW_V2_GIFTS.PHONE_ID = GIFT_PAYMENT_PHONE.PHONE_ID', TRUE, 4, 'Payment ', 'phoneManagerEdit';

INSERT THEGURU_VIEW_JOIN
	(VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER)
SELECT
	@VIEW_ID, 'LEFT', 'CUSTOM_FIELD', FALSE, 'PHONE_TYPE', 'GIFT_PAYMENT_PHONE_', 'PHONE_TYPE.ENTITY_TYPE = ''phone'' AND PHONE_TYPE.ENTITY_ID = GIFT_PAYMENT_PHONE.PHONE_ID AND PHONE_TYPE.FIELD_NAME = ''phoneType''', FALSE, 5;

INSERT THEGURU_VIEW_JOIN
	(VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX, FIELD_GROUP_OVERRIDE, PARENT_ENTITY_TYPE, SUB_FIELD_NAME)
SELECT
	@VIEW_ID, 'LEFT', 'DISTRO_LINE', FALSE, 'DISTRO_LINE', 'DISTRO_LINE_', 'DISTRO_LINE.GIFT_ID = VW_V2_GIFTS.GIFT_ID', TRUE, 6, '', 'Donation Distribution Information', 'gift', 'distributionLines';

INSERT THEGURU_VIEW_JOIN
    (VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX, FIELD_GROUP_OVERRIDE, PARENT_ENTITY_TYPE, SUB_FIELD_NAME)
SELECT
	@VIEW_ID, 'LEFT', 'CUSTOM_FIELD', FALSE, 'CUSTOM_FIELD_ASSOCIATEDPLEDGE', 'CUSTOM_FIELD_ASSOCIATEDPLEDGE_', 'CUSTOM_FIELD_ASSOCIATEDPLEDGE.FIELD_NAME = ''associatedPledgeId'' AND CUSTOM_FIELD_ASSOCIATEDPLEDGE.ENTITY_TYPE = ''distributionline'' AND DISTRO_LINE.DISTRO_LINE_ID = CUSTOM_FIELD_ASSOCIATEDPLEDGE.ENTITY_ID', FALSE, 7, '', '', '', '';

INSERT THEGURU_VIEW_JOIN
    (VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX, FIELD_GROUP_OVERRIDE, PARENT_ENTITY_TYPE, SUB_FIELD_NAME)
SELECT
	@VIEW_ID, 'LEFT', 'VW_V2_PLEDGES_DISTRIBUTIONS', TRUE, 'VW_V2_PLEDGES_DISTRIBUTIONS', 'VW_V2_PLDGDIST_', 'VW_V2_PLEDGES_DISTRIBUTIONS.PLEDGE_PLEDGE_ID = CUSTOM_FIELD_ASSOCIATEDPLEDGE.FIELD_VALUE', TRUE, 8, 'Associated ', '', '', '';

INSERT THEGURU_VIEW_JOIN
    (VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX, FIELD_GROUP_OVERRIDE, PARENT_ENTITY_TYPE, SUB_FIELD_NAME)
SELECT
	@VIEW_ID, 'LEFT', 'CUSTOM_FIELD', FALSE, 'CUSTOM_FIELD_ASSOCIATEDRECURRINGGIFT', 'CUSTOM_FIELD_ASSOCIATEDRECURRINGGIFT_', 'CUSTOM_FIELD_ASSOCIATEDRECURRINGGIFT.FIELD_NAME = ''associatedRecurringGiftId'' AND CUSTOM_FIELD_ASSOCIATEDRECURRINGGIFT.ENTITY_TYPE = ''distributionline'' AND DISTRO_LINE.DISTRO_LINE_ID = CUSTOM_FIELD_ASSOCIATEDRECURRINGGIFT.ENTITY_ID', FALSE, 9, '', '', '', '';

INSERT THEGURU_VIEW_JOIN
    (VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX, FIELD_GROUP_OVERRIDE, PARENT_ENTITY_TYPE, SUB_FIELD_NAME)
SELECT
	@VIEW_ID, 'LEFT', 'VW_V2_RECURRINGGIFTS_DISTRIBUTIONS', TRUE, 'VW_V2_RECURRINGGIFTS_DISTRIBUTIONS', 'VW_RGD_', 'VW_V2_RECURRINGGIFTS_DISTRIBUTIONS.RECURRING_GIFT_RECURRING_GIFT_ID = CUSTOM_FIELD_ASSOCIATEDRECURRINGGIFT.FIELD_VALUE', TRUE, 10, 'Associated ', '', '', '';


INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'GIFT', 'Donation Information', 'Gift Reference Number', '${COLUMN_PREFIX}GIFT_ID', 'GIFT_ID', 2;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'GIFT', 'Donation Information', 'Account Number', 'GETCONSTITUENTACCOUNTNUMBER(${COLUMN_PREFIX}CONSTITUENT_ID)', 'ACCOUNT_NUMBER', 2;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'GIFT', 'Donation Information', 'Account Name', 'GETCONSTITUENTDISPLAYNAME(${COLUMN_PREFIX}CONSTITUENT_ID)', 'ACCOUNT_NAME', 1;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'GIFT', 'Donation Information', 'Transaction Date', '${COLUMN_PREFIX}TRANSACTION_DATE', 'TRANSACTION_DATE', 4;




INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'DISTRO_LINE', 'Distribution Information', 'Distribution Reference Number', '${COLUMN_PREFIX}DISTRO_LINE_ID', 'DISTRO_LINE_ID', 2;

INSERT THEGURU_TABLE_FIELD_EXCLUSIONS
	(TABLE_NAME, FIELD_NAME)
SELECT
	'DISTRO_LINE', 'MOTIVATION_CODE';

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'DISTRO_LINE', 'Distribution Information', 'Motivation Short Display Name', 'IFNULL(GETPICKLISTDISPLAYVALUE(''motivationCode'', ${COLUMN_PREFIX}MOTIVATION_CODE), ${COLUMN_PREFIX}OTHER_MOTIVATION)', 'MOTIVATION_CODE_SHORT_DISPLAY_NAME', 1;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'DISTRO_LINE', 'Distribution Information', 'Motivation Long Display Name', 'GETPICKLISTLONGDESCRIPTION(''motivationCode'', ${COLUMN_PREFIX}MOTIVATION_CODE)', 'MOTIVATION_CODE_LONG_DISPLAY_NAME', 1;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'DISTRO_LINE', 'Distribution Information', 'Motivation Description', 'GETPICKLISTDETAIL(''motivationCode'', ${COLUMN_PREFIX}MOTIVATION_CODE)', 'MOTIVATION_CODE_DESCRIPTION', 1;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'DISTRO_LINE', 'Distribution Information', 'Designation ID', '${COLUMN_PREFIX}PROJECT_CODE', 'PROJECT_CODE', 1;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'DISTRO_LINE', 'Distribution Information', 'Designation GL Part 1', 'GETCUSTOMFIELD(GETPICKLISTITEMIDBYDEFAULTDISPLAYVALUE(''projectCode'', ${COLUMN_PREFIX}PROJECT_CODE), ''picklistItem'', ''01-GLPART1'')', 'PROJECT_CODE_GLPART1', 1;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'DISTRO_LINE', 'Distribution Information', 'Designation GL Part 2', 'GETCUSTOMFIELD(GETPICKLISTITEMIDBYDEFAULTDISPLAYVALUE(''projectCode'', ${COLUMN_PREFIX}PROJECT_CODE), ''picklistItem'', ''02-GLPART2'')', 'PROJECT_CODE_GLPART2', 1;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'DISTRO_LINE', 'Distribution Information', 'Designation GL Part 3', 'GETCUSTOMFIELD(GETPICKLISTITEMIDBYDEFAULTDISPLAYVALUE(''projectCode'', ${COLUMN_PREFIX}PROJECT_CODE), ''picklistItem'', ''03-GLPART3'')', 'PROJECT_CODE_GLPART3', 1;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'DISTRO_LINE', 'Distribution Information', 'Designation GL Part 4', 'GETCUSTOMFIELD(GETPICKLISTITEMIDBYDEFAULTDISPLAYVALUE(''projectCode'', ${COLUMN_PREFIX}PROJECT_CODE), ''picklistItem'', ''04-GLPART4'')', 'PROJECT_CODE_GLPART4', 1;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'DISTRO_LINE', 'Distribution Information', 'Designation GL Account Code', 'GETCUSTOMFIELD(GETPICKLISTITEMIDBYDEFAULTDISPLAYVALUE(''projectCode'', ${COLUMN_PREFIX}PROJECT_CODE), ''picklistItem'', ''GLAccountCode'')', 'PROJECT_CODE_GLACCOUNTCODE', 1;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'DISTRO_LINE', 'Distribution Information', 'Designation GL Account String 1', 'GETCUSTOMFIELD(GETPICKLISTITEMIDBYDEFAULTDISPLAYVALUE(''projectCode'', ${COLUMN_PREFIX}PROJECT_CODE), ''picklistItem'', ''AccountString1'')', 'PROJECT_CODE_GLACCOUNTSTRING1', 1;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'DISTRO_LINE', 'Distribution Information', 'Designation GL Account String 2', 'GETCUSTOMFIELD(GETPICKLISTITEMIDBYDEFAULTDISPLAYVALUE(''projectCode'', ${COLUMN_PREFIX}PROJECT_CODE), ''picklistItem'', ''AccountString2'')', 'PROJECT_CODE_GLACCOUNTSTRING2', 1;

INSERT THEGURU_TABLE_FIELD_EXCLUSIONS
	(TABLE_NAME, FIELD_NAME)
SELECT
	'DISTRO_LINE', 'distributionLines.customFieldMap[onBehalfOfReadOnly]';

INSERT THEGURU_TABLE_FIELD_EXCLUSIONS
	(TABLE_NAME, FIELD_NAME)
SELECT
	'DISTRO_LINE', 'distributionLines.customFieldMap[referenceReadOnly]';

INSERT THEGURU_TABLE_FIELD_EXCLUSIONS
	(TABLE_NAME, FIELD_NAME)
SELECT
	'DISTRO_LINE', 'distributionLines.customFieldMap[tributeReferenceReadOnly]';

INSERT THEGURU_TABLE_FIELD_EXCLUSIONS
	(TABLE_NAME, FIELD_NAME)
SELECT
	'DISTRO_LINE', 'distributionLines.customFieldMap[notifiedReadOnly]';




-- VW_V2_ADJUSTED_GIFTS_DISTRIBUTIONS
INSERT THEGURU_VIEW
	(VIEW_NAME, VIEW_DISPLAY_TEXT, PRIMARY_TABLE, PRIMARY_TABLE_IS_VIEW, PRIMARY_TABLE_ALIAS, PRIMARY_TABLE_COLUMN_PREFIX, INCLUDE_ALL_FIELDS, SORT_ORDER, DEFAULT_PAGE_TYPE)
SELECT
	'VW_V2_ADJUSTED_GIFTS_DISTRIBUTIONS', 'Adjusted Gifts & Distributions', 'ADJUSTED_GIFT', FALSE, 'ADJUSTED_GIFT', 'ADJUSTED_GIFT_', TRUE, 190, 'adjustedGift';

SET @VIEW_ID = LAST_INSERT_ID();


INSERT THEGURU_VIEW_JOIN
    (VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX, FIELD_GROUP_OVERRIDE, PARENT_ENTITY_TYPE, SUB_FIELD_NAME)
SELECT
	@VIEW_ID, 'LEFT', 'PAYMENT_SOURCE', FALSE, 'PAYMENT_SOURCE', 'ADJUSTED_GIFT_PAYMENT_SOURCE_', 'ADJUSTED_GIFT.PAYMENT_SOURCE_ID = PAYMENT_SOURCE.PAYMENT_SOURCE_ID', TRUE, 1, '', 'Adjustment Payment Information', '', '';

INSERT THEGURU_VIEW_JOIN
	(VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX, DEFAULT_PAGE_TYPE)
SELECT
	@VIEW_ID, 'LEFT', 'ADDRESS', FALSE, 'ADJUSTED_GIFT_PAYMENT_ADDRESS', 'ADJUSTED_GIFT_PAYMENT_ADDRESS_', 'ADJUSTED_GIFT.ADDRESS_ID = ADJUSTED_GIFT_PAYMENT_ADDRESS.ADDRESS_ID', TRUE, 2, 'Adjustment Payment ', 'addressManagerEdit';

INSERT THEGURU_VIEW_JOIN
	(VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER)
SELECT
	@VIEW_ID, 'LEFT', 'CUSTOM_FIELD', FALSE, 'ADDRESS_TYPE', 'ADJUSTED_GIFT_PAYMENT_ADDRESS_', 'ADDRESS_TYPE.ENTITY_TYPE = ''address'' AND ADJUSTED_GIFT_PAYMENT_ADDRESS.ADDRESS_ID = ADDRESS_TYPE.ENTITY_ID AND ADDRESS_TYPE.FIELD_NAME = ''addressType''', FALSE, 3;

INSERT THEGURU_VIEW_JOIN
	(VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX, DEFAULT_PAGE_TYPE)
SELECT
	@VIEW_ID, 'LEFT', 'PHONE', FALSE, 'ADJUSTED_GIFT_PAYMENT_PHONE', 'ADJUSTED_GIFT_PAYMENT_PHONE_', 'ADJUSTED_GIFT.PHONE_ID = ADJUSTED_GIFT_PAYMENT_PHONE.PHONE_ID', TRUE, 4, 'Adjustment Payment ', 'phoneManagerEdit';

INSERT THEGURU_VIEW_JOIN
	(VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER)
SELECT
	@VIEW_ID, 'LEFT', 'CUSTOM_FIELD', FALSE, 'PHONE_TYPE', 'ADJUSTED_GIFT_PAYMENT_PHONE_', 'PHONE_TYPE.ENTITY_TYPE = ''phone'' AND PHONE_TYPE.ENTITY_ID = ADJUSTED_GIFT_PAYMENT_PHONE.PHONE_ID AND PHONE_TYPE.FIELD_NAME = ''phoneType''', FALSE, 5;

INSERT THEGURU_VIEW_JOIN
	(VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX, FIELD_GROUP_OVERRIDE, PARENT_ENTITY_TYPE, SUB_FIELD_NAME)
SELECT
	@VIEW_ID, 'LEFT', 'DISTRO_LINE', FALSE, 'DISTRO_LINE', 'DISTRO_LINE_', 'DISTRO_LINE.ADJUSTED_GIFT_ID = ADJUSTED_GIFT.ADJUSTED_GIFT_ID', TRUE, 6, '', 'Adjustment Distribution Information', 'gift', 'distributionLines';



INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'ADJUSTED_GIFT', 'Adjustment Information', 'Current Total Adjustment Amount', '(SELECT SUM(ADJUSTED_AMOUNT) FROM ADJUSTED_GIFT ADJUSTED_GIFT_TOTAL WHERE ADJUSTED_GIFT_TOTAL.GIFT_ID = ${COLUMN_PREFIX}GIFT_ID)', 'ADJUSTED_GIFT_AMOUNT_TOTAL', 2;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'ADJUSTED_GIFT', 'Adjustment Information', 'Gift Adjustment Reference Number', '${COLUMN_PREFIX}ADJUSTED_GIFT_ID', 'ADJUSTED_GIFT_ID', 2;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'ADJUSTED_GIFT', 'Adjustment Information', 'Account Number', 'GETCONSTITUENTACCOUNTNUMBER(${COLUMN_PREFIX}CONSTITUENT_ID)', 'ACCOUNT_NUMBER', 2;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'ADJUSTED_GIFT', 'Adjustment Information', 'Account Name', 'GETCONSTITUENTDISPLAYNAME(${COLUMN_PREFIX}CONSTITUENT_ID)', 'ACCOUNT_NAME', 1;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'ADJUSTED_GIFT', 'Adjustment Information', 'Gift Reference Number', '${COLUMN_PREFIX}GIFT_ID', 'GIFT_ID', 2;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'ADJUSTED_GIFT', 'Adjustment Information', 'Adjustment Create Date', '${COLUMN_PREFIX}CREATE_DATE', 'CREATE_DATE', 4;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'ADJUSTED_GIFT', 'Adjustment Information', 'Adjustment Update Date', '${COLUMN_PREFIX}UPDATE_DATE', 'UPDATE_DATE', 4;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'ADJUSTED_GIFT', 'Adjustment Information', 'Posted Short Display Name', 'GETPICKLISTDISPLAYVALUE(''posted'', CASE WHEN ${COLUMN_PREFIX}POSTED = 1 THEN ''true'' WHEN ${COLUMN_PREFIX}POSTED = 0 THEN ''false'' ELSE NULL END)', 'POSTED_SHORT_DISPLAY_NAME', 1;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'ADJUSTED_GIFT', 'Adjustment Information', 'Posted Long Display Name', 'GETPICKLISTLONGDESCRIPTION(''posted'', CASE WHEN ${COLUMN_PREFIX}POSTED = 1 THEN ''true'' WHEN ${COLUMN_PREFIX}POSTED = 0 THEN ''false'' ELSE NULL END)', 'POSTED_LONG_DISPLAY_NAME', 1;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'ADJUSTED_GIFT', 'Adjustment Information', 'Posted Description', 'GETPICKLISTDETAIL(''posted'', CASE WHEN ${COLUMN_PREFIX}POSTED = 1 THEN ''true'' WHEN ${COLUMN_PREFIX}POSTED = 0 THEN ''false'' ELSE NULL END)', 'POSTED_DESCRIPTION', 1;

INSERT THEGURU_TABLE_FIELD_EXCLUSIONS
	(TABLE_NAME, FIELD_NAME)
SELECT
	'ADJUSTED_GIFT', 'POSTED';


-- VW_V2_PAYMENTMETHODS
INSERT THEGURU_VIEW
	(VIEW_NAME, VIEW_DISPLAY_TEXT, PRIMARY_TABLE, PRIMARY_TABLE_IS_VIEW, PRIMARY_TABLE_ALIAS, PRIMARY_TABLE_COLUMN_PREFIX, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_OVERRIDE, DEFAULT_PAGE_TYPE)
SELECT
	'VW_V2_PAYMENTMETHODS', 'Payment Methods', 'PAYMENT_SOURCE', FALSE, 'PAYMENT_SOURCE', 'PAYMENT_SOURCE_', TRUE, 230, 'Payment Information', 'paymentManager';

SET @VIEW_ID = LAST_INSERT_ID();

INSERT THEGURU_VIEW_JOIN
	(VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX, DEFAULT_PAGE_TYPE)
SELECT
	@VIEW_ID, 'LEFT', 'ADDRESS', FALSE, 'PAYMENTMETHOD_ADDRESS', 'PAYMENT_SOURCE_ADDRESS_', 'PAYMENT_SOURCE.ADDRESS_ID = PAYMENTMETHOD_ADDRESS.ADDRESS_ID', TRUE, 1, 'Payment ', 'addressManagerEdit';

INSERT THEGURU_VIEW_JOIN
	(VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER)
SELECT
	@VIEW_ID, 'LEFT', 'CUSTOM_FIELD', FALSE, 'ADDRESS_TYPE', 'PAYMENT_SOURCE_ADDRESS_', 'ADDRESS_TYPE.ENTITY_TYPE = ''address'' AND PAYMENTMETHOD_ADDRESS.ADDRESS_ID = ADDRESS_TYPE.ENTITY_ID AND ADDRESS_TYPE.FIELD_NAME = ''addressType''', FALSE, 2;

INSERT THEGURU_VIEW_JOIN
	(VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX, DEFAULT_PAGE_TYPE)
SELECT
	@VIEW_ID, 'LEFT', 'PHONE', FALSE, 'PAYMENTMETHOD_PHONE', 'PAYMENT_SOURCE_PHONE_', 'PAYMENT_SOURCE.PHONE_ID = PAYMENTMETHOD_PHONE.PHONE_ID', TRUE, 3, 'Payment ', 'phoneManagerEdit';

INSERT THEGURU_VIEW_JOIN
	(VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER)
SELECT
	@VIEW_ID, 'LEFT', 'CUSTOM_FIELD', FALSE, 'PHONE_TYPE', 'PAYMENT_SOURCE_PHONE_', 'PHONE_TYPE.ENTITY_TYPE = ''phone'' AND PHONE_TYPE.ENTITY_ID = PAYMENTMETHOD_PHONE.PHONE_ID AND PHONE_TYPE.FIELD_NAME = ''phoneType''', FALSE, 4;


INSERT THEGURU_FIELD_FIELDGROUP_OVERRIDE
    (ALIAS_NAME, FIELD_GROUP_OVERRIDE)
SELECT
    'PAYMENT_SOURCE_ACH_HOLDER_NAME', 'Payment Information';

INSERT THEGURU_FIELD_FIELDGROUP_OVERRIDE
    (ALIAS_NAME, FIELD_GROUP_OVERRIDE)
SELECT
    'PAYMENT_SOURCE_CHECK_HOLDER_NAME', 'Payment Information';




-- VW_V2_CONSTITUENTS_GIFTS
INSERT THEGURU_VIEW
	(VIEW_NAME, VIEW_DISPLAY_TEXT, PRIMARY_TABLE, PRIMARY_TABLE_IS_VIEW, PRIMARY_TABLE_ALIAS, PRIMARY_TABLE_COLUMN_PREFIX, INCLUDE_ALL_FIELDS, SORT_ORDER, DEFAULT_PAGE_TYPE)
SELECT
	'VW_V2_CONSTITUENTS_GIFTS', 'Constituents & Gifts', 'VW_V2_CONSTITUENTS', TRUE, 'VW_V2_CONSTITUENTS', '', TRUE, 250, 'constituent';

SET @VIEW_ID = LAST_INSERT_ID();

INSERT THEGURU_VIEW_JOIN
    (VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX, FIELD_GROUP_OVERRIDE, PARENT_ENTITY_TYPE, SUB_FIELD_NAME)
SELECT
	@VIEW_ID, 'LEFT', 'VW_V2_GIFTS', TRUE, 'VW_V2_GIFTS', '', 'VW_V2_CONSTITUENTS.CONSTITUENT_CONSTITUENT_ID = VW_V2_GIFTS.GIFT_CONSTITUENT_ID', TRUE, 1, '', '', '', '';

INSERT THEGURU_VIEW_JOIN
    (VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX, FIELD_GROUP_OVERRIDE, PARENT_ENTITY_TYPE, SUB_FIELD_NAME)
SELECT
	@VIEW_ID, 'LEFT', 'VW_V2_ADJUSTED_GIFTS_DISTRIBUTIONS', TRUE, 'VW_V2_ADJUSTED_GIFTS_DISTRIBUTIONS', 'VW_AGD_', 'VW_V2_ADJUSTED_GIFTS_DISTRIBUTIONS.ADJUSTED_GIFT_GIFT_ID = VW_V2_GIFTS.GIFT_GIFT_ID', TRUE, 2, '', '', '', '';



-- VW_V2_CONSTITUENTS_GIFTDISTRIBUTIONS
INSERT THEGURU_VIEW
	(VIEW_NAME, VIEW_DISPLAY_TEXT, PRIMARY_TABLE, PRIMARY_TABLE_IS_VIEW, PRIMARY_TABLE_ALIAS, PRIMARY_TABLE_COLUMN_PREFIX, INCLUDE_ALL_FIELDS, SORT_ORDER, DEFAULT_PAGE_TYPE)
SELECT
	'VW_V2_CONSTITUENTS_GIFTDISTRIBUTIONS', 'Constituents, Gifts & Distributions', 'VW_V2_CONSTITUENTS', TRUE, 'VW_V2_CONSTITUENTS', '', TRUE, 260, 'constituent';

SET @VIEW_ID = LAST_INSERT_ID();

INSERT THEGURU_VIEW_JOIN
    (VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX, FIELD_GROUP_OVERRIDE, PARENT_ENTITY_TYPE, SUB_FIELD_NAME)
SELECT
	@VIEW_ID, 'LEFT', 'VW_V2_GIFTS_DISTRIBUTIONS', TRUE, 'VW_V2_GIFTS_DISTRIBUTIONS', '', 'VW_V2_CONSTITUENTS.CONSTITUENT_CONSTITUENT_ID = VW_V2_GIFTS_DISTRIBUTIONS.GIFT_CONSTITUENT_ID', TRUE, 1, '', '', '', '';

INSERT THEGURU_VIEW_JOIN
    (VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX, FIELD_GROUP_OVERRIDE, PARENT_ENTITY_TYPE, SUB_FIELD_NAME)
SELECT
	@VIEW_ID, 'LEFT', 'VW_V2_ADJUSTED_GIFTS_DISTRIBUTIONS', TRUE, 'VW_V2_ADJUSTED_GIFTS_DISTRIBUTIONS', 'VW_AGD_', 'VW_V2_ADJUSTED_GIFTS_DISTRIBUTIONS.ADJUSTED_GIFT_GIFT_ID = VW_V2_GIFTS_DISTRIBUTIONS.GIFT_GIFT_ID', TRUE, 2, '', '', '', '';





-- VW_V2_CONSTITUENTS_ADJUSTED_GIFTS_DISTRIBUTIONS
INSERT THEGURU_VIEW
	(VIEW_NAME, VIEW_DISPLAY_TEXT, PRIMARY_TABLE, PRIMARY_TABLE_IS_VIEW, PRIMARY_TABLE_ALIAS, PRIMARY_TABLE_COLUMN_PREFIX, INCLUDE_ALL_FIELDS, SORT_ORDER, DEFAULT_PAGE_TYPE)
SELECT
	'VW_V2_CONSTITUENTS_ADJUSTED_GIFTS_DISTRIBUTIONS', 'Constituents & Gift Adjustment Distributions', 'VW_V2_CONSTITUENTS', TRUE, 'VW_V2_CONSTITUENTS', '', TRUE, 270, 'constituent';

SET @VIEW_ID = LAST_INSERT_ID();

INSERT THEGURU_VIEW_JOIN
    (VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX, FIELD_GROUP_OVERRIDE, PARENT_ENTITY_TYPE, SUB_FIELD_NAME)
SELECT
	@VIEW_ID, 'LEFT', 'VW_V2_ADJUSTED_GIFTS_DISTRIBUTIONS', TRUE, 'VW_V2_ADJUSTED_GIFTS_DISTRIBUTIONS', 'VW_AGD_', 'VW_V2_ADJUSTED_GIFTS_DISTRIBUTIONS.ADJUSTED_GIFT_CONSTITUENT_ID = VW_V2_CONSTITUENTS.CONSTITUENT_CONSTITUENT_ID', TRUE, 1, '', '', '', '';


INSERT THEGURU_FIELD_FIELDGROUP_OVERRIDE
    (ALIAS_NAME, FIELD_GROUP_OVERRIDE)
SELECT
    'ADJUSTED_GIFT_CHECK_NUMBER', 'Adjustment Payment Information';

INSERT THEGURU_FIELD_FIELDGROUP_OVERRIDE
    (ALIAS_NAME, FIELD_GROUP_OVERRIDE)
SELECT
    'ADJUSTED_GIFT_CHECK_DATE', 'Adjustment Payment Information';

INSERT THEGURU_FIELD_FIELDGROUP_OVERRIDE
    (ALIAS_NAME, FIELD_GROUP_OVERRIDE)
SELECT
    'VW_AGD_ADJUSTED_GIFT_CHECK_NUMBER', 'Adjustment Payment Information';

INSERT THEGURU_FIELD_FIELDGROUP_OVERRIDE
    (ALIAS_NAME, FIELD_GROUP_OVERRIDE)
SELECT
    'VW_AGD_ADJUSTED_GIFT_CHECK_DATE', 'Adjustment Payment Information';

INSERT THEGURU_FIELD_FIELDGROUP_OVERRIDE
    (ALIAS_NAME, FIELD_GROUP_OVERRIDE)
SELECT
    'ADJUSTED_GIFT_ADJUSTED_PAYMENT_TO', 'Adjustment Payment Information';

INSERT THEGURU_FIELD_FIELDGROUP_OVERRIDE
    (ALIAS_NAME, FIELD_GROUP_OVERRIDE)
SELECT
    'VW_AGD_ADJUSTED_GIFT_ADJUSTED_PAYMENT_TO', 'Adjustment Payment Information';

INSERT THEGURU_FIELD_FIELDGROUP_OVERRIDE
    (ALIAS_NAME, FIELD_GROUP_OVERRIDE)
SELECT
    'ADJUSTED_GIFT_PAYMENT_TYPE', 'Adjustment Payment Information';

INSERT THEGURU_FIELD_FIELDGROUP_OVERRIDE
    (ALIAS_NAME, FIELD_GROUP_OVERRIDE)
SELECT
    'VW_AGD_ADJUSTED_GIFT_PAYMENT_TYPE', 'Adjustment Payment Information';

INSERT THEGURU_FIELD_FIELDGROUP_OVERRIDE
    (ALIAS_NAME, FIELD_GROUP_OVERRIDE)
SELECT
    'ADJUSTED_GIFT_ADJUSTED_PAYMENT_REQUIRED_SHORT_DISPLAY_NAME', 'Adjustment Payment Information';

INSERT THEGURU_FIELD_FIELDGROUP_OVERRIDE
    (ALIAS_NAME, FIELD_GROUP_OVERRIDE)
SELECT
    'ADJUSTED_GIFT_ADJUSTED_PAYMENT_REQUIRED_LONG_DISPLAY_NAME', 'Adjustment Payment Information';

INSERT THEGURU_FIELD_FIELDGROUP_OVERRIDE
    (ALIAS_NAME, FIELD_GROUP_OVERRIDE)
SELECT
    'ADJUSTED_GIFT_ADJUSTED_PAYMENT_REQUIRED_DESCRIPTION', 'Adjustment Payment Information';

INSERT THEGURU_FIELD_FIELDGROUP_OVERRIDE
    (ALIAS_NAME, FIELD_GROUP_OVERRIDE)
SELECT
    'VW_AGD_ADJUSTED_GIFT_ADJUSTED_PAYMENT_REQUIRED_SHORT_DISPLAY_NAM', 'Adjustment Payment Information';

INSERT THEGURU_FIELD_FIELDGROUP_OVERRIDE
    (ALIAS_NAME, FIELD_GROUP_OVERRIDE)
SELECT
    'VW_AGD_ADJUSTED_GIFT_ADJUSTED_PAYMENT_REQUIRED_LONG_DISPLAY_NAME', 'Adjustment Payment Information';

INSERT THEGURU_FIELD_FIELDGROUP_OVERRIDE
    (ALIAS_NAME, FIELD_GROUP_OVERRIDE)
SELECT
    'VW_AGD_ADJUSTED_GIFT_ADJUSTED_PAYMENT_REQUIRED_DESCRIPTION', 'Adjustment Payment Information';

INSERT THEGURU_FIELD_FIELDGROUP_OVERRIDE
    (ALIAS_NAME, FIELD_GROUP_OVERRIDE)
SELECT
    'ADJUSTED_GIFT_ADDITIONALINFO', 'Adjustment Payment Information';

INSERT THEGURU_FIELD_FIELDGROUP_OVERRIDE
    (ALIAS_NAME, FIELD_GROUP_OVERRIDE)
SELECT
    'VW_AGD_ADJUSTED_GIFT_ADDITIONALINFO', 'Adjustment Payment Information';



-- VW_V2_CONSTITUENTS_PAYMENTMETHODS
INSERT THEGURU_VIEW
	(VIEW_NAME, VIEW_DISPLAY_TEXT, PRIMARY_TABLE, PRIMARY_TABLE_IS_VIEW, PRIMARY_TABLE_ALIAS, PRIMARY_TABLE_COLUMN_PREFIX, INCLUDE_ALL_FIELDS, SORT_ORDER, DEFAULT_PAGE_TYPE)
SELECT
	'VW_V2_CONSTITUENTS_PAYMENTMETHODS', 'Constituents & Payment Methods', 'VW_V2_CONSTITUENTS', TRUE, 'VW_V2_CONSTITUENTS', '', TRUE, 310, 'constituent';

SET @VIEW_ID = LAST_INSERT_ID();

INSERT THEGURU_VIEW_JOIN
    (VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX, FIELD_GROUP_OVERRIDE, PARENT_ENTITY_TYPE, SUB_FIELD_NAME)
SELECT
	@VIEW_ID, 'LEFT', 'VW_V2_PAYMENTMETHODS', TRUE, 'VW_V2_PAYMENTMETHODS', '', 'VW_V2_PAYMENTMETHODS.PAYMENT_SOURCE_CONSTITUENT_ID = VW_V2_CONSTITUENTS.CONSTITUENT_CONSTITUENT_ID', TRUE, 1, '', '', '', '';




-- VW_V2_CONSTITUENTS_PLEDGES
INSERT THEGURU_VIEW
	(VIEW_NAME, VIEW_DISPLAY_TEXT, PRIMARY_TABLE, PRIMARY_TABLE_IS_VIEW, PRIMARY_TABLE_ALIAS, PRIMARY_TABLE_COLUMN_PREFIX, INCLUDE_ALL_FIELDS, SORT_ORDER, DEFAULT_PAGE_TYPE)
SELECT
	'VW_V2_CONSTITUENTS_PLEDGES', 'Constituents & Pledges', 'VW_V2_CONSTITUENTS', TRUE, 'VW_V2_CONSTITUENTS', '', TRUE, 320, 'constituent';

SET @VIEW_ID = LAST_INSERT_ID();

INSERT THEGURU_VIEW_JOIN
    (VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX, FIELD_GROUP_OVERRIDE, PARENT_ENTITY_TYPE, SUB_FIELD_NAME)
SELECT
	@VIEW_ID, 'LEFT', 'VW_V2_PLEDGES', TRUE, 'VW_V2_PLEDGES', '', 'VW_V2_CONSTITUENTS.CONSTITUENT_CONSTITUENT_ID = VW_V2_PLEDGES.PLEDGE_CONSTITUENT_ID', TRUE, 1, '', '', '', '';





-- VW_V2_CONSTITUENTS_PLEDGES_DISTRIBUTIONS
INSERT THEGURU_VIEW
	(VIEW_NAME, VIEW_DISPLAY_TEXT, PRIMARY_TABLE, PRIMARY_TABLE_IS_VIEW, PRIMARY_TABLE_ALIAS, PRIMARY_TABLE_COLUMN_PREFIX, INCLUDE_ALL_FIELDS, SORT_ORDER, DEFAULT_PAGE_TYPE)
SELECT
	'VW_V2_CONSTITUENTS_PLEDGES_DISTRIBUTIONS', 'Constituents, Pledges & Distributions', 'VW_V2_CONSTITUENTS', TRUE, 'VW_V2_CONSTITUENTS', '', TRUE, 330, 'constituent';

SET @VIEW_ID = LAST_INSERT_ID();

INSERT THEGURU_VIEW_JOIN
    (VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX, FIELD_GROUP_OVERRIDE, PARENT_ENTITY_TYPE, SUB_FIELD_NAME)
SELECT
	@VIEW_ID, 'LEFT', 'VW_V2_PLEDGES_DISTRIBUTIONS', TRUE, 'VW_V2_PLEDGES_DISTRIBUTIONS', '', 'VW_V2_CONSTITUENTS.CONSTITUENT_CONSTITUENT_ID = VW_V2_PLEDGES_DISTRIBUTIONS.PLEDGE_CONSTITUENT_ID', TRUE, 1, '', '', '', '';



-- VW_V2_CONSTITUENTS_RECURRINGGIFTS
INSERT THEGURU_VIEW
	(VIEW_NAME, VIEW_DISPLAY_TEXT, PRIMARY_TABLE, PRIMARY_TABLE_IS_VIEW, PRIMARY_TABLE_ALIAS, PRIMARY_TABLE_COLUMN_PREFIX, INCLUDE_ALL_FIELDS, SORT_ORDER, DEFAULT_PAGE_TYPE)
SELECT
	'VW_V2_CONSTITUENTS_RECURRINGGIFTS', 'Constituents & Recurring Gifts', 'VW_V2_CONSTITUENTS', TRUE, 'VW_V2_CONSTITUENTS', '', TRUE, 340, 'constituent';

SET @VIEW_ID = LAST_INSERT_ID();

INSERT THEGURU_VIEW_JOIN
    (VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX, FIELD_GROUP_OVERRIDE, PARENT_ENTITY_TYPE, SUB_FIELD_NAME)
SELECT
	@VIEW_ID, 'LEFT', 'VW_V2_RECURRINGGIFTS', TRUE, 'VW_V2_RECURRINGGIFTS', '', 'VW_V2_CONSTITUENTS.CONSTITUENT_CONSTITUENT_ID = VW_V2_RECURRINGGIFTS.RECURRING_GIFT_CONSTITUENT_ID', TRUE, 1, '', '', '', '';




-- VW_V2_CONSTITUENTS_RECURRINGGIFTS_DISTRIBUTIONS
INSERT THEGURU_VIEW
	(VIEW_NAME, VIEW_DISPLAY_TEXT, PRIMARY_TABLE, PRIMARY_TABLE_IS_VIEW, PRIMARY_TABLE_ALIAS, PRIMARY_TABLE_COLUMN_PREFIX, INCLUDE_ALL_FIELDS, SORT_ORDER, DEFAULT_PAGE_TYPE)
SELECT
	'VW_V2_CONSTITUENTS_RECURRINGGIFTS_DISTRIBUTIONS', 'Constituents, Recurring Gifts & Distributions', 'VW_V2_CONSTITUENTS', TRUE, 'VW_V2_CONSTITUENTS', '', TRUE, 350, 'constituent';

SET @VIEW_ID = LAST_INSERT_ID();

INSERT THEGURU_VIEW_JOIN
    (VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX, FIELD_GROUP_OVERRIDE, PARENT_ENTITY_TYPE, SUB_FIELD_NAME)
SELECT
	@VIEW_ID, 'LEFT', 'VW_V2_RECURRINGGIFTS_DISTRIBUTIONS', TRUE, 'VW_V2_RECURRINGGIFTS_DISTRIBUTIONS', '', 'VW_V2_CONSTITUENTS.CONSTITUENT_CONSTITUENT_ID = VW_V2_RECURRINGGIFTS_DISTRIBUTIONS.RECURRING_GIFT_CONSTITUENT_ID', TRUE, 1, '', '', '', '';


INSERT THEGURU_VIEW
	(VIEW_NAME, VIEW_DISPLAY_TEXT, PRIMARY_TABLE, PRIMARY_TABLE_IS_VIEW, PRIMARY_TABLE_ALIAS, PRIMARY_TABLE_COLUMN_PREFIX, INCLUDE_ALL_FIELDS, SORT_ORDER, DEFAULT_PAGE_TYPE, SQL_OVERRIDE)
SELECT
	'VW_V2_GIFTSUMMARIES_SOFTGIFTS', 'Gift Summaries', 'VW_V2_GIFTSUMMARIES', FALSE, 'VW_V2_GIFTSUMMARIES', '', FALSE, 355, '',
'SELECT CUSTOM_FIELD.FIELD_VALUE AS CONSTITUENT_ID, GIFT.GIFT_ID,
        CUSTOM_FIELD.FIELD_VALUE AS GROUP_BY_VALUE,
        DONATION_DATE AS START_DATE, DONATION_DATE AS END_DATE, CURRENCY_CODE, 1 AS COUNT_VALUE,
        DISTRO_LINE.AMOUNT +
            IFNULL((SELECT SUM(B.AMOUNT) FROM ADJUSTED_GIFT
            JOIN DISTRO_LINE B ON B.ADJUSTED_GIFT_ID = ADJUSTED_GIFT.ADJUSTED_GIFT_ID
            JOIN CUSTOM_FIELD C ON C.ENTITY_ID = B.DISTRO_LINE_ID AND C.ENTITY_TYPE = ''distributionline'' AND C.FIELD_NAME = ''onBehalfOf''
            WHERE ADJUSTED_GIFT.GIFT_ID = GIFT.GIFT_ID
            AND C.FIELD_VALUE = CUSTOM_FIELD.FIELD_VALUE), 0) AS SUM_VALUE
    FROM GIFT
    JOIN DISTRO_LINE ON DISTRO_LINE.GIFT_ID = GIFT.GIFT_ID
    JOIN CUSTOM_FIELD ON CUSTOM_FIELD.ENTITY_ID = DISTRO_LINE.DISTRO_LINE_ID AND CUSTOM_FIELD.ENTITY_TYPE = ''distributionline'' AND CUSTOM_FIELD.FIELD_NAME = ''onBehalfOf''';

INSERT THEGURU_VIEW
	(VIEW_NAME, VIEW_DISPLAY_TEXT, PRIMARY_TABLE, PRIMARY_TABLE_IS_VIEW, PRIMARY_TABLE_ALIAS, PRIMARY_TABLE_COLUMN_PREFIX, INCLUDE_ALL_FIELDS, SORT_ORDER, DEFAULT_PAGE_TYPE, SQL_OVERRIDE)
SELECT
	'VW_V2_GIFTSUMMARIES', 'Gift Summaries', 'VW_V2_GIFTSUMMARIES', FALSE, 'VW_V2_GIFTSUMMARIES', '', TRUE, 356, '',
'SELECT
    GROUP_BY_VALUE,
    CASE
        WHEN ATTRIBUTE_NAME_ID IN (''First Gift'', ''Last Gift'', ''Largest Gift'', ''Gift Amount'') THEN ''Hard Gifts''
        WHEN ATTRIBUTE_NAME_ID IN (''First Soft Gift'', ''Last Soft Gift'', ''Largest Soft Gift'', ''Soft Gift Amount'') THEN ''Soft Gifts''
        WHEN ATTRIBUTE_NAME_ID IN (''First Pledge'', ''Last Pledge'', ''Largest Pledge'', ''Projected Pledge Amount'') THEN ''Pledges''
        WHEN ATTRIBUTE_NAME_ID IN (''First Recurring Gift'', ''Last Recurring Gift'', ''Largest Recurring Gift'', ''Projected Recurring Gift Amount'') THEN ''Recurring Gifts''
        WHEN ATTRIBUTE_NAME_ID IN (''First Gift In Kind'', ''Last Gift In Kind'', ''Largest Gift In Kind'', ''Gift In Kind Amount'') THEN ''Gifts In Kind''
        WHEN ATTRIBUTE_NAME_ID IN (''All Actuals'', ''All Projected'') THEN ''Overall''
    END AS CATEGORY,
    ATTRIBUTE_DESC,
    SERIES_DESC,
    START_DATE,
    END_DATE,
    CURRENCY_CODE,
    COUNT_VALUE,
    SUM_VALUE,
    ROUND(SUM_VALUE / COUNT_VALUE, 2) AS AVERAGE_VALUE,
    MIN_VALUE,
    MAX_VALUE
FROM ROLLUP_VALUE
JOIN ROLLUP_SERIES ON ROLLUP_SERIES.ROLLUP_SERIES_ID = ROLLUP_VALUE.ROLLUP_SERIES_ID
JOIN ROLLUP_ATTRIBUTE ON ROLLUP_ATTRIBUTE.ROLLUP_ATTRIBUTE_ID = ROLLUP_VALUE.ROLLUP_ATTRIBUTE_ID

UNION

-- Hard Gift - First Gift
SELECT
    CONSTITUENT_ID AS GROUP_BY_VALUE, ''Hard Gifts'' AS CATEGORY, ''First Gift'' AS ATTRIBUTE_DESC, ''Lifetime'' AS SERIES_DESC,
    DONATION_DATE AS START_DATE, DONATION_DATE AS END_DATE, CURRENCY_CODE, 1 AS COUNT_VALUE, ADJUSTED_AMOUNT AS SUM_VALUE,
    ADJUSTED_AMOUNT AS AVERAGE_VALUE, ADJUSTED_AMOUNT AS MIN_VALUE, ADJUSTED_AMOUNT AS MAX_VALUE
FROM GIFT
WHERE GIFT_ID = (SELECT GIFT_ID FROM GIFT B WHERE B.CONSTITUENT_ID = GIFT.CONSTITUENT_ID ORDER BY DONATION_DATE ASC, TRANSACTION_DATE ASC LIMIT 1)

UNION

-- Hard Gift - Last Gift
SELECT
    CONSTITUENT_ID AS GROUP_BY_VALUE, ''Hard Gifts'' AS CATEGORY, ''Last Gift'' AS ATTRIBUTE_DESC, ''Lifetime'' AS SERIES_DESC,
    DONATION_DATE AS START_DATE, DONATION_DATE AS END_DATE, CURRENCY_CODE, 1 AS COUNT_VALUE, ADJUSTED_AMOUNT AS SUM_VALUE,
    ADJUSTED_AMOUNT AS AVERAGE_VALUE, ADJUSTED_AMOUNT AS MIN_VALUE, ADJUSTED_AMOUNT AS MAX_VALUE
FROM GIFT
WHERE GIFT_ID = (SELECT GIFT_ID FROM GIFT B WHERE B.CONSTITUENT_ID = GIFT.CONSTITUENT_ID ORDER BY DONATION_DATE DESC, TRANSACTION_DATE DESC LIMIT 1)

UNION

-- Hard Gift - Largest Gift
SELECT
    CONSTITUENT_ID AS GROUP_BY_VALUE, ''Hard Gifts'' AS CATEGORY, ''Largest Gift'' AS ATTRIBUTE_DESC, ''Lifetime'' AS SERIES_DESC,
    DONATION_DATE AS START_DATE, DONATION_DATE AS END_DATE, CURRENCY_CODE, 1 AS COUNT_VALUE, ADJUSTED_AMOUNT AS SUM_VALUE,
    ADJUSTED_AMOUNT AS AVERAGE_VALUE, ADJUSTED_AMOUNT AS MIN_VALUE, ADJUSTED_AMOUNT AS MAX_VALUE
FROM GIFT
WHERE GIFT_ID = (SELECT GIFT_ID FROM GIFT B WHERE B.CONSTITUENT_ID = GIFT.CONSTITUENT_ID ORDER BY ADJUSTED_AMOUNT DESC, TRANSACTION_DATE ASC LIMIT 1)

UNION

-- Soft Gift - First Gift
SELECT
    CONSTITUENT_ID AS GROUP_BY_VALUE, ''Soft Gifts'' AS CATEGORY, ''First Gift'' AS ATTRIBUTE_DESC, ''Lifetime'' AS SERIES_DESC,
    START_DATE, END_DATE, CURRENCY_CODE, COUNT_VALUE, SUM_VALUE, SUM_VALUE AS AVERAGE_VALUE, SUM_VALUE AS MIN_VALUE, SUM_VALUE AS MAX_VALUE
FROM VW_V2_GIFTSUMMARIES_SOFTGIFTS AS SOFT_GIFTS
WHERE SOFT_GIFTS.GIFT_ID =
    (SELECT GA.GIFT_ID
    FROM GIFT GA
    JOIN DISTRO_LINE DLA ON DLA.GIFT_ID = GA.GIFT_ID
    JOIN CUSTOM_FIELD CFA ON CFA.ENTITY_ID = DLA.DISTRO_LINE_ID AND CFA.ENTITY_TYPE = ''distributionline'' AND CFA.FIELD_NAME = ''onBehalfOf''
    WHERE CFA.FIELD_VALUE = SOFT_GIFTS.CONSTITUENT_ID
    ORDER BY GA.DONATION_DATE ASC, GA.TRANSACTION_DATE ASC LIMIT 1)

UNION

-- Soft Gift - Last Gift
SELECT
    CONSTITUENT_ID AS GROUP_BY_VALUE, ''Soft Gifts'' AS CATEGORY, ''Last Gift'' AS ATTRIBUTE_DESC, ''Lifetime'' AS SERIES_DESC,
    START_DATE, END_DATE, CURRENCY_CODE, COUNT_VALUE, SUM_VALUE, SUM_VALUE AS AVERAGE_VALUE, SUM_VALUE AS MIN_VALUE, SUM_VALUE AS MAX_VALUE
FROM VW_V2_GIFTSUMMARIES_SOFTGIFTS AS SOFT_GIFTS
WHERE SOFT_GIFTS.GIFT_ID =
    (SELECT GA.GIFT_ID
    FROM GIFT GA
    JOIN DISTRO_LINE DLA ON DLA.GIFT_ID = GA.GIFT_ID
    JOIN CUSTOM_FIELD CFA ON CFA.ENTITY_ID = DLA.DISTRO_LINE_ID AND CFA.ENTITY_TYPE = ''distributionline'' AND CFA.FIELD_NAME = ''onBehalfOf''
    WHERE CFA.FIELD_VALUE = SOFT_GIFTS.CONSTITUENT_ID
    ORDER BY GA.DONATION_DATE DESC, GA.TRANSACTION_DATE DESC LIMIT 1)

UNION

-- Soft Gift - Largest Gift
SELECT
    CONSTITUENT_ID AS GROUP_BY_VALUE, ''Soft Gifts'' AS CATEGORY, ''Largest Gift'' AS ATTRIBUTE_DESC, ''Lifetime'' AS SERIES_DESC,
    START_DATE, END_DATE, CURRENCY_CODE, COUNT_VALUE, SUM_VALUE, SUM_VALUE AS AVERAGE_VALUE, SUM_VALUE AS MIN_VALUE, SUM_VALUE AS MAX_VALUE
FROM VW_V2_GIFTSUMMARIES_SOFTGIFTS AS SOFT_GIFTS
WHERE SOFT_GIFTS.GIFT_ID =
    (SELECT GA.GIFT_ID
    FROM GIFT GA
    JOIN DISTRO_LINE DLA ON DLA.GIFT_ID = GA.GIFT_ID
    JOIN CUSTOM_FIELD CFA ON CFA.ENTITY_ID = DLA.DISTRO_LINE_ID AND CFA.ENTITY_TYPE = ''distributionline'' AND CFA.FIELD_NAME = ''onBehalfOf''
    WHERE CFA.FIELD_VALUE = SOFT_GIFTS.CONSTITUENT_ID
    ORDER BY
        DLA.AMOUNT +
            IFNULL((SELECT SUM(B.AMOUNT) FROM ADJUSTED_GIFT
            JOIN DISTRO_LINE B ON B.ADJUSTED_GIFT_ID = ADJUSTED_GIFT.ADJUSTED_GIFT_ID
            JOIN CUSTOM_FIELD C ON C.ENTITY_ID = B.DISTRO_LINE_ID AND C.ENTITY_TYPE = ''distributionline'' AND C.FIELD_NAME = ''onBehalfOf''
            WHERE ADJUSTED_GIFT.GIFT_ID = GA.GIFT_ID
            AND C.FIELD_VALUE = CFA.FIELD_VALUE), 0) DESC LIMIT 1)

UNION

-- Pledges - First Pledge
SELECT
    CONSTITUENT_ID AS GROUP_BY_VALUE, ''Pledges'' AS CATEGORY, ''First Pledge'' AS ATTRIBUTE_DESC, ''Lifetime'' AS SERIES_DESC,
    PLEDGE_DATE AS START_DATE, PLEDGE_DATE AS END_DATE, CURRENCY_CODE, 1 AS COUNT_VALUE, AMOUNT_TOTAL AS SUM_VALUE,
    AMOUNT_TOTAL AS AVERAGE_VALUE, AMOUNT_TOTAL AS MIN_VALUE, AMOUNT_TOTAL AS MAX_VALUE
FROM PLEDGE
WHERE PLEDGE_ID = (SELECT B.PLEDGE_ID FROM PLEDGE B WHERE B.CONSTITUENT_ID = PLEDGE.CONSTITUENT_ID ORDER BY B.PLEDGE_DATE ASC, B.CREATE_DATE ASC LIMIT 1)

UNION

-- Pledges - Last Pledge
SELECT
    CONSTITUENT_ID AS GROUP_BY_VALUE, ''Pledges'' AS CATEGORY, ''Last Pledge'' AS ATTRIBUTE_DESC, ''Lifetime'' AS SERIES_DESC,
    PLEDGE_DATE AS START_DATE, PLEDGE_DATE AS END_DATE, CURRENCY_CODE, 1 AS COUNT_VALUE, AMOUNT_TOTAL AS SUM_VALUE,
    AMOUNT_TOTAL AS AVERAGE_VALUE, AMOUNT_TOTAL AS MIN_VALUE, AMOUNT_TOTAL AS MAX_VALUE
FROM PLEDGE
WHERE PLEDGE_ID = (SELECT B.PLEDGE_ID FROM PLEDGE B WHERE B.CONSTITUENT_ID = PLEDGE.CONSTITUENT_ID ORDER BY B.PLEDGE_DATE DESC, B.CREATE_DATE DESC LIMIT 1)

UNION

-- Pledges - Largest Pledge
SELECT
    CONSTITUENT_ID AS GROUP_BY_VALUE, ''Pledges'' AS CATEGORY, ''Largest Pledge'' AS ATTRIBUTE_DESC, ''Lifetime'' AS SERIES_DESC,
    PLEDGE_DATE AS START_DATE, PLEDGE_DATE AS END_DATE, CURRENCY_CODE, 1 AS COUNT_VALUE, GREATEST(PLEDGE.AMOUNT_PAID, PLEDGE.AMOUNT_TOTAL) AS SUM_VALUE,
    GREATEST(PLEDGE.AMOUNT_PAID, PLEDGE.AMOUNT_TOTAL) AS AVERAGE_VALUE, GREATEST(PLEDGE.AMOUNT_PAID, PLEDGE.AMOUNT_TOTAL) AS MIN_VALUE, GREATEST(PLEDGE.AMOUNT_PAID, PLEDGE.AMOUNT_TOTAL) AS MAX_VALUE
FROM PLEDGE
WHERE PLEDGE_ID = (SELECT B.PLEDGE_ID FROM PLEDGE B WHERE B.CONSTITUENT_ID = PLEDGE.CONSTITUENT_ID ORDER BY GREATEST(B.AMOUNT_PAID, B.AMOUNT_TOTAL) DESC LIMIT 1)

UNION

-- Recurring Gifts - First Recurring Gift
SELECT
    CONSTITUENT_ID AS GROUP_BY_VALUE, ''Recurring Gifts'' AS CATEGORY, ''First Recurring Gift'' AS ATTRIBUTE_DESC, ''Lifetime'' AS SERIES_DESC,
    START_DATE AS START_DATE, END_DATE AS END_DATE, CURRENCY_CODE, 1 AS COUNT_VALUE, AMOUNT_TOTAL AS SUM_VALUE,
    AMOUNT_TOTAL AS AVERAGE_VALUE, AMOUNT_TOTAL AS MIN_VALUE, AMOUNT_TOTAL AS MAX_VALUE
FROM RECURRING_GIFT
WHERE RECURRING_GIFT_ID = (SELECT B.RECURRING_GIFT_ID FROM RECURRING_GIFT B WHERE B.CONSTITUENT_ID = RECURRING_GIFT.CONSTITUENT_ID ORDER BY B.START_DATE ASC, B.CREATE_DATE ASC LIMIT 1)

UNION

-- Recurring Gifts - Last Recurring Gift
SELECT
    CONSTITUENT_ID AS GROUP_BY_VALUE, ''Recurring Gifts'' AS CATEGORY, ''Last Recurring Gift'' AS ATTRIBUTE_DESC, ''Lifetime'' AS SERIES_DESC,
    START_DATE AS START_DATE, END_DATE AS END_DATE, CURRENCY_CODE, 1 AS COUNT_VALUE, AMOUNT_TOTAL AS SUM_VALUE,
    AMOUNT_TOTAL AS AVERAGE_VALUE, AMOUNT_TOTAL AS MIN_VALUE, AMOUNT_TOTAL AS MAX_VALUE
FROM RECURRING_GIFT
WHERE RECURRING_GIFT_ID = (SELECT B.RECURRING_GIFT_ID FROM RECURRING_GIFT B WHERE B.CONSTITUENT_ID = RECURRING_GIFT.CONSTITUENT_ID ORDER BY B.START_DATE DESC, B.CREATE_DATE DESC LIMIT 1)

UNION

-- Recurring Gifts - Largest Recurring Gift
SELECT
    CONSTITUENT_ID AS GROUP_BY_VALUE, ''Recurring Gifts'' AS CATEGORY, ''Largest Recurring Gift'' AS ATTRIBUTE_DESC, ''Lifetime'' AS SERIES_DESC,
    START_DATE AS START_DATE, END_DATE AS END_DATE, CURRENCY_CODE, 1 AS COUNT_VALUE, AMOUNT_TOTAL AS SUM_VALUE,
    AMOUNT_TOTAL AS AVERAGE_VALUE, AMOUNT_TOTAL AS MIN_VALUE, AMOUNT_TOTAL AS MAX_VALUE
FROM RECURRING_GIFT
WHERE RECURRING_GIFT_ID = (SELECT B.RECURRING_GIFT_ID FROM RECURRING_GIFT B WHERE B.CONSTITUENT_ID = RECURRING_GIFT.CONSTITUENT_ID ORDER BY AMOUNT_TOTAL DESC LIMIT 1)

UNION

-- Gift In Kind - First Gift
SELECT
    CONSTITUENT_ID AS GROUP_BY_VALUE, ''Gifts In Kind'' AS CATEGORY, ''First Gift In Kind'' AS ATTRIBUTE_DESC, ''Lifetime'' AS SERIES_DESC,
    DONATION_DATE AS START_DATE, DONATION_DATE AS END_DATE, CURRENCY_CODE, 1 AS COUNT_VALUE, FAIR_MARKET_VALUE AS SUM_VALUE,
    FAIR_MARKET_VALUE AS AVERAGE_VALUE, FAIR_MARKET_VALUE AS MIN_VALUE, FAIR_MARKET_VALUE AS MAX_VALUE
FROM GIFT_IN_KIND
WHERE GIFT_ID = (SELECT GIFT_ID FROM GIFT_IN_KIND B WHERE B.CONSTITUENT_ID = GIFT_IN_KIND.CONSTITUENT_ID ORDER BY DONATION_DATE ASC, TRANSACTION_DATE ASC LIMIT 1)

UNION

-- Gift In Kind - Last Gift
SELECT
    CONSTITUENT_ID AS GROUP_BY_VALUE, ''Gifts In Kind'' AS CATEGORY, ''Last Gift In Kind'' AS ATTRIBUTE_DESC, ''Lifetime'' AS SERIES_DESC,
    DONATION_DATE AS START_DATE, DONATION_DATE AS END_DATE, CURRENCY_CODE, 1 AS COUNT_VALUE, FAIR_MARKET_VALUE AS SUM_VALUE,
    FAIR_MARKET_VALUE AS AVERAGE_VALUE, FAIR_MARKET_VALUE AS MIN_VALUE, FAIR_MARKET_VALUE AS MAX_VALUE
FROM GIFT_IN_KIND
WHERE GIFT_ID = (SELECT GIFT_ID FROM GIFT_IN_KIND B WHERE B.CONSTITUENT_ID = GIFT_IN_KIND.CONSTITUENT_ID ORDER BY DONATION_DATE DESC, TRANSACTION_DATE DESC LIMIT 1)

UNION

-- Gift In Kind - Large Gift
SELECT
    CONSTITUENT_ID AS GROUP_BY_VALUE, ''Gifts In Kind'' AS CATEGORY, ''Large Gift In Kind'' AS ATTRIBUTE_DESC, ''Lifetime'' AS SERIES_DESC,
    DONATION_DATE AS START_DATE, DONATION_DATE AS END_DATE, CURRENCY_CODE, 1 AS COUNT_VALUE, FAIR_MARKET_VALUE AS SUM_VALUE,
    FAIR_MARKET_VALUE AS AVERAGE_VALUE, FAIR_MARKET_VALUE AS MIN_VALUE, FAIR_MARKET_VALUE AS MAX_VALUE
FROM GIFT_IN_KIND
WHERE GIFT_ID = (SELECT GIFT_ID FROM GIFT_IN_KIND B WHERE B.CONSTITUENT_ID = GIFT_IN_KIND.CONSTITUENT_ID ORDER BY FAIR_MARKET_VALUE DESC, TRANSACTION_DATE ASC LIMIT 1)
;';



INSERT THEGURU_VIEW
	(VIEW_NAME, VIEW_DISPLAY_TEXT, PRIMARY_TABLE, PRIMARY_TABLE_IS_VIEW, PRIMARY_TABLE_ALIAS, PRIMARY_TABLE_COLUMN_PREFIX, INCLUDE_ALL_FIELDS, SORT_ORDER, DEFAULT_PAGE_TYPE)
SELECT
	'VW_V2_CONSTITUENTS_GIFTSUMMARIES', 'Constituents & Gift Summaries', 'VW_V2_CONSTITUENTS', TRUE, 'VW_V2_CONSTITUENTS', '', TRUE, 357, '';

SET @VIEW_ID = LAST_INSERT_ID();

INSERT THEGURU_VIEW_JOIN
    (VIEW_ID, JOIN_TYPE, JOIN_TABLE, JOIN_TABLE_IS_VIEW, JOIN_TABLE_ALIAS, JOIN_TABLE_COLUMN_PREFIX, JOIN_CRITERIA, INCLUDE_ALL_FIELDS, SORT_ORDER, FIELD_GROUP_PREFIX, FIELD_GROUP_OVERRIDE, PARENT_ENTITY_TYPE, SUB_FIELD_NAME)
SELECT
	@VIEW_ID, 'LEFT', 'VW_V2_GIFTSUMMARIES', TRUE, 'VW_V2_GIFTSUMMARIES', 'VW_V2_GIFTSUMMARIES_', 'VW_V2_CONSTITUENTS.CONSTITUENT_CONSTITUENT_ID = VW_V2_GIFTSUMMARIES.GROUP_BY_VALUE', TRUE, 1, '', '', '', '';


INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'VW_V2_GIFTSUMMARIES', 'Gift Summary Information', 'Account Number', 'GETCONSTITUENTACCOUNTNUMBER(${COLUMN_PREFIX}GROUP_BY_VALUE)', 'ACCOUNT_NUMBER', 2;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'VW_V2_GIFTSUMMARIES', 'Gift Summary Information', 'Account Name', 'GETCONSTITUENTDISPLAYNAME(${COLUMN_PREFIX}GROUP_BY_VALUE)', 'ACCOUNT_NAME', 1;


INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'VW_V2_GIFTSUMMARIES', 'Gift Summary Information', 'Category', '${COLUMN_PREFIX}CATEGORY', 'CATEGORY', 1;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'VW_V2_GIFTSUMMARIES', 'Gift Summary Information', 'Statistic', '${COLUMN_PREFIX}ATTRIBUTE_DESC', 'ATTRIBUTE_DESC', 1;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'VW_V2_GIFTSUMMARIES', 'Gift Summary Information', 'Time Period', '${COLUMN_PREFIX}ATTRIBUTE_DESC', 'SERIES_DESC', 1;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'VW_V2_GIFTSUMMARIES', 'Gift Summary Information', 'Start Date', '${COLUMN_PREFIX}START_DATE', 'START_DATE', 4;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'VW_V2_GIFTSUMMARIES', 'Gift Summary Information', 'End Date', '${COLUMN_PREFIX}END_DATE', 'END_DATE', 4;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'VW_V2_GIFTSUMMARIES', 'Gift Summary Information', 'Currency', '${COLUMN_PREFIX}CURRENCY_CODE', 'CURRENCY_CODE', 1;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'VW_V2_GIFTSUMMARIES', 'Gift Summary Information', 'Count', '${COLUMN_PREFIX}COUNT_VALUE', 'COUNT_VALUE', 2;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'VW_V2_GIFTSUMMARIES', 'Gift Summary Information', 'Total', '${COLUMN_PREFIX}SUM_VALUE', 'SUM_VALUE', 5;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'VW_V2_GIFTSUMMARIES', 'Gift Summary Information', 'Average', '${COLUMN_PREFIX}AVERAGE_VALUE', 'AVERAGE_VALUE', 5;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'VW_V2_GIFTSUMMARIES', 'Gift Summary Information', 'Minimum', '${COLUMN_PREFIX}MIN_VALUE', 'MIN_VALUE', 5;

INSERT THEGURU_TABLE_ADDITIONAL_FIELD_DEFINITIONS
    (TABLE_NAME, FIELD_GROUP, DISPLAY_NAME, COLUMN_NAME, ALIAS_NAME, FIELD_TYPE)
SELECT
    'VW_V2_GIFTSUMMARIES', 'Gift Summary Information', 'Maximum', '${COLUMN_PREFIX}MAX_VALUE', 'MAX_VALUE', 5;


-- Associated the same custom filters and segmentation types that were tied to the V1 view
INSERT REPORTCUSTOMFILTERDEFINITION_REPORTDATASUBSOURCE
SELECT reportCustomFilterDefinitions_REPORTCUSTOMFILTERDEFINITION_ID,
(SELECT REPORTSUBSOURCE_ID FROM REPORTDATASUBSOURCE WHERE VIEW_NAME LIKE '%V2_%'
    AND REPLACE(VIEW_NAME, 'V2_', '') IN
    (SELECT VIEW_NAME FROM REPORTDATASUBSOURCE WHERE REPORTDATASUBSOURCE.REPORTSUBSOURCE_ID = REPORTCUSTOMFILTERDEFINITION_REPORTDATASUBSOURCE.reportDataSubSource_REPORTSUBSOURCE_ID)),
(SELECT REPORTSUBSOURCE_ID FROM REPORTDATASUBSOURCE WHERE VIEW_NAME LIKE '%V2_%'
    AND REPLACE(VIEW_NAME, 'V2_', '') IN
    (SELECT VIEW_NAME FROM REPORTDATASUBSOURCE WHERE REPORTDATASUBSOURCE.REPORTSUBSOURCE_ID = REPORTCUSTOMFILTERDEFINITION_REPORTDATASUBSOURCE.reportDataSubSource_REPORTSUBSOURCE_ID)),
reportCustomFilterDefinitions_REPORTCUSTOMFILTERDEFINITION_ID + (SELECT REPORTSUBSOURCE_ID FROM REPORTDATASUBSOURCE WHERE VIEW_NAME LIKE '%V2_%'
    AND REPLACE(VIEW_NAME, 'V2_', '') IN
    (SELECT VIEW_NAME FROM REPORTDATASUBSOURCE WHERE REPORTDATASUBSOURCE.REPORTSUBSOURCE_ID = REPORTCUSTOMFILTERDEFINITION_REPORTDATASUBSOURCE.reportDataSubSource_REPORTSUBSOURCE_ID))
FROM REPORTCUSTOMFILTERDEFINITION_REPORTDATASUBSOURCE
WHERE (SELECT REPORTSUBSOURCE_ID FROM REPORTDATASUBSOURCE WHERE VIEW_NAME LIKE '%V2_%'
    AND REPLACE(VIEW_NAME, 'V2_', '') IN
    (SELECT VIEW_NAME FROM REPORTDATASUBSOURCE WHERE REPORTDATASUBSOURCE.REPORTSUBSOURCE_ID = REPORTCUSTOMFILTERDEFINITION_REPORTDATASUBSOURCE.reportDataSubSource_REPORTSUBSOURCE_ID)) IS NOT NULL
AND NOT EXISTS
    (SELECT * FROM REPORTCUSTOMFILTERDEFINITION_REPORTDATASUBSOURCE B
    WHERE B.reportCustomFilterDefinitions_REPORTCUSTOMFILTERDEFINITION_ID = REPORTCUSTOMFILTERDEFINITION_REPORTDATASUBSOURCE.reportCustomFilterDefinitions_REPORTCUSTOMFILTERDEFINITION_ID
    AND B.reportDataSubSource_REPORTSUBSOURCE_ID =
    (SELECT REPORTSUBSOURCE_ID FROM REPORTDATASUBSOURCE WHERE VIEW_NAME LIKE '%V2_%'
        AND REPLACE(VIEW_NAME, 'V2_', '') IN
        (SELECT VIEW_NAME FROM REPORTDATASUBSOURCE WHERE REPORTDATASUBSOURCE.REPORTSUBSOURCE_ID = REPORTCUSTOMFILTERDEFINITION_REPORTDATASUBSOURCE.reportDataSubSource_REPORTSUBSOURCE_ID)));


INSERT REPORTSEGMENTATIONTYPE_REPORTDATASUBSOURCE
SELECT
reportSegmentationTypes_REPORTSEGMENTATIONTYPE_ID,
(SELECT REPORTSUBSOURCE_ID FROM REPORTDATASUBSOURCE WHERE VIEW_NAME LIKE '%V2_%'
    AND REPLACE(VIEW_NAME, 'V2_', '') IN
    (SELECT VIEW_NAME FROM REPORTDATASUBSOURCE WHERE REPORTDATASUBSOURCE.REPORTSUBSOURCE_ID = REPORTSEGMENTATIONTYPE_REPORTDATASUBSOURCE.reportDataSubSource_REPORTSUBSOURCE_ID)),
(SELECT REPORTSUBSOURCE_ID FROM REPORTDATASUBSOURCE WHERE VIEW_NAME LIKE '%V2_%'
    AND REPLACE(VIEW_NAME, 'V2_', '') IN
    (SELECT VIEW_NAME FROM REPORTDATASUBSOURCE WHERE REPORTDATASUBSOURCE.REPORTSUBSOURCE_ID = REPORTSEGMENTATIONTYPE_REPORTDATASUBSOURCE.reportDataSubSource_REPORTSUBSOURCE_ID)),
REPORTSEGMENTATIONTYPE_ID
FROM REPORTSEGMENTATIONTYPE_REPORTDATASUBSOURCE
WHERE (SELECT REPORTSUBSOURCE_ID FROM REPORTDATASUBSOURCE WHERE VIEW_NAME LIKE '%V2_%'
    AND REPLACE(VIEW_NAME, 'V2_', '') IN
    (SELECT VIEW_NAME FROM REPORTDATASUBSOURCE WHERE REPORTDATASUBSOURCE.REPORTSUBSOURCE_ID = REPORTSEGMENTATIONTYPE_REPORTDATASUBSOURCE.reportDataSubSource_REPORTSUBSOURCE_ID)) IS NOT NULL
AND NOT EXISTS
    (SELECT * FROM REPORTSEGMENTATIONTYPE_REPORTDATASUBSOURCE B
    WHERE B.reportSegmentationTypes_REPORTSEGMENTATIONTYPE_ID = REPORTSEGMENTATIONTYPE_REPORTDATASUBSOURCE.reportSegmentationTypes_REPORTSEGMENTATIONTYPE_ID
    AND B.reportDataSubSource_REPORTSUBSOURCE_ID =
    (SELECT REPORTSUBSOURCE_ID FROM REPORTDATASUBSOURCE WHERE VIEW_NAME LIKE '%V2_%'
    AND REPLACE(VIEW_NAME, 'V2_', '') IN
    (SELECT VIEW_NAME FROM REPORTDATASUBSOURCE WHERE REPORTDATASUBSOURCE.REPORTSUBSOURCE_ID = REPORTSEGMENTATIONTYPE_REPORTDATASUBSOURCE.reportDataSubSource_REPORTSUBSOURCE_ID)));
