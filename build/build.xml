<?xml version="1.0" encoding="UTF-8"?>
<project name="clementine" basedir=".." default="8. Redeploy and Restart Tomcat">

    <import file="clementine-build.xml"/>
	<property file="${basedir}/build/build.properties" />
	<property file="${basedir}/jasperserver/jasperserver.properties" />
	<property name="build.env" value="dev"/>
	<tstamp prefix="build" />

	<property file="${commonBuild.dir}/commonBuild.properties"/>
	<import file="${commonBuild.dir}/ivyBuild.xml"/>

	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		<classpath>
			<pathelement location="${antcontrib.jar}" />
		</classpath>
	</taskdef>


	<target name="0. Clean" description="Cleans the staging area. Does not undeploy the application(s).">
		<antcall target="clean" />
	</target>

	<target name="1. Deploy Exploded War" description="Deploys the exploded war.">
		<antcall target="deploy-exploded-war" />
	</target>

	<target name="1.1 Deploy Exploded War - MPX/Stand Alone" description="Deploys the exploded war.">
		<antcall target="deploy-exploded-war-mpx" />
	</target>

	<target name="2. Deploy War" description="Deploys the unexploded war.">
		<antcall target="deploy-integrated-war" />
	</target>

	<target name="2.1 Deploy War - MPX/Stand Alone" description="Deploys the unexploded war.">
		<antcall target="deploy-integrated-war-mpx" />
	</target>

	<target name="3. Undeploy War" description="Undeploys war file(s).">
		<antcall target="undeploy-war" />
	</target>

	<target name="4. Start Tomcat - Debug Mode">
	    <java jar="${appserver.home}/bin/bootstrap.jar" fork="true">
	        <jvmarg value="-Dcatalina.home=${appserver.home}"/>
	        <jvmarg value="-Xdebug "/>
	        <jvmarg value="-Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n"/>
	    	<jvmarg value="-Xms128m" />
	    	<jvmarg value="-Xmx512m" />
	    	<jvmarg value="-XX:PermSize=128m"/>
	    	<jvmarg value="-XX:MaxPermSize=256m" />
	    	<jvmarg value="-Dcom.sun.management.jmxremote"/>
	    	<jvmarg value="-Dmysql.host=localhost"/>
	    	<jvmarg value="-Dmysql.port=3306"/>
	    	<jvmarg value="-DcontextPrefix="/>
	    </java>
	</target>

	<target name="5. Stop Tomcat">
	    <java jar="${appserver.home}/bin/bootstrap.jar" fork="true">
	        <jvmarg value="-Dcatalina.home=${appserver.home}"/>
	        <arg value="stop"/>
	    </java>
	</target>

	<target name="6. Generate Java Docs" description="Generates Javadocs for the entire application.">
		<antcall target="generate-javadocs" />
	</target>

	<target name="7. Deploy and Start Tomcat" depends="3. Undeploy War, 2. Deploy War, 4. Start Tomcat - Debug Mode"/>

	<target name="8. Redeploy and Restart Tomcat">
		<trycatch>
			<try>
				<antcall target="5. Stop Tomcat"/>
			</try>
		</trycatch>
		<sleep seconds="15"/>
		<antcall target="3. Undeploy War"/>
		<antcall target="1. Deploy Exploded War"/>
		<antcall target="4. Start Tomcat - Debug Mode"/>
	</target>

	<target name="9.0 Load Data">
		<!-- The Guru Database-->
		<sql driver="${mysql.db.driver}"
	          url="${mysql.db.url}"
	          userid="${mysql.db.user}"
	          password="${mysql.db.pw}"
	          encoding="UTF-8"
	          classpath="${mysql.db.classpath}"
	     	  delimiter="$$">
	     	<transaction src="${basedir}/db/prod/domain/functions.sql"/>
	     </sql>

	     <sql driver="${mysql.db.driver}"
	          url="${mysql.db.url}"
	          userid="${mysql.db.user}"
	          password="${mysql.db.pw}"
	          encoding="UTF-8"
	          classpath="${mysql.db.classpath}">
	     	<transaction src="${basedir}/db/prod/domain/clearTable.sql"/>

	     	<!-- Add development data -->
	     	<transaction src="${basedir}/db/prod/domain/orangeLeapReports.sql"/>
	     </sql>

		<!-- Orangeleap database-->
		<sql driver="${orangeleap.mysql.db.driver}"
			          url="${orangeleap.mysql.db.url}"
			          userid="${orangeleap.mysql.db.user}"
			          password="${orangeleap.mysql.db.pw}"
			          encoding="UTF-8"
			          classpath="${orangeleap.mysql.db.classpath}"
					  delimiter="$$">
					<!-- Add functions to orangeleap database-->
					<transaction src="${basedir}/db/prod/domain/functions.sql"/>
		</sql>

		<sql driver="${orangeleap.mysql.db.driver}"
			          url="${orangeleap.mysql.db.url}"
			          userid="${orangeleap.mysql.db.user}"
			          password="${orangeleap.mysql.db.pw}"
			          encoding="UTF-8"
					  classpath="${orangeleap.mysql.db.classpath}">
					<!-- Add views to orangeleap database-->
			     	<transaction src="${basedir}/db/prod/domain/orangeLeapReportViews.sql"/>
		</sql>

	</target>


	<target name="9.1 Load Split Database Data" description="Deploy build output and populate database" >

		<!-- clear and recreate schemas -->
		<property name="overrideUrl1" value="jdbc:mysql://${mysql.db.host}:${mysql.db.port}/?autoReconnect=true&amp;useUnicode=true" />
        <script language="javascript"> <![CDATA[
           self.getProject().setProperty("mysql.db.url", overrideUrl1);
        ]]> </script>

		<sql driver="${mysql.db.driver}"
		      url="${mysql.db.url}"
		      userid="${mysql.db.user}"
		      password="${mysql.db.pw}"
		      encoding="UTF-8"
		      classpath="${mysql.db.classpath}"
		      delimiter=";"
			>
			<transaction src="${basedir}/db/clearSchema.sql"/>
		</sql>

		<!-- populate theguru schema -->

		<property name="overrideUrl2" value="jdbc:mysql://${mysql.db.host}:${mysql.db.port}/theguru?autoReconnect=true&amp;useUnicode=true" />
        <script language="javascript"> <![CDATA[
           self.getProject().setProperty("mysql.db.url", overrideUrl2);
        ]]> </script>

		<property name="overrideUrl3" value="jdbc:mysql://${mysql.db.host}:${mysql.db.port}/orangeleap?autoReconnect=true&amp;useUnicode=true" />
        <script language="javascript"> <![CDATA[
           self.getProject().setProperty("orangeleap.mysql.db.url", overrideUrl3);
        ]]> </script>

		<property name="localhost.mysql.db.url" value="jdbc:mysql://localhost:${mysql.db.port}/orangeleap?autoReconnect=true&amp;useUnicode=true" />

		<property name="jasperserverCreateAndLoadSchema" value="JasperserverCreateAndLoadSchema_theguru.sql" />

		<antcall target="create.load.schema" />


		<!-- populate company1theguru schema -->

		<property name="overrideUrl4" value="jdbc:mysql://${mysql.db.host}:${mysql.db.port}/company1theguru?autoReconnect=true&amp;useUnicode=true" />
        <script language="javascript"> <![CDATA[
           self.getProject().setProperty("mysql.db.url", overrideUrl4);
        ]]> </script>

		<!-- Add the views to the Orangeleap schema-->

		<property name="overrideUrl5" value="jdbc:mysql://${mysql.db.host}:${mysql.db.port}/company1?autoReconnect=true&amp;useUnicode=true" />
        <script language="javascript"> <![CDATA[
           self.getProject().setProperty("orangeleap.mysql.db.url", overrideUrl5);
        ]]> </script>

		<property name="overrideUrl5localhost" value="jdbc:mysql://localhost:${mysql.db.port}/company1?autoReconnect=true&amp;useUnicode=true" />
        <script language="javascript"> <![CDATA[
           self.getProject().setProperty("localhost.mysql.db.url", overrideUrl5localhost);
        ]]> </script>

		<property name="overrideJasperserverCreateAndLoadSchema2" value="JasperserverCreateAndLoadSchema_company1.sql" />
        <script language="javascript"> <![CDATA[
           self.getProject().setProperty("jasperserverCreateAndLoadSchema", overrideJasperserverCreateAndLoadSchema2);
        ]]> </script>

		<antcall target="create.load.schema" />


		<!-- populate demotheguru schema -->

		<property name="overrideUrl10" value="jdbc:mysql://${mysql.db.host}:${mysql.db.port}/demotheguru?autoReconnect=true&amp;useUnicode=true" />
        <script language="javascript"> <![CDATA[
           self.getProject().setProperty("mysql.db.url", overrideUrl10);
        ]]> </script>


		<!-- Add the views to the Orangeleap schema-->

		<property name="overrideUrl11" value="jdbc:mysql://${mysql.db.host}:${mysql.db.port}/demo?autoReconnect=true&amp;useUnicode=true" />
        <script language="javascript"> <![CDATA[
           self.getProject().setProperty("orangeleap.mysql.db.url", overrideUrl11);
        ]]> </script>

		<property name="overrideUrl11localhost" value="jdbc:mysql://localhost:${mysql.db.port}/demo?autoReconnect=true&amp;useUnicode=true" />
        <script language="javascript"> <![CDATA[
           self.getProject().setProperty("localhost.mysql.db.url", overrideUrl11localhost);
        ]]> </script>

		<property name="overrideJasperserverCreateAndLoadSchema5" value="JasperserverCreateAndLoadSchema_company1.sql" />
        <script language="javascript"> <![CDATA[
           self.getProject().setProperty("jasperserverCreateAndLoadSchema", overrideJasperserverCreateAndLoadSchema5);
        ]]> </script>

		<antcall target="create.load.schema" />


		<!-- populate sandboxtheguru schema -->

		<property name="overrideUrl12" value="jdbc:mysql://${mysql.db.host}:${mysql.db.port}/sandboxtheguru?autoReconnect=true&amp;useUnicode=true" />
        <script language="javascript"> <![CDATA[
           self.getProject().setProperty("mysql.db.url", overrideUrl12);
        ]]> </script>


		<!-- Add the views to the Orangeleap schema-->

		<property name="overrideUrl13" value="jdbc:mysql://${mysql.db.host}:${mysql.db.port}/sandbox?autoReconnect=true&amp;useUnicode=true" />
        <script language="javascript"> <![CDATA[
           self.getProject().setProperty("orangeleap.mysql.db.url", overrideUrl13);
        ]]> </script>

		<property name="overrideUrl13localhost" value="jdbc:mysql://localhost:${mysql.db.port}/sandbox?autoReconnect=true&amp;useUnicode=true" />
        <script language="javascript"> <![CDATA[
           self.getProject().setProperty("localhost.mysql.db.url", overrideUrl13localhost);
        ]]> </script>

		<property name="overrideJasperserverCreateAndLoadSchema6" value="JasperserverCreateAndLoadSchema_company1.sql" />
        <script language="javascript"> <![CDATA[
           self.getProject().setProperty("jasperserverCreateAndLoadSchema", overrideJasperserverCreateAndLoadSchema6);
        ]]> </script>

		<antcall target="create.load.schema" />

	</target>


	<target name="9.2 Load Schema and Base Data(Can be used for Prod)">
	     <sql driver="${mysql.db.driver}"
		          url="${mysql.db.url}"
		          userid="${mysql.db.user}"
		          password="${mysql.db.pw}"
		          encoding="UTF-8"
   		  		  classpath="${mysql.db.classpath}"
	              delimiter=";"
	     	>
		    <transaction src="${basedir}/db/prod/domain/TheguruCreateAndLoadSchema-NoFunctions.sql"/>
		    <transaction src="${basedir}/db/prod/domain/TheguruCreateFunctions-Part1.sql"/>
	     	<transaction src="${basedir}/db/prod/domain/JasperserverCreateAndLoadSchema_company1.sql"/>
	     	<transaction src="${basedir}/db/prod/domain/constituentURL.sql"/>
  	     </sql>

	     <sql driver="${mysql.db.driver}"
		          url="${mysql.db.url}"
		          userid="${mysql.db.user}"
		          password="${mysql.db.pw}"
		          encoding="UTF-8"
   		  		  classpath="${mysql.db.classpath}"
	              delimiter="$$"
	     	>
	     	<transaction src="${basedir}/db/prod/domain/TheguruCreateFunctions-Part2.sql"/>
 	     </sql>


		<!-- Add the views to the Orangeleap schema-->

		<sql driver="${orangeleap.mysql.db.driver}"
			          url="${orangeleap.mysql.db.url}"
			          userid="${orangeleap.mysql.db.user}"
			          password="${orangeleap.mysql.db.pw}"
			          encoding="UTF-8"
				      classpath="${orangeleap.mysql.db.classpath}"
					  delimiter="$$">
					<!-- Add functions to orangeleap database-->
					<transaction src="${basedir}/db/prod/domain/functions.sql"/>
		</sql>

		<sql driver="${orangeleap.mysql.db.driver}"
			          url="${orangeleap.mysql.db.url}"
			          userid="${orangeleap.mysql.db.user}"
			          password="${orangeleap.mysql.db.pw}"
			          encoding="UTF-8"
				      classpath="${orangeleap.mysql.db.classpath}">
					<!-- Add views to orangeleap database-->
			     	<transaction src="${basedir}/db/prod/domain/orangeLeapReportViews.sql"/>
		</sql>


	</target>

	<target name="Load OrangeLeap Data Only (Views and Functions)">
		<!-- Orangeleap database-->
		<sql driver="${orangeleap.mysql.db.driver}"
			          url="${orangeleap.mysql.db.url}"
			          userid="${orangeleap.mysql.db.user}"
			          password="${orangeleap.mysql.db.pw}"
			          encoding="UTF-8"
			          classpath="${orangeleap.mysql.db.classpath}"
					  delimiter="$$">
					<!-- Add functions to orangeleap database-->
					<transaction src="${basedir}/db/prod/domain/functions.sql"/>
		</sql>

		<sql driver="${orangeleap.mysql.db.driver}"
			          url="${orangeleap.mysql.db.url}"
			          userid="${orangeleap.mysql.db.user}"
			          password="${orangeleap.mysql.db.pw}"
			          encoding="UTF-8"
					  classpath="${orangeleap.mysql.db.classpath}">
					<!-- Add views to orangeleap database-->
			     	<transaction src="${basedir}/db/prod/domain/orangeLeapReportViews.sql"/>
		</sql>

	</target>

	<target name="10. Import JasperServer Repository">
	  <echo message="${os.name} ${os.arch} ${os.version}"/>
	  <exec dir="${jasperserver.bin}\scripts\" executable="cmd" os="Windows XP" >
	    <arg value="/c"/>
	    <arg value="js-import.bat" />
	  	<arg value="--input-zip"/>
	    <arg value="${basedir}\jasperserver\repository.zip"/>
	  </exec>

	  <exec dir="${jasperserver.bin}/scripts/" executable="./js-import.sh" os="Mac OS X,unix">
	    <arg value="--input-zip"/>
	    <arg value="${basedir}/jasperserver/repository.zip"/>
	  </exec>
	</target>

	<target name="11. Export JasperServer Repository">
	  <echo message="${os.name} ${os.arch} ${os.version}"/>
	  <exec dir="${jasperserver.bin}/scripts/" executable="cmd" os="Windows XP">
	    <arg value="/c"/>
	  	<arg value="js-export.bat" />
	  	<arg value="--everything"/>
	  	<arg value="--output-zip"/>
	  	<arg value="${basedir}\jasperserver\repository.zip"/>
	  </exec>

	  <exec os="Mac OS X,unix" dir="${jasperserver.bin}/scripts/" executable="./js-export.sh">
	    <arg value="--everything"/>
	    <arg value="--output-zip"/>
	    <arg value="${basedir}/jasperserver/repository.zip"/>
	  </exec>
	</target>

	<target name="javadoc"  description="Compiles the library API documentation.">
		<mkdir dir="./dist/javadoc"/>
		<delete dir="./dist/javadoc/net"/>
		<delete>
			<fileset dir="./dist/javadoc" includes="**/*.*" />
		</delete>
		<javadoc packagenames="com.mpower.*"
				sourcepath="./src"
				destdir="./dist/javadoc"
				author="true"
				version="true"
				use="true"
				windowtitle="Report Wizard API version ${version}"
				maxmemory="128m">
			<doctitle><![CDATA[<span style="font-family:verdana,arial,helvetica,sans-serif;font-size:16pt;font-style:normal;color:#000000;"><b><font color="#808080">Jasper</font><font color="#990000">Reports</font></b></span><br><span style="font-family:verdana,arial,helvetica,sans-serif;font-size:10pt;font-weight:bold;color:#000000;">version ${version}</span>]]></doctitle>
			<bottom><![CDATA[<span style="font-decoration:none;font-family:verdana,arial,helvetica,sans-serif;font-size:8pt;font-style:normal;color:#000000;">&copy; 2001-2006 JasperSoft Corporation <a href="http://www.jaspersoft.com" target="_blank" style="color:#000000;">www.jaspersoft.com</a></span>]]></bottom>
			<classpath>
				<fileset dir="./lib">
					<include name="**/*.jar"/>
				</fileset>
				<pathelement location="./build/classes"/>
			</classpath>
		</javadoc>
	</target>

	<target name="app.synch" description="Synchs the XMHTML, JSP, JS, CSS, and Images of the project with a running application.">
		<antcall target="app.synch.internal" />
	</target>

	<target name="usage">
		<echo>This is the build file for TheGuru</echo>
		<echo>Use "Clean" to delete the temporary build directories in the project.</echo>
		<echo>Use "Deploy Exploded War" to deploy the application as an exploded war</echo>
		<echo>Use "Deploy War" to deploy the war unexploded</echo>
		<echo>Use "Start Tomcat - Debug Mode" to start Tomcat in debug mode.
			You will need to configure remote debugging in eclipse (port 8000) to connect.</echo>
		<echo>Use "Stop Tomcat" to shut down the running server</echo>
		<echo>Use "Generate Java Docs" to generate javadocs from source code</echo>
		<echo>Use "app.synch" to synchronize the JSPs, images, CSS,
			and JS files with the server.  This can be configured to happen
			automatically when something is saved in Eclipse.</echo>
	</target>

</project>
