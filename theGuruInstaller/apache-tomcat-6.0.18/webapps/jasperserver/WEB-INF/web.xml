<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.4"
    xmlns="http://java.sun.com/xml/ns/j2ee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

    <display-name>JasperServer UI application</display-name>
    
    <context-param>
        <param-name>webAppRootKey</param-name>
        <param-value>jasperserver.root</param-value>
    </context-param>

    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>
    
    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>/WEB-INF/log4j.properties</param-value>
    </context-param>
    
    <!-- listener to load the root application context -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>/WEB-INF/applicationContext*.xml</param-value>
    </context-param>

    <context-param>
        <param-name>contextClass</param-name>
        <param-value>com.jaspersoft.jasperserver.war.util.JSWebApplicationContext</param-value>
    </context-param>

    <!-- resources initializer -->
    <listener>
      <listener-class>com.tonbeller.tbutils.res.ResourcesFactoryContextListener</listener-class>
    </listener>

    <!-- optional? now in JPivot by default  -->
    <context-param>
      <param-name>contextFactory</param-name>
      <param-value>com.tonbeller.wcf.controller.RequestContextFactoryImpl</param-value>
    </context-param>
    
    <!-- SecurityContextHolder.setStrategyName(MODE_INHERITABLETHREADLOCAL) -->
    <listener>
        <listener-class>com.jaspersoft.jasperserver.war.util.SecurityContextHolderStrategyInitializer</listener-class>
    </listener>

    <listener>
        <display-name>Session mutex</display-name>
        <listener-class>org.springframework.web.util.HttpSessionMutexListener</listener-class>
    </listener>    

    <listener>
        <listener-class>com.jaspersoft.jasperserver.war.util.SpringBeanServletContextPlublisher</listener-class>
    </listener>
    
    <context-param>
        <param-name>sessionPublishedBeans</param-name>
        <param-value>configurationBean,heartbeatBean</param-value>
    </context-param>
    
    <filter>
        <filter-name>characterEncodingProxyFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <init-param>
            <param-name>targetBeanName</param-name>
            <param-value>characterEncodingFilter</param-value>
        </init-param>
    </filter>
    
    <filter>
        <filter-name>securityFilter</filter-name>
        <filter-class>org.acegisecurity.util.FilterToBeanProxy</filter-class>
        <init-param>
            <param-name>targetClass</param-name>
            <param-value>org.acegisecurity.util.FilterChainProxy</param-value>
        </init-param>
    </filter>
    
    <!-- Start of SiteMesh filter config -->
    <filter>
    <filter-name>sitemesh</filter-name>
        <filter-class>com.opensymphony.module.sitemesh.filter.PageFilter</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>characterEncodingProxyFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>securityFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
    <filter-name>sitemesh</filter-name>
    <url-pattern>/*</url-pattern>
    <dispatcher>FORWARD</dispatcher>
    </filter-mapping>
    
    <!-- Filter to help parse the file name and extension of uplaoded files-->
     <filter>
        <filter-name>multiPartHelperFilter</filter-name>
        <filter-class>com.jaspersoft.jasperserver.war.common.UploadMultipartFilter</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>multiPartHelperFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

  <filter>
    <filter-name>JPivotController</filter-name>
    <filter-class>com.tonbeller.wcf.controller.RequestFilter</filter-class>

<!-- to avoid double clicking problem in the OLAP view list
    <init-param>
      <param-name>indexJSP</param-name>
      <param-value>/olap/viewOlap.html</param-value>
      <description>forward to this page if session is new</description>
    </init-param>
-->
    <init-param>
      <description>URI of error page</description>
      <param-name>errorJSP</param-name>
      <param-value>/olap/error.html</param-value>
    </init-param>
    <init-param>
      <description>This page is displayed if a the user clicks
        on a query before the previous query has finished</description>
      <param-name>busyJSP</param-name>
      <param-value>/olap/busy.html</param-value>
    </init-param>
    <!--
    <init-param>
      <param-name>forceExtension</param-name>
      <param-value>.faces</param-value>
      <description>replace .jsp with .faces</description>
    </init-param>
    -->
  </filter>

  <filter-mapping>
    <filter-name>JPivotController</filter-name>
    <url-pattern>/olap/viewOlap.html</url-pattern>
  </filter-mapping>

<!--
-->
    <!-- dispatcher servlet for the application -->
    <servlet>
        <servlet-name>jasperserver</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>/WEB-INF/jasperserver-*.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>jasperserver</servlet-name>
        <url-pattern>*.html</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>jasperserver</servlet-name>
        <url-pattern>/fileview/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>jasperserver</servlet-name>
        <url-pattern>/reportimage/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>jasperserver</servlet-name>
        <url-pattern>/jrpxml/*</url-pattern>
    </servlet-mapping>
    

  <!-- MondrianXmlaServlet replaced with JasperXmlaServlet -->
  <!--
  <servlet>
    <servlet-name>MondrianXmlaServlet</servlet-name>
    <servlet-class>mondrian.xmla.impl.DefaultXmlaServlet</servlet-class>
    <init-param>
      <param-name>DataSourcesConfig</param-name>
      <param-value>datasources.xml</param-value>
    </init-param>
  </servlet>
  -->

  <!-- XML for Analysis Servlet -->
  <servlet>
    <servlet-name>JasperXmlaServlet</servlet-name>
    <servlet-class>com.jaspersoft.jasperserver.war.xmla.XmlaServletImpl</servlet-class>
  </servlet>

  <servlet-mapping>
    <servlet-name>JasperXmlaServlet</servlet-name>
    <url-pattern>/xmla</url-pattern>
  </servlet-mapping>

  <!-- jfreechart provided servlet -->
  <servlet>
    <servlet-name>DisplayChart</servlet-name>
    <servlet-class>org.jfree.chart.servlet.DisplayChart</servlet-class>
  </servlet>

  <!-- jfreechart provided servlet -->
  <servlet>
    <description>Serves up chart images for OLAP printing to PDF and Excel.</description>
    <servlet-name>GetChart</servlet-name>
    <!--display-name>GetChart</display-name-->
    <servlet-class>com.jaspersoft.jasperserver.war.OlapGetChart</servlet-class>
  </servlet>
  <servlet>
    <description>Generate PDF and Excel files for download based on OLAP model.</description>
    <servlet-name>Print</servlet-name>
    <!--display-name>Print</display-name-->
    <servlet-class>com.jaspersoft.jasperserver.war.OlapPrint</servlet-class>
  </servlet>

  <servlet-mapping>
    <servlet-name>DisplayChart</servlet-name>
    <url-pattern>/DisplayChart</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>Print</servlet-name>
    <url-pattern>/olap/Print</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>GetChart</servlet-name>
    <url-pattern>/GetChart</url-pattern>
  </servlet-mapping>

    <!-- web services support -->
    
    <!-- webService Axis2 support START -->
    <servlet>
        <servlet-name>Axis2Servlet</servlet-name>
        <!--display-name>Apache-Axis2 Servlet</display-name-->
        <servlet-class>org.apache.axis.transport.http.AxisServlet</servlet-class>
    <!--
      <init-param>
            <param-name>repository</param-name>
            <param-value>/WEB-INF</param-value>
        </init-param>
        -->
        <load-on-startup>1</load-on-startup>
    </servlet>
    
    <servlet-mapping>
        <servlet-name>Axis2Servlet</servlet-name>
        <url-pattern>/services/*</url-pattern>
    </servlet-mapping>
    <!-- webService Axis2 support END -->
    


    <session-config>
        <!-- Default to 20 minute session timeouts -->
        <session-timeout>20</session-timeout>
    </session-config>

    <jsp-config>
    
        <taglib>
            <taglib-uri>/WEB-INF/jasperserver.tld</taglib-uri>
            <taglib-location>/WEB-INF/jasperserver.tld</taglib-location>
        </taglib> 

        <taglib>
             <taglib-uri>/spring</taglib-uri>
             <taglib-location>/WEB-INF/spring.tld</taglib-location>
        </taglib>

        <taglib>
          <taglib-uri>http://www.tonbeller.com/wcf</taglib-uri>
          <taglib-location>/WEB-INF/wcf/wcf-tags.tld</taglib-location>
        </taglib>

        <taglib>
          <taglib-uri>http://www.tonbeller.com/jpivot</taglib-uri>
          <taglib-location>/WEB-INF/jpivot/jpivot-tags.tld</taglib-location>
        </taglib>

    </jsp-config>

    <resource-ref>
    <description>JasperServer Metadata repository</description>
        <res-ref-name>jdbc/jasperserver</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
    </resource-ref>
    
    <resource-ref>
    <description>SugarCRM example database</description>
        <res-ref-name>jdbc/sugarcrm</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
    </resource-ref>
    
    <resource-ref>
    <description>Foodmart database</description>
        <res-ref-name>jdbc/foodmart</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
    </resource-ref>
    
    <welcome-file-list>
        <welcome-file>index.htm</welcome-file>
    </welcome-file-list>
   
    <!-- currently the W3C havent settled on a media type for WSDL;
    http://www.w3.org/TR/2003/WD-wsdl12-20030303/#ietf-draft
    for now we go with the basic 'it's XML' response -->
  <mime-mapping>
    <extension>wsdl</extension>
     <mime-type>text/xml</mime-type>
  </mime-mapping>
  

  <mime-mapping>
    <extension>xsd</extension>
    <mime-type>text/xml</mime-type>
  </mime-mapping>

</web-app>

