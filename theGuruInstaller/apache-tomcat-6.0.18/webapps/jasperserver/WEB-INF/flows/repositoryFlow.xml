<?xml version="1.0" encoding="UTF-8"?>
	
<flow xmlns="http://www.springframework.org/schema/webflow"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/webflow
						http://www.springframework.org/schema/webflow/spring-webflow-1.0.xsd">

	<start-state idref="initAction"/>
	
	<action-state id="initAction">
		<action bean="repositoryAction"/>
		<transition on="success" to="defaultView"/>
	</action-state>

	<view-state id="defaultView" view="repository/defaultView">
		<entry-actions>
			<set attribute="prevForm" value="${'defaultView'}" scope="flow"/>
		</entry-actions>
		<transition on="success" to="defaultView"/>
		<transition on="ViewReport" to="viewReport"/>
		<!--<transition on="ViewOlapModel" to="viewOlapModel"/>-->
		<transition on="ScheduleReport" to="reportJobs"/>
		<transition on="runReportInBackground" to="runReportInBackground"/>
		<transition on="goToPage" to="goToPage"/>
		<!-- Handle back from SubFlows -->
		<transition on="back" to="initAction"/>
	</view-state>

	<action-state id="goToPage">
		<action bean="repositoryAction"/>
		<transition on="success" to="initAction"/>
	</action-state>

	<subflow-state id="viewReport" flow="viewReportFlow">
		<attribute-mapper>
			<input-mapper>
				<mapping source="requestParameters.resource" target="reportUnit"/>
				<mapping source="${true}" target="inhibitRequestParsing"/>
			</input-mapper>
		</attribute-mapper>
		<transition on="done" to="initAction"/>
		<transition on="cancel" to="initAction"/>
	</subflow-state>
<!--
	<subflow-state id="viewOlapModel" flow="viewOlapModelFlow">
		<attribute-mapper>
			<input-mapping as="name" value="${requestParameters.resource}"/>
		</attribute-mapper>
		<transition on="done" to="initAction"/>
		<transition on="cancel" to="initAction"/>
		<transition on="displayError" to="initAction"/>
	</subflow-state>
-->
	<view-state id="displayError" view="flowError">
		<entry-actions>
			<set attribute="prevForm" value="${'displayError'}" scope="flow"/>
		</entry-actions>
		<transition on="displayError" to="initAction"/>
	</view-state>

	<subflow-state id="reportJobs" flow="reportSchedulingFlow">
		<attribute-mapper>
			<input-mapper>
				<mapping source="requestParameters.resource" target="reportUnitURI"/>
			</input-mapper>
		</attribute-mapper>
		<transition on="done" to="initAction"/>
	</subflow-state>

	<subflow-state id="runReportInBackground" flow="reportJobFlow">
		<attribute-mapper>
			<input-mapper>
				<mapping source="${true}" target="isNewMode"/>
				<mapping source="${true}" target="isRunNowMode"/>
				<mapping source="requestParameters.resource" target="reportUnitURI"/>
			</input-mapper>
		</attribute-mapper>
		<transition on="cancel" to="initAction"/>
		<transition on="saved" to="initAction"/>
	</subflow-state>

	<end-state id="cancel"/>

	<!-- exceptions handling -->
	<decision-state id="backFromError">
		<if test="${not (flowScope.prevForm == null or flowScope.prevForm == '')}" then="${flowScope.prevForm}" else="initAction"/>
	</decision-state>
	<view-state id="errorPage" view="JSErrorPage" />
	<global-transitions>
		<transition on="backFromErrorPage" to="backFromError"/>
		<transition on-exception="java.lang.Throwable" to="errorPage"/>
	</global-transitions>
	<!-- end exceptions handling -->

	<import resource="repositoryBeans.xml"/>
</flow>